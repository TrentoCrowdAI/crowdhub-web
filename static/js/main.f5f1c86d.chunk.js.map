{"version":3,"sources":["Services/RunnableWorkflowService/models/Runs.js","Components/common/BackButton.js","Services/rest/utils.js","config.js","Components/common/LoadingContainer.js","images/menu.svg","Services/rest/WorkflowsService.js","Services/AuthService.js","Components/common/Breadcrumbs.js","Components/common/LoadingButton.js","Components/common/DeleteButtonAndModal.js","Services/rest/UsersService.js","Services/rest/ProjectCollaborationsService.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/AddNewCollaboration.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/CollaborationsList.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/ShareProjectButtonAndModal.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/ShareWorkflowButtonAndModal.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Services/rest/ProjectsService.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/HtmlModalEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoBlockCost.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","Services/RunnableWorkflowService/adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockPortModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockPortFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/EditBlockingContextModalAndButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingCheckbox.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","Services/RunnableWorkflowService/models/RunnableWorkflow.js","Services/RunnableWorkflowService/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/ReadOnlyWorkflowDashboard.js","Components/Workflows/WorkflowDashboard/EditableWorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Sidebar/Sidebar.js","Services/rest/AccountBalanceService.js","Components/Appbar/AccountInformation.js","Components/Appbar/AppBar.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js","Components/utils/events.js","Services/RunnableWorkflowService/models/Run.js","Services/rest/RunsService.js","Services/RunnableWorkflowService/models/BlockRun.js","Components/Projects/utils/route.js","Components/Login/Login.js"],"names":["Runs","runs","_this","this","Object","_Users_simone_Workspaces_Uni_Internship_servant_web_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","getLatestRun","containsRun","id","find","run","getId","getBlockRuns","blockId","map","getBlockRun","filter","blockRun","getFinishedRuns","isFinished","getRunningRuns","isRunning","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","__webpack_exports__","_ref","to","text","a","createElement","className","sendAndParseJSON","_callee","url","options","res","error","_Users_simone_Workspaces_Uni_Internship_servant_web_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","getOptionsWithAuthorizationHeadersIfSignedIn","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","AuthService","isInitialized","isSignedIn","getOptionsWithAuthorizationHeaders","headers","Authorization","concat","getBearerToken","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","d","WEBAPP_URL","API_URL","process","react_bootstrap__WEBPACK_IMPORTED_MODULE_0__","LoadingContainer","loading","children","animation","variant","module","exports","p","WORKFLOWS_URL","Errors","JSONtoWorkflow","id_project","_Users_simone_Workspaces_Uni_Internship_servant_web_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","projectId","parseInt","workflowToJSON","_ref2","name","description","graph","shared","getWorkflowsOfProject","_getWorkflowsOfProject","_Users_simone_Workspaces_Uni_Internship_servant_web_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","project","jsonList","_x","getWorkflow","_getWorkflow","workflow","_x2","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","log","info","t0","response","deleteWorkflow","_deleteWorkflow","saveAndStartWorkflow","_saveAndStartWorkflow","_callee6","_context6","startWorkflow","_startWorkflow","_callee7","startedRunId","_context7","estimateDoBlockCost","_estimateDoBlockCost","_callee8","workflowId","_context8","_authChangeListeners","auth2","init","_init","_waitForGapiToLoad","_loadAuth2Api","_notifyListeners","interval","setInterval","window","gapi","clearInterval","load","addOnAuthChangeListener","listener","push","renderSignInButton","containerId","onSignedIn","assertInitialized","signin2","render","onSuccess","forEach","get","signOut","_this2","currentUser","getAuthResponse","id_token","getUserInfo","getBasicProfile","LinkBreadcrumb","SimpleBreadcrumb","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","LoadingButton","isLoading","disabled","onClick","block","as","size","role","aria-hidden","DeleteButtonAndModal","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","react_default","DeleteButtonAndModal_DeleteModal","assign","onCancel","props","ignoreEventAnd","Component","DeleteModal","_Component2","_getPrototypeOf3","_len2","_key2","deleting","deleteError","onConfirmDeletion","asyncToGenerator","regenerator_default","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","Footer","Button","USERS_URL","JSONtoUser","email","imageUrl","picture","USER_SUGGETION_MIN_EMAIL_LENGTH","UsersService","findUsersByEmail","_findUsersByEmail","getById","_getById","PROJECT_COLLABORATIONS_URL","JSONToProjectCollaboration","userId","id_user","ProjectCollaborationsService","getCollaborationsOfProject","_getCollaborationsOfProject","createCollaboration","_createCollaboration","jsonToSend","receivedJSON","deleteCollaboration","_deleteCollaboration","collaborationId","AddNewCollaboration","fetchSuggestions","input","fetchSuggestionsFromService","users","filterUserAlreadyCollaborating","collaboratorIds","getUserIdsOfCollaborators","user","ownerId","collaboratorId","getCollaborations","collaboration","collaborations","Form","Group","Label","AddNewCollaboration_AutocompleteField","renderSuggestion","AddNewCollaboration_SuggestedUser","onCollaborationAdded","onSuggestionSelected","onAddUser","SuggestedUser","isAdding","added","_this3$props","_this3","_this$state","_this$props","ListGroupItem","Row","Col","xs","alt","width","src","AutocompleteField","DEFAULT_TIMEOUT","timeout","suggestions","isFetching","onInputChange","_this4","isTimeoutRunning","cancelTimeout","startTimeout","clearTimeout","setTimeout","onTimeoutElapsed","suggestion","_this5","_this$state2","fetchError","Control","onChange","e","target","ListGroup","CollaborationsList","onCollaborationDeleted","CollaborationsList_Collaboration","Collaboration","isRemoving","componentDidMount","fetchUser","getUserId","onRemoveUser","getCollaborationId","_ref4","ShareProjectButtonAndModal","ShareProjectButtonAndModal_ShareProjectModal","onClose","ShareProjectModal","fetchCollaborations","getProject","toConsumableArray","index","findIndex","splice","AddNewCollaboration_AddNewCollaboration","ProjectsTable","projects","onProjectDeleted","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","Link","ShareProjectButtonAndModal_ShareProjectButtonAndModal_ShareProjectButtonAndModal","ProjectsTable_EditButton","ProjectsTable_DeleteProjectButton","EditButton","_ref3","editProjectLink","DeleteProjectButton","DeleteButtonAndModal_DeleteButtonAndModal","ProjectsService","deleteProject","Title","ProjectsList","fetchProjects","componentWillUnmount","pendingProjectsRequest","getProjects","Container","Breadcrumb","Breadcrumbs","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","NoProjects","FetchProjectsError","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","type","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","BackButton","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","createProject","redirectToProjectsList","onProjectCreationFailed","history","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","WorkflowsService","objectSpread","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","ShareWorkflowButtonAndModal","ShareWorkflowButtonAndModal_ShareWorkflowModal","ShareWorkflowModal","isSaving","saveError","fetchWorkflow","getWorkflowId","shareWorkflow","unshareWorkflow","onSave","prevProps","prevState","snapshot","ShareWorkflowButtonAndModal_SharingPreferenceControl","SharingPreferenceControl","publicLink","getPublicLink","Check","checked","label","href","rel","PUBLIC_WORKFLOWS_PATH","WorkflowsTable","workflows","onWorkflowDeleted","onWorkflowUpdated","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WORKFLOWS_PATH","ShareWorkflowButtonAndModal_ShareWorkflowButtonAndModal","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","created_at","Date","updated_at","deleted_ad","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","event","onImport","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","InputGroup","FormControl","aria-label","Append","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","striped","bordered","ItemsTable_DeleteItemButton","onItemDeleted","keys","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsTable_ItemsTable","ProjectView","fetchProject","pendingProjectRequest","match","params","ProjectData","style","Tabs","defaultActiveKey","Tab","eventKey","title","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","EditProject","assertThisInitialized","updateProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","FetchingProject","UpdateProjectError","Projects_Projects","Projects","Switch","Route","path","exact","component","PROJECTS_URL","INVALID_WORKFLOW_DATA","JSONtoProject","projectToJSON","job","_getProjects","_getProject","jsonJob","_createProject","_updateProject","INVALID_PROJECT_DATA","_deleteProject","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","bem","strokeWidth","stroke","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","getModel","onModelUpdated","Model","parameters_Number","isRequired","isNaN","NumberWidget","Boolean","BooleanWidget","TextFromDropdownModel","getChoices","choice","choices","TextFromDropdown","onChangeValue","HtmlModalEditor","hideModal","es2015","HtmlModel","Html","handleEditorChange","EditorComponent","getEditor","onEditorChange","initialValue","menubar","editorInModal","Editor","ChoiceBuilderModel","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","AddChoice","isNewChoiceValid","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onFilePicked","Prepend","display","accept","multiple","readOnly","height","boxSizing","CodeEditorModalAndButton","code","onUpdateCode","CodeEditorModal_CodeEditorModal","CodeEditorModal","onCodeEdited","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","b","Math","floor","random","toString","slice","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","isDisabled","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","Item","BlockingContext_BlockingContext","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","BlockingContext","DoBlockCostWidget","estimateCost","estimatedCost","estimationError","estimating","getBlockId","onCostEstimated","getEstimatedCost","getBlockModel","parent","setEstimatedCost","renderEstimatedCost","renderCostNeverEstimated","renderLatestEstimatedCost","toFixed","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","ParameterContainerLineSeparator","UnsupportedParameter","_ref5","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","DefaultBlockNodeModel","_DefaultNodeModel","blockRuns","_runs","getLabel","setId","setLabel","blockTypeDefinition","latestBlockRun","wasStarted","isFailed","getRunnableBlocksCount","getAllParentBlocks","getRunningBlocksCount","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","getPorts","DefaultNodeModel","parents","blockParents","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","Spinner","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","FAILED","RunStates","RUNNING","FINISHED","NOT_STARTED","DoBlockRunAdapter","getRunId","publishRun","getCacheId","getState","waitRun","_getBlockRunOrNotStarted","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","BlockPortModel","linkWouldCreateRecursiveDependence","blockDependsOnItself","getBlock","getLinksAsList","sourcePort","targetPort","visitedBlockIds","connectedBlocks","getConnectedBlocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","connectedBlock","return","DefaultPortModel","BlockPortFactory","initialConfig","DefaultPortFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","registerFactories","registerLinkFactory","registerPortFactory","registerLabelFactory","DefaultLabelFactory","registerNodeFactories","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","onModelUpdate","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadLinkFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ButtonToolbar","ToggleButtonGroup","defaultValue","format","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","DropdownDownload","RunsControls_RunsControls","RunsControls_ExecutionCard","RunsControls_ResultsCard","ExecutionCard","onStart","isStarting","startText","RunsControls_RunsProgressBar","ResultsCard","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","max","WorkflowRunsControls","startError","waitForRunStateReceived","runnableWorkflow","addRunsListener","getRuns","removeRunsListener","RunsService","getDownloadLink","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","borderColor","aria-describedby","DEFAULT_WORKER_BLOCKED_MESSAGE","BlockingContextsModel","_enableContextForAllDoBlocks","getBlockingContextModelsOfDoBlocks","getDoBlockModels","_disableContextForAllDoBlocks","isSingleBlockingContextEnabledForAllDoBlocks","onlyOneContext","getBlocksArray","blocksWithEnabledBlockingContext","areSomeBlockingContextsEnabled","setContexts","toRemove","removeAllBlockingContexts","getDefaultContext","addContext","removeContext","workerBlockedMessage","isBlockingContextValid","CreateBlockingContext","togglePopoverButton","popoverContent","showPopover","registerListenerToClosePopoverWhenUserClicksOutside","clickListenerToClosePopoverWhenUserClicksOutside","composedPath","hidePopover","onCreated","onAdd","unregisterListenerToClosePopoverWhenUserClicksOutside","document","removeEventListener","Overlay","placement","getElementById","Popover","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","getBlockingContextFromState","RandomColorPicker_RandomColorPicker","EditBlockingContextModalAndButton","EditBlockingContextModalAndButton_EditBlockingContextModal","EditBlockingContextModal","resetInputFields","updatePropsContext","_this2$state","onColorChange","onWorkerBlockedMessageChange","BlockingContextsCRUD","onAddBlockingContext","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","renderNoBlockingContextsYet","renderTable","BlockingContextsCRUD_BlockingContextsTableRow","BlockingContextsTableRow","EditBlockingContextModalAndButton_EditBlockingContextModalAndButton","BlockingContextsCRUD_DeleteBlockingContextCell","DeleteBlockingContextCell","onRemoveContext","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","mutateToSingleBlockingContextForAllDoBlocks","renderCheckboxIndeterminateState","checkbox","indeterminate","WorkflowBlockingSettings","WorkflowBlockingCheckbox_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowSidebar_WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","cacheId","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","stopPropagation","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","WorkflowGraphModel","blockingContexts","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","Navbar","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","isEditDisabled","onWorkflowEdited","serializeDiagram","isReadOnly","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditor_WorkflowEditor_WorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","getRunningBlockRuns","getFinishedBlockRuns","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","getRunsOfWorkflow","slicedToArray","startWatchingRunsStatus","stopWatchRunsStatus","ReadOnlyWorkflowDashboard","fetchRunnableWorkflow","getWorkflowIdFromUrl","getWorkflowIdFromSpecifiedProps","runnableWorkflowRequest","WorkflowEditorContainer_WorkflowEditorContainer","EditableWorkflowDashboard","Workflows_Workflows","Workflows_PublicWorkflows","Workflows","PublicWorkflows","Sidebar","fetchRuns","sidebarOpen","NavLink","Sidebar_LatestFinishedRunsList","Sidebar_RunningRunsList","LatestFinishedRunsList","Sidebar_JobsList","RunningRunsList","JobsList","ACCOUNT_BALANCE_URL","JSONtoBalances","AccountBalanceService","_cachedBalance","getBalances","_getBalances","balances","_isBalancesCached","_getCachedBalance","_cacheBalances","AccountInformation","OverlayTrigger","trigger","overlay","AccountInformation_AccountInformationPopoverContent","AccountInformation_AccountInformationPreview","AccountInformationPreview","userInfo","getImageUrl","AccountInformationPopoverContent","_Component3","AccountInformation_PlatformBalances","AccountInformation_LogoutButton","PlatformBalances","_Component4","fetchBalances","pendingBalancesRequest","renderBalances","_this$state$balances","tolokaSandbox","tolokaNormal","f8","prepareNumber","balance","LogoutButton","loggingOut","loggedOut","onLogout","renderRedirect","Redirect","LOGIN_PATH","AppBar","expand","onToggleSidebar","menu","AccountInformation_AccountInformation","AuthenticatedAppRouter","authServiceInitialized","initAuthService","renderRouter","renderInitializingAuthService","AppRouter_AppRouter","AppRouter","AppRouter_PrivateRoute","AppRouter_NotLoggedInRoute","Login","PrivateRoute","NotLoggedInRoute","Layout","previousState","showSidebarAndAppBar","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","AppRouter_AuthenticatedAppRouter","tinymce","selector","plugins","App","Layout_Layout","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","callback","Run","createdAt","getCreatedAt","getFailedBlockRuns","RUNS_URL","JSONtoRun","id_workflow","BlockRun","id_cache","runsComparator","_getRuns","_getRunsOfWorkflow","_getRuns2","sort","freeze","runId","_Projects__WEBPACK_IMPORTED_MODULE_0__","signInButtonRendered","loggedIn","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","renderLogin","renderSignInButtonIfNeeded","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","marginTop","textAlign","setImmediate"],"mappings":"qIAAqBA,EAInB,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GAAAG,KAIlBG,aAAe,kBAAMJ,EAAKD,KAAK,IAJbE,KAMlBI,YAAc,SAACC,GAAD,OAAqD,MAA7CN,EAAKD,KAAKQ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAYH,KAN1CL,KAQlBS,aAAe,SAACC,GAAD,OAAaX,EAAKD,KAAKa,IAAI,SAAAJ,GAAG,OAAIA,EAAIK,YAAYF,KAAUG,OAAO,SAAAC,GAAQ,QAAMA,KAR9Ed,KAUlBe,gBAAkB,kBAAMhB,EAAKD,KAAKe,OAAO,SAAAN,GAAG,OAAIA,EAAIS,gBAVlChB,KAYlBiB,eAAiB,kBAAMlB,EAAKD,KAAKe,OAAO,SAAAN,GAAG,OAAIA,EAAIW,eAXjDlB,KAAKF,KAAOA,qCCLhB,IAAAqB,EAAAC,EAAA,IAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAAG,EAAAF,GAAAD,EAAA,KAKeI,EAAA,WAAAC,GAAA,IAAEC,EAAFD,EAAEC,GAAIC,EAANF,EAAME,KAAN,OACbL,EAAAM,EAAAC,cAACV,EAAA,EAAD,CAAMO,GAAIA,EAAII,UAAU,uCACtBR,EAAAM,EAAAC,cAAA,KAAGC,UAAU,sBADf,IACsCH,kPCLzBI,iFAAf,SAAAC,EAAgCC,EAAKC,GAArC,IAAAC,EAAAC,EAAA,OAAAC,EAAAT,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEP,EAAUQ,EAA6CR,GADzDK,EAAAE,KAAA,EAEoBE,MAAMV,EAAKC,GAF/B,UAEQC,EAFRI,EAAAK,KAKOC,EAAaV,GALpB,CAAAI,EAAAE,KAAA,cAMUL,EAAQ,IAAIU,MAAM,+BAClBC,OAASZ,EAAIY,OACbX,EARV,cAAAG,EAAAE,KAAA,GAWeN,EAAIa,OAXnB,eAAAT,EAAAU,OAAA,SAAAV,EAAAK,MAAA,yBAAAL,EAAAW,SAAAlB,6BAcA,IAAMU,EAA+C,SAACR,GACpD,OAAKiB,IAAYC,iBAAoBD,IAAYE,aAG1CC,EAAmCpB,GAFjCA,GAKLoB,EAAqC,SAACpB,GAI1C,OAHAA,EAAUA,GAAW,IACbqB,QAAUrB,EAAQqB,SAAW,GACrCrB,EAAQqB,QAAQC,cAAhB,UAAAC,OAA0CN,IAAYO,kBAC/CxB,GAGIW,EAAe,SAACV,GAAD,OAASA,EAAIY,QAAU,KAAOZ,EAAIY,QAAU,KAEjE,SAAeY,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAA/D,KAAAgE,sDAAO,SAAAC,EAAuBhC,EAAKC,GAA5B,OAAAG,EAAAT,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACQV,EAAiBE,EAAKC,GAD9B,cAAAgC,EAAAjB,OAAA,SAAAiB,EAAAtB,MAAA,wBAAAsB,EAAAhB,SAAAe,6BAIA,SAAeE,EAAtBC,EAAAC,GAAA,OAAAC,EAAAP,MAAA/D,KAAAgE,sDAAO,SAAAO,EAAwBtC,EAAKuC,GAA7B,OAAAnC,EAAAT,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACQV,EAAiBE,EAAK,CACjCyC,OAAQ,OACRnB,QAAS,CACPoB,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KANlB,cAAAC,EAAAxB,OAAA,SAAAwB,EAAA7B,MAAA,wBAAA6B,EAAAvB,SAAAqB,6BAUA,SAAeQ,EAAtBC,EAAAC,GAAA,OAAAC,EAAAnB,MAAA/D,KAAAgE,sDAAO,SAAAmB,EAAuBlD,EAAKuC,GAA5B,OAAAnC,EAAAT,EAAAU,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACQV,EAAiBE,EAAK,CACjCyC,OAAQ,MACRnB,QAAS,CACPoB,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KANlB,cAAAY,EAAAnC,OAAA,SAAAmC,EAAAxC,MAAA,wBAAAwC,EAAAlC,SAAAiC,6BAUA,SAAeE,EAAtBC,GAAA,OAAAC,EAAAxB,MAAA/D,KAAAgE,sDAAO,SAAAwB,EAA0BvD,GAA1B,OAAAI,EAAAT,EAAAU,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACQV,EAAiBE,EAAK,CACjCyC,OAAQ,WAFL,cAAAe,EAAAxC,OAAA,SAAAwC,EAAA7C,MAAA,wBAAA6C,EAAAvC,SAAAsC,6BAOA,SAASE,EAAgBC,GAC9B,IAAIC,GAAY,EAChB,MAAO,CACLC,OAAQ,IAAIC,QAAQ,SAACC,EAASC,GAC5BL,EACGM,KAAK,SAAA9D,GACCyD,GACHG,EAAQ5D,KAGX+D,MAAM,SAAAC,GACAP,GACHI,EAAOG,OAIfC,OAAQ,kBAAMR,GAAY,sCC/E9BxE,EAAAiF,EAAA7E,EAAA,sBAAA8E,IAAAlF,EAAAiF,EAAA7E,EAAA,sBAAA+E,IAAO,IAAMD,EAAaE,gDACbD,EAAUC,iFCDvB,IAAAC,EAAArF,EAAA,KAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAAG,EAAAF,GAeeqF,IAZU,SAAAjF,GAAyB,IAAvBkF,EAAuBlF,EAAvBkF,QAASC,EAAcnF,EAAdmF,SAClC,OAAID,EAEArF,EAAAM,EAAAC,cAAA,OAAKC,UAAU,6BACbR,EAAAM,EAAAC,cAAC4E,EAAA,EAAD,CAASI,UAAU,SAASC,QAAQ,aAInCF,wBCXTG,EAAAC,QAAiB5F,EAAA6F,EAAuB,4UCIlCC,EAAa,GAAAzD,OAAM8C,IAAN,cAENY,EACY,wBAGnBC,EAAiB,SAAA3F,GAAA,IAAEpB,EAAFoB,EAAEpB,GAAIgH,EAAN5F,EAAM4F,WAAY7C,EAAlB/C,EAAkB+C,KAAlB,OAAAvE,OAAAqH,EAAA,EAAArH,CAAA,CACrBI,KACAkH,UAAWC,SAASH,IACjB7C,IAICiD,EAAiB,SAAAC,GAAA,MAAwD,CAC7ErH,GADqBqH,EAAErH,GAEvBgH,WAFqBK,EAAMH,UAG3B/C,KAAM,CACJmD,KAJmBD,EAAiBC,KAKpCC,YALmBF,EAAuBE,YAM1CC,MANmBH,EAAoCG,MAOvDC,OAPmBJ,EAA2CI,UAYnDtG,EAAA,GACPuG,sBADO,eAAAC,EAAA/H,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAlG,EACemG,GADf,IAAAC,EAAA,OAAA/F,EAAAT,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAO,GAAAF,OAAIyD,EAAJ,eAAAzD,OAA+B0E,EAAQ9H,KAF1D,cAEL+H,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAIyG,IAHT,wBAAA7E,EAAAW,SAAAlB,MAAA,gBAAAqG,GAAA,OAAAL,EAAAjE,MAAA/D,KAAAgE,YAAA,GAMPsE,YANO,eAAAC,EAAAtI,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAjE,EAMK5D,GANL,IAAAmI,EAAA,OAAAnG,EAAAT,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAOYkB,YAAO,GAAAF,OAAIyD,EAAJ,KAAAzD,OAAqBpD,IAPxC,cAOLmI,EAPKtE,EAAAtB,KAAAsB,EAAAjB,OAAA,SAQJmE,EAAeoB,IARX,wBAAAtE,EAAAhB,SAAAe,MAAA,gBAAAwE,GAAA,OAAAF,EAAAxE,MAAA/D,KAAAgE,YAAA,GAWP0E,eAXO,eAAAC,EAAA1I,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA3D,EAWQiE,GAXR,IAAAxF,EAAA,OAAAX,EAAAT,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAYLO,EAAOyE,EAAee,GAZjB/D,EAAAhC,KAAA,EAaE0B,YAAS+C,EAAelE,GAb1B,cAAAyB,EAAAxB,OAAA,SAAAwB,EAAA7B,MAAA,wBAAA6B,EAAAvB,SAAAqB,MAAA,gBAAAX,GAAA,OAAA+E,EAAA5E,MAAA/D,KAAAgE,YAAA,GAgBP4E,eAhBO,eAAAC,EAAA5I,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA/C,EAgBQqD,GAhBR,IAAAxF,EAAA,OAAAX,EAAAT,EAAAU,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAiBXqG,QAAQC,IAAI,wCAjBD3D,EAAA5C,KAAA,EAmBHQ,EAAOyE,EAAee,GAC5BM,QAAQE,KAAK,mCAAoChG,GApBxCoC,EAAA3C,KAAA,EAqBIsC,YAAO,GAAAtB,OAAIyD,EAAJ,KAAAzD,OAAqB+E,EAASnI,IAAM2C,GArB/C,cAAAoC,EAAAnC,OAAA,SAAAmC,EAAAxC,MAAA,UAAAwC,EAAA5C,KAAA,EAAA4C,EAAA6D,GAAA7D,EAAA,SAuBU,MAAfA,EAAA6D,GAAEC,SAvBG,CAAA9D,EAAA3C,KAAA,eAwBD,IAAIK,MAAMqE,GAxBT,cAAA/B,EAAA6D,GAAA,yBAAA7D,EAAAlC,SAAAiC,EAAA,iCAAAtB,GAAA,OAAAgF,EAAA9E,MAAA/D,KAAAgE,YAAA,GAgCPmF,eAhCO,eAAAC,EAAAnJ,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA1C,EAgCQgD,GAhCR,OAAAnG,EAAAT,EAAAU,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EAiCE4C,YAAU,GAAA5B,OAAIyD,EAAJ,KAAAzD,OAAqB+E,EAASnI,KAjC1C,cAAAoF,EAAAxC,OAAA,SAAAwC,EAAA7C,MAAA,wBAAA6C,EAAAvC,SAAAsC,MAAA,gBAAApB,GAAA,OAAAgF,EAAArF,MAAA/D,KAAAgE,YAAA,GAoCPqF,qBApCO,eAAAC,EAAArJ,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAqB,EAoCef,GApCf,OAAAnG,EAAAT,EAAAU,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAqCXqG,QAAQC,IAAI,8CArCDS,EAAA/G,KAAA,EAsCLzC,KAAK4I,eAAeJ,GAtCf,cAAAgB,EAAA/G,KAAA,EAuCLzC,KAAKyJ,cAAcjB,GAvCd,wBAAAgB,EAAAtG,SAAAqG,EAAAvJ,SAAA,gBAAAqE,GAAA,OAAAiF,EAAAvF,MAAA/D,KAAAgE,YAAA,GA0CPyF,cA1CO,eAAAC,EAAAzJ,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAyB,EA0COnB,GA1CP,IAAAoB,EAAA,OAAAvH,EAAAT,EAAAU,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,cA2CXqG,QAAQC,IAAI,uCA3CDc,EAAApH,KAAA,EA4CgB0B,YAAQ,GAAAV,OAAIyD,EAAJ,KAAAzD,OAAqB+E,EAASnI,GAA9B,WA5CxB,cA4CLuJ,EA5CKC,EAAAjH,KAAAiH,EAAA5G,OAAA,SA6CJ2G,GA7CI,wBAAAC,EAAA3G,SAAAyG,MAAA,gBAAA3E,GAAA,OAAA0E,EAAA3F,MAAA/D,KAAAgE,YAAA,GAgDP8F,oBAhDO,eAAAC,EAAA9J,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA8B,EAgDcC,EAAYvJ,GAhD1B,OAAA2B,EAAAT,EAAAU,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,cAAAyH,EAAAzH,KAAA,EAiDE0B,YAAQ,GAAAV,OAAIyD,EAAJ,KAAAzD,OAAqBwG,EAArB,KAAAxG,OAAmC/C,EAAnC,oBAjDV,cAAAwJ,EAAAjH,OAAA,SAAAiH,EAAAtH,MAAA,wBAAAsH,EAAAhH,SAAA8G,MAAA,gBAAA/E,EAAAK,GAAA,OAAAyE,EAAAhG,MAAA/D,KAAAgE,YAAA,iPCrBTb,EAAc,CAElBgH,qBAAsB,GACtBC,MAAO,KAEDC,KALY,eAAAC,EAAArK,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAlG,IAAA,OAAAK,EAAAT,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAMVzC,KAAKuK,qBANK,cAAAhI,EAAAE,KAAA,EAOGzC,KAAKwK,gBAPR,OAOhBxK,KAAKoK,MAPW7H,EAAAK,KAQhB5C,KAAKyK,mBARW,wBAAAlI,EAAAW,SAAAlB,EAAAhC,SAAA,yBAAAsK,EAAAvG,MAAA/D,KAAAgE,YAAA,GAgBlBuG,mBAhBkB,WAiBhB,OAAO,IAAIzE,QAAQ,SAAAC,GACjB,IAAM2E,EAAWC,YAAY,WACvBC,OAAOC,OACTC,cAAcJ,GACd3E,MAED,QASPyE,cAhCkB,WAiChB,OAAO,IAAI1E,QAAQ,SAAAC,GACjB8E,KAAKE,KAAK,QAAS,WACjB,IAAMX,EAAQS,KAAKT,MAAMC,OACzBtE,EAAQqE,QAKdY,wBAzCkB,SAyCMC,GACtBjL,KAAKmK,qBAAqBe,KAAKD,IAGjCE,mBA7CkB,SA6CCC,EAAaC,GAAY,IAAAtL,EAAAC,KAC1CA,KAAKsL,oBACLT,KAAKU,QAAQC,OAAOJ,EAAa,CAC/BK,UAAW,WACTJ,IACAtL,EAAK0K,uBAKXA,iBAvDkB,WAwDhBzK,KAAKmK,qBAAqBuB,QAAQ,SAAAT,GAAQ,OAAIA,OAGhD7H,cA3DkB,WA4DhB,QAASpD,KAAKoK,OAGhB/G,WA/DkB,WAiEhB,OADArD,KAAKsL,oBACEtL,KAAKoK,MAAM/G,WAAWsI,OAG/BC,QApEkB,WAoER,IAAAC,EAAA7L,KAER,OADAA,KAAKsL,oBACE,IAAIxF,QAAQ,SAAAC,GAAO,OAAI8F,EAAKzB,MAAMwB,UAAU3F,KAAK,WACtDF,IACA8F,EAAKpB,wBAIT/G,eA5EkB,WA8EhB,OADA1D,KAAKsL,oBACEtL,KAAKoK,MAAM0B,YAAYH,MAAMI,kBAAkBC,UAGxDC,YAjFkB,WAmFhB,OADAjM,KAAKsL,oBACEtL,KAAKoK,MAAM0B,YAAYH,MAAMO,mBAGtCZ,kBAtFkB,WAuFhB,IAAItL,KAAKoD,gBACP,MAAM,IAAIN,MAAM,iCAMPK,uCCtGf/B,EAAAiF,EAAA7E,EAAA,sBAAA2K,IAAA/K,EAAAiF,EAAA7E,EAAA,sBAAA4K,IAAA,IAAAC,EAAAjL,EAAA,GAAAkL,EAAAlL,EAAAG,EAAA8K,GAAAE,EAAAnL,EAAA,IAGa+K,EAAiB,SAAA1K,GAAA,IAAEC,EAAFD,EAAEC,GAAIkF,EAANnF,EAAMmF,SAAN,OAC5B0F,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,mBACZwK,EAAA1K,EAAAC,cAAC0K,EAAA,EAAD,CAAM7K,GAAIA,GAAKkF,KAINwF,EAAmB,SAAA1E,GAAA,IAAEd,EAAFc,EAAEd,SAAF,OAAiB0F,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,mBAAoB8E,qCCTnF,IAAAH,EAAArF,EAAA,IAAAoL,EAAApL,EAAA,KAAAqL,EAAArL,EAAA,GAAAsL,EAAAtL,EAAAG,EAAAkL,GAsBeE,IAnBO,SAAAlL,GAAA,IAAEmL,EAAFnL,EAAEmL,UAAWC,EAAbpL,EAAaoL,SAAUC,EAAvBrL,EAAuBqL,QAASlG,EAAhCnF,EAAgCmF,SAAUmG,EAA1CtL,EAA0CsL,MAAOjG,EAAjDrF,EAAiDqF,QAAjD,OACpB4F,EAAA9K,EAAAC,cAAC4E,EAAA,EAAD,CAAQoG,SAAUA,GAAYD,EACtBE,QAASA,EACThL,UAAWiL,EAAQ,YAAc,GACjCjG,QAASA,GAAW,WAExB8F,GACAF,EAAA9K,EAAAC,cAAC2K,EAAA,EAAD,CACEQ,GAAG,OACHnG,UAAU,SACVoG,KAAK,KACLC,KAAK,SACLC,cAAY,SAGhBT,EAAA9K,EAAAC,cAAA,gBAAQ+E,8PCXCwG,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAoN,GAAA,QAAAI,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAmN,IAAAW,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNC,MAAM,GAHVlO,EAMEmO,YAAc,kBAAMnO,EAAKoO,SAAS,CAACF,MAAM,KAN3ClO,EAQEqO,aAAe,kBAAMrO,EAAKoO,SAAS,CAACF,MAAM,KAR5ClO,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAmN,EAAAC,GAAApN,OAAAqO,EAAA,EAAArO,CAAAmN,EAAA,EAAAmB,IAAA,SAAAC,MAAA,WAWI,OACEC,EAAA7M,EAAAC,cAAA,YACE4M,EAAA7M,EAAAC,cAAC6M,EAADzO,OAAA0O,OAAA,CAAaV,KAAMjO,KAAKgO,MAAMC,KAAMW,SAAU5O,KAAKoO,cAAkBpO,KAAK6O,QAE1EJ,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,qBAAqBgL,QAASgC,YAAe9O,KAAKkO,cAC7DO,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,2BAhBvBsL,EAAA,CAA0C2B,aAuB7BC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAArD,EAAA5L,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgP,GAAA,QAAAG,EAAAnL,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAApL,UAAAoL,GAAA,OAAAvD,EAAA5L,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAkP,EAAAjP,OAAA6N,EAAA,EAAA7N,CAAA+O,IAAAjB,KAAAhK,MAAAmL,EAAA,CAAAlP,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNqB,UAAU,EACVC,aAAa,GAJjBzD,EAOE+C,SAAW,kBAAM/C,EAAKgD,MAAMD,YAP9B/C,EASE0D,kBATFtP,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KASsB,SAAAlG,IAAA,OAAAyN,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBoJ,EAAK6D,aADanN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGVoJ,EAAKgD,MAAMc,cAHD,OAIhB9D,EAAK+D,YAJWrN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMhBsJ,EAAKgE,gBANW,yBAAAtN,EAAAW,SAAAlB,EAAA,iBATtB6J,EAmBE6D,WAAa,kBAAM7D,EAAKsC,SAAS,CAC/BkB,UAAU,EACVC,aAAa,KArBjBzD,EAwBEgE,cAAgB,kBAAMhE,EAAKsC,SAAS,CAClCkB,UAAU,EACVC,aAAa,KA1BjBzD,EA6BE+D,UAAY,WACV/D,EAAKsC,SAAS,CACZkB,UAAU,EACVC,aAAa,IAEfzD,EAAKgD,MAAMe,aAlCf/D,EAAA,OAAA5L,OAAAoO,EAAA,EAAApO,CAAA+O,EAAAC,GAAAhP,OAAAqO,EAAA,EAAArO,CAAA+O,EAAA,EAAAT,IAAA,SAAAC,MAAA,WAsCI,OACEC,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,MACtBQ,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,KACG/P,KAAK6O,MAAMmB,QAGdvB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KAGIjQ,KAAKgO,MAAMsB,aACXb,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,oDAKD9G,KAAK6O,MAAMjK,MAGd6J,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAAS9M,KAAK4O,SAAU/B,SAAU7M,KAAKgO,MAAMqB,UAAzE,UACAZ,EAAA7M,EAAAC,cAAC8K,EAAA,EAAD,CAAe7F,QAAQ,SACRhF,UAAU,UACVgL,QAAS9M,KAAKuP,kBACd3C,UAAW5M,KAAKgO,MAAMqB,UAHrC,gBA1DVL,EAAA,CAAiCD,wDC3B3BsB,EAAS,GAAA5M,OAAM8C,IAAN,UAET+J,EAAa,SAAA7O,GAAA,IAAEpB,EAAFoB,EAAEpB,GAAImE,EAAN/C,EAAM+C,KAAN,MAAiB,CAClCnE,KACAkQ,MAAO/L,EAAK+L,MACZC,SAAUhM,EAAKiM,UAGJC,EAAkC,EAEhCC,EAAA,CACPC,iBADO,eAAAC,EAAA5Q,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,EACUuO,GADV,IAAAnI,EAAA,OAAAqH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAO,GAAAF,OAAI4M,EAAJ,WAAA5M,OAAuB8M,IAF1C,cAELnI,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAI2P,IAHT,wBAAA/N,EAAAW,SAAAlB,MAAA,gBAAAqG,GAAA,OAAAwI,EAAA9M,MAAA/D,KAAAgE,YAAA,GAMP8M,QANO,eAAAC,EAAA9Q,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAjE,EAMC5D,GAND,IAAA2C,EAAA,OAAAyM,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAOQkB,YAAO,GAAAF,OAAI4M,EAAJ,KAAA5M,OAAiBpD,IAPhC,cAOL2C,EAPKkB,EAAAtB,KAAAsB,EAAAjB,OAAA,SAQJqN,EAAWtN,IARP,wBAAAkB,EAAAhB,SAAAe,MAAA,gBAAAwE,GAAA,OAAAsI,EAAAhN,MAAA/D,KAAAgE,YAAA,YCVTgN,EAA0B,GAAAvN,OAAM8C,IAAN,2BAE1B0K,EAA6B,SAAAxP,GAAA,MAAgC,CACjEpB,GADiCoB,EAAEpB,GAEnCkH,UAFiC9F,EAAM4F,WAGvC6J,OAHiCzP,EAAkB0P,UAYtCC,EAAA,CACPC,2BADO,eAAAC,EAAArR,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,EACoBuF,GADpB,IAAAa,EAAA,OAAAqH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAO,GAAAF,OAAIuN,EAAJ,eAAAvN,OAA4C8D,IAF/D,cAELa,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAIsQ,IAHT,wBAAA1O,EAAAW,SAAAlB,MAAA,gBAAAqG,GAAA,OAAAiJ,EAAAvN,MAAA/D,KAAAgE,YAAA,GAMPuN,oBANO,eAAAC,EAAAvR,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAjE,EAMasD,EAAW2J,GANxB,IAAAO,EAAAC,EAAA,OAAAjC,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAOLgP,EAb8D,CACtEpR,IADwCqH,EAaQ,CAACH,YAAW2J,WAblB7Q,GAE1CkH,UAFwCG,EAAMH,UAG9C2J,OAHwCxJ,EAAiBwJ,QAM5ChN,EAAAzB,KAAA,EAQgB0B,YAAS6M,EAA4BS,GARrD,cAQLC,EARKxN,EAAAtB,KAAAsB,EAAAjB,OAAA,SASJgO,EAA2BS,IATvB,wBAAAxN,EAAAhB,OAN2B,IAAAwE,GAM3BzD,MAAA,gBAAAwE,EAAA7E,GAAA,OAAA4N,EAAAzN,MAAA/D,KAAAgE,YAAA,GAYP2N,oBAZO,eAAAC,EAAA3R,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAA3D,EAYasN,GAZb,OAAApC,EAAA7N,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EAaL4C,YAAU,GAAA5B,OAAIuN,EAAJ,KAAAvN,OAAkCoO,IAbvC,wBAAApN,EAAAvB,SAAAqB,MAAA,gBAAAV,GAAA,OAAA+N,EAAA7N,MAAA/D,KAAAgE,YAAA,ICVM8N,6MAEnB9D,MAAQ,KAER+D,uDAAmB,SAAA/P,EAAOgQ,GAAP,OAAAvC,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACbuP,EAAMvE,QAAUiD,GADH,CAAAnO,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEF1C,EAAKkS,4BAA4BD,GAF/B,cAAAzP,EAAAU,OAAA,SAAAV,EAAAK,MAAA,cAAAL,EAAAU,OAAA,SAIV,IAJU,wBAAAV,EAAAW,SAAAlB,8DAOnBiQ,kEAA8B,SAAAhO,EAAO+N,GAAP,IAAAE,EAAA,OAAAzC,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACRkO,EAAaC,iBAAiBoB,GADtB,cACtBE,EADsBhO,EAAAtB,KAAAsB,EAAAjB,OAAA,SAErBlD,EAAKoS,+BAA+BD,IAFf,wBAAAhO,EAAAhB,SAAAe,8DAK9BkO,+BAAiC,SAACD,GAChC,IAAME,EAAkBrS,EAAKsS,4BAC7B,OAAOH,EACJrR,OAAO,SAAAyR,GAAI,OAAIvS,EAAK8O,MAAM1G,QAAQoK,UAAYD,EAAKjS,KACnDQ,OAAO,SAAAyR,GAAI,OAA0E,MAAtEF,EAAgB9R,KAAK,SAAAkS,GAAc,OAAIA,IAAmBF,EAAKjS,UAGnFgS,0BAA4B,kBAAMtS,EAAK0S,oBAAoB9R,IAAI,SAAA+R,GAAa,OAAIA,EAAcxB,YAE9FuB,kBAAoB,kBAAM1S,EAAK8O,MAAM8D,wFAE5B,IAAA9G,EAAA7L,KACAmI,EAAWnI,KAAK6O,MAAhB1G,QACP,OACEsG,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,qCACA4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,mBACArE,EAAA7M,EAAAC,cAACkR,EAAD,CACEhB,iBAAkB/R,KAAK+R,iBACvBiB,iBAAkB,SAAAV,GAAI,OAAI7D,EAAA7M,EAAAC,cAACoR,EAADhT,OAAA0O,OAAA,CAAeJ,IAAK+D,EAAKjS,IACNiS,EADnB,CAEe/K,UAAWY,EAAQ9H,GACnB6S,qBAAsBrH,EAAKgD,MAAMqE,yBAC1EC,qBAAsBnT,KAAKoT,qBAxCUrE,aAgD3CsE,6MAEJrF,MAAQ,CACNsF,UAAU,EACVC,OAAO,KAGTH,+BAAY,SAAA7O,IAAA,IAAAiP,EAAAjM,EAAA2J,EAAAwB,EAAA,OAAAjD,EAAA7N,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAA+Q,EACsBC,EAAK5E,MAA9BtH,EADGiM,EACHjM,UAAe2J,EADZsC,EACQnT,GAClBoT,EAAKtF,SAAS,CAACmF,UAAU,IAFf7O,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAIoB2O,EAA6BG,oBAAoBhK,EAAW2J,GAJhF,OAIFwB,EAJEjO,EAAA7B,KAKR6Q,EAAK5E,MAAMqE,qBAAqBR,GAChCe,EAAKtF,SAAS,CAACoF,OAAO,IANd9O,EAAAhC,KAAA,iBAAAgC,EAAAjC,KAAA,GAAAiC,EAAAwE,GAAAxE,EAAA,iBAUVgP,EAAKtF,SAAS,CAACmF,UAAU,IAVf,yBAAA7O,EAAAvB,SAAAqB,EAAA,0FAaH,IAAAmP,EACmB1T,KAAKgO,MAAxBsF,EADAI,EACAJ,SAAUC,EADVG,EACUH,MADVI,EAEmB3T,KAAK6O,MAAxB0B,EAFAoD,EAEApD,MAAOC,EAFPmD,EAEOnD,SACd,OACE/B,EAAA7M,EAAAC,cAAC+R,EAAA,EAAD,CAAe9R,UAAU,oBACvB2M,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,GACPtF,EAAA7M,EAAAC,cAAA,OAAKmS,IAAI,cAAcC,MAAM,OAAOC,IAAK1D,KAE3C/B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,GAAIxD,GACb9B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,EAAGjS,UAAU,UAElByR,EACE9E,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,YAAY+K,UAAQ,EAAC/F,QAAQ,WAA/C,SACA2H,EAAA7M,EAAAC,cAAC8K,EAAA,EAAD,CAAeI,OAAK,EAACH,UAAW0G,EAAUxG,QAAS9M,KAAKoT,WAAxD,iBAlCYrE,aA2CtBoF,6MAEJC,gBAAkB,MAElBC,QAAU,OAEVrG,MAAQ,CACNsG,YAAa,GACbC,YAAY,EAEZ/F,MAAO,MAGTgG,cAAgB,SAACxC,GACfyC,EAAKtG,SAAS,CAACK,MAAOwD,IAClByC,EAAKC,oBACPD,EAAKE,gBAEPF,EAAKG,aAAa5C,MAGpB0C,iBAAmB,kBAAuB,OAAjBD,EAAKJ,WAE9BM,cAAgB,WACdE,aAAaJ,EAAKJ,SAClBI,EAAKJ,QAAU,QAGjBO,aAAe,SAAC5C,GAAD,OAAWyC,EAAKJ,QAAUS,WACvC,kBAAML,EAAKM,iBAAiB/C,IAC5ByC,EAAKL,oBAGPW,uDAAmB,SAAA5P,EAAO6M,GAAP,IAAAsC,EAAA,OAAA7E,EAAA7N,EAAAU,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cACjBgS,EAAKtG,SAAS,CAACoG,YAAY,IADVnP,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAGWgS,EAAK5F,MAAMkD,iBAAiBC,GAHvC,OAGTsC,EAHSlP,EAAAxC,KAIf6R,EAAKtG,SAAS,CAACmG,cAAaC,YAAY,IAJzBnP,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAA6D,GAAA7D,EAAA,SAMf0D,QAAQ1G,MAARgD,EAAA6D,IANe,yBAAA7D,EAAAlC,SAAAiC,EAAA,yEAUnBgO,qBAAuB,SAAC6B,GAClBP,EAAKC,oBACPD,EAAKE,gBAEPF,EAAKtG,SAAS,CACZK,MAAO,GACP8F,YAAa,GACbC,YAAY,IAEdE,EAAK5F,MAAMsE,qBAAqB6B,4EAGzB,IAAAC,EAAAjV,KAAAkV,EAC8ClV,KAAKgO,MAAnDQ,EADA0G,EACA1G,MAAO8F,EADPY,EACOZ,YAAaC,EADpBW,EACoBX,WAAYY,EADhCD,EACgCC,WAChCnC,EAAoBhT,KAAK6O,MAAzBmE,iBACP,OACEvE,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CACEtT,UAAU,OACV0M,MAAOA,EACP6G,SAAU,SAACC,GAAD,OAAOL,EAAKT,cAAcc,EAAEC,OAAO/G,UAG/CC,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,QAAS4N,GAEvBY,GACA1G,EAAA7M,EAAAC,cAAA,mCAGF4M,EAAA7M,EAAAC,cAAC2T,EAAA,EAAD,MAEKL,GACDb,EAAY3T,IAAIqS,aA3EEjE,aCzFjB0G,EAAA,SAAAhU,GAAA,IAAEkR,EAAFlR,EAAEkR,eAAgB+C,EAAlBjU,EAAkBiU,uBAAlB,OACbjH,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,4BACA4M,EAAA7M,EAAAC,cAAC2T,EAAA,EAAD,KAEI7C,EAAelF,QAAU,GACzBgB,EAAA7M,EAAAC,cAAA,iCAGA8Q,EAAelF,OAAS,GAAKkF,EAAehS,IAAI,SAAA+R,GAAa,OAC3DjE,EAAA7M,EAAAC,cAAC8T,EAAD1V,OAAA0O,OAAA,CAAeJ,IAAKmE,EAAcrS,IAAQqS,EAA1C,CAAyDgD,uBAAwBA,UAOrFE,6MAEJ5H,MAAQ,CACNuG,YAAY,EACZjC,KAAM,KAENuD,YAAY,KAGdC,kBAAoB,kBAAM/V,EAAKgW,eAE/BA,+BAAY,SAAA/T,IAAA,IAAAsQ,EAAA,OAAA7C,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACV1C,EAAKoO,SAAS,CAACoG,YAAY,IADjBhS,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGWkO,EAAaG,QAAQ/Q,EAAKiW,aAHrC,OAGF1D,EAHE/P,EAAAK,KAIR7C,EAAKoO,SAAS,CAACmE,SAJP/P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMRuG,QAAQC,IAARxG,EAAA0G,IANQ,QASVlJ,EAAKoO,SAAS,CAACoG,YAAY,IATjB,yBAAAhS,EAAAW,SAAAlB,EAAA,mBAYZgU,UAAY,kBAAMjW,EAAK8O,MAAMqC,UAE7B+E,kCAAe,SAAAhS,IAAA,IAAA5D,EAAA,OAAAoP,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACb1C,EAAKoO,SAAS,CAAC0H,YAAY,IADd3R,EAAA1B,KAAA,EAGLnC,EAAKN,EAAKmW,qBAHLhS,EAAAzB,KAAA,EAIL2O,EAA6BO,oBAAoBtR,GAJ5C,OAKXN,EAAK8O,MAAM6G,uBAAuBrV,GALvB6D,EAAAzB,KAAA,gBAAAyB,EAAA1B,KAAA,EAAA0B,EAAA+E,GAAA/E,EAAA,iBASbnE,EAAKoO,SAAS,CAAC0H,YAAY,IATd,yBAAA3R,EAAAhB,SAAAe,EAAA,mBAYfiS,mBAAqB,kBAAMnW,EAAK8O,MAAMxO,4EAE7B,IAAAqT,EACgC1T,KAAKgO,MAArC6H,EADAnC,EACAmC,WAAYtB,EADZb,EACYa,WADZ4B,EAAAzC,EACwBpB,MACG,GAA3B/B,EAFA4F,EAEA5F,MAAOC,EAFP2F,EAEO3F,SACd,OAEI/B,EAAA7M,EAAAC,cAAC+R,EAAA,EAAD,CAAe9R,UAAU,oBACvB2M,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,QAAS4N,GACzB9F,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,GACPtF,EAAA7M,EAAAC,cAAA,OAAKmS,IAAI,cAAcC,MAAM,OAAOC,IAAK1D,KAE3C/B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,GAAIxD,GACb9B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,EAAGjS,UAAU,UACpB2M,EAAA7M,EAAAC,cAAC8K,EAAA,EAAD,CAAeC,UAAWiJ,EAAY/I,QAAS9M,KAAKiW,aACrCnP,QAAQ,UADvB,qBApDYiI,aCfPqH,qNAEnBpI,MAAQ,CACNC,MAAM,KAGRC,YAAc,kBAAMnO,EAAKoO,SAAS,CAACF,MAAM,OAEzCG,aAAe,kBAAMrO,EAAKoO,SAAS,CAACF,MAAM,6EAGxC,OACEQ,EAAA7M,EAAAC,cAAA,YACE4M,EAAA7M,EAAAC,cAACwU,EAADpW,OAAA0O,OAAA,CAAmBV,KAAMjO,KAAKgO,MAAMC,KACjBqI,QAAStW,KAAKoO,cACVpO,KAAK6O,QAE1BJ,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,cAAcgL,QAASgC,YAAe9O,KAAKkO,cACxDO,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,8BAlBiCiN,cA0BlDwH,6MAEJvI,MAAQ,CACN2E,eAAgB,KAChB4B,YAAY,EACZY,YAAY,KAGdW,kBAAoB,kBAAMjK,EAAK2K,yBAE/BA,yCAAsB,SAAAxU,IAAA,IAAA2Q,EAAA,OAAAlD,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBoJ,EAAKsC,SAAS,CAACwE,eAAgB,KAAM4B,YAAY,EAAMY,YAAY,IAD/C5S,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGW2O,EAA6BC,2BAA2BxF,EAAK4K,aAAapW,IAHrF,OAGZsS,EAHYpQ,EAAAK,KAIlBiJ,EAAKsC,SAAS,CAACwE,mBAJGpQ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMlBsJ,EAAKsC,SAAS,CAACgH,YAAY,IANT,QAQpBtJ,EAAKsC,SAAS,CAACoG,YAAY,IARP,yBAAAhS,EAAAW,SAAAlB,EAAA,mBAWtByU,WAAa,kBAAM5K,EAAKgD,MAAM1G,WAE9BmO,QAAU,kBAAMzK,EAAKgD,MAAMyH,aAE3BpD,qBAAuB,SAACR,GAAD,OAAmB7G,EAAKsC,SAAS,CAACwE,eAAc,GAAAlP,OAAAxD,OAAAyW,EAAA,EAAAzW,CAAM4L,EAAKmC,MAAM2E,gBAAjB,CAAiCD,SAExGgD,uBAAyB,SAACrV,GAAO,IACxBsS,EAAkB9G,EAAKmC,MAAvB2E,eACDgE,EAAQhE,EAAeiE,UAAU,SAAAlE,GAAa,OAAIA,EAAcrS,KAAOA,IAC1EsW,GAAS,IACVhE,EAAekE,OAAOF,EAAO,GAC7B9K,EAAKsC,SAAS,CAACwE,6FAIV,IAAAe,EAC0C1T,KAAKgO,MAA/CmH,EADAzB,EACAyB,WAAYxC,EADZe,EACYf,eAAgB4B,EAD5Bb,EAC4Ba,WACnC,OACE9F,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,MACtBQ,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,2CACAtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,QAAS4N,GAEvBY,GACA1G,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,6DAKF2H,EAAA7M,EAAAC,cAACiV,EAAD,CAAqBnE,eAAgBA,EAChBxK,QAASnI,KAAKyW,aACdvD,qBAAsBlT,KAAKkT,uBAChDzE,EAAA7M,EAAAC,cAAC4T,EAAD,CAAoB9C,eAAgBA,EAChB+C,uBAAwB1V,KAAK0V,2BAGrDjH,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS9M,KAAKsW,SAAtB,kBA1DsBvH,aC3BnBgI,UAAgB,SAAAtV,GAAA,IAAEuV,EAAFvV,EAAEuV,SAAUC,EAAZxV,EAAYwV,iBAAZ,OAC3BxI,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOC,OAAK,GACV1I,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,gBACA4M,EAAA7M,EAAAC,cAAA,kBACA4M,EAAA7M,EAAAC,cAAA,yBACA4M,EAAA7M,EAAAC,cAAA,uBAGF4M,EAAA7M,EAAAC,cAAA,aAEEmV,EAASrW,IAAI,SAAAwH,GAAO,OAClBsG,EAAA7M,EAAAC,cAACuV,EAAD,CAAkBjP,QAASA,EAASoG,IAAKpG,EAAQ9H,GAAI4W,iBAAkBA,WAQpEI,EAAmB,SAAA3P,GAAiC,IAA/BS,EAA+BT,EAA/BS,QAAS8O,EAAsBvP,EAAtBuP,iBACnCK,EAAe,GAAA7T,OAAM8T,GAAN,KAAA9T,OAAuB0E,EAAQ9H,IAEpD,OACEoO,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAI4V,GAAkBnP,EAAQ9H,KAEtCoO,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAI4V,GAAkBnP,EAAQ3D,KAAKmD,OAE3C8G,EAAA7M,EAAAC,cAAA,UAAKsG,EAAQ3D,KAAKoD,aAClB6G,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,gBACZ2M,EAAA7M,EAAAC,cAAC4V,EAAD,CAA4BtP,QAASA,IACrCsG,EAAA7M,EAAAC,cAAC6V,EAAD,CAAYvP,QAASA,IACrBsG,EAAA7M,EAAAC,cAAC8V,GAAD,CAAqBxP,QAASA,EAAS8O,iBAAkBA,OAM3DW,EAAa,SAAAC,GAAe,IAAb1P,EAAa0P,EAAb1P,QACb2P,EAAe,GAAArU,OAAM8T,GAAN,KAAA9T,OAAuB0E,EAAQ9H,GAA/B,SACrB,OACEoO,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAIoW,EAAiBhW,UAAU,eACnC2M,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,kBAKbiW,GAAsB,SAAA5B,GAAA,IAAEhO,EAAFgO,EAAEhO,QAAS8O,EAAXd,EAAWc,iBAAX,OAC1BxI,EAAA7M,EAAAC,cAACmW,EAAD,CACEpI,UAAWqH,EACXtH,YAAa,kBAAMsI,IAAgBC,cAAc/P,IAEjD6H,OACEvB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMqI,MAAP,uBAA4B1J,EAAA7M,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+BqG,EAAQ9H,KAGrEuE,KACE6J,EAAA7M,EAAAC,cAAA,0DAC8C4M,EAAA7M,EAAAC,cAAA,cAASsG,EAAQ3D,KAAKmD,MADpE,QC5DOyQ,GAAb,SAAA/K,GAAA,SAAA+K,IAAA,IAAA9K,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAoY,GAAA,QAAA5K,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAmY,IAAArK,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,GAFVjO,EAIE+V,kBAAoB,kBAAM/V,EAAKsY,iBAJjCtY,EAMEuY,qBAAuB,kBAAMvY,EAAKwY,uBAAuBnS,UAN3DrG,EAQEsY,cARFpY,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAQkB,SAAAlG,IAAA,IAAAgV,EAAA,OAAAvH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEZzC,EAAKwY,uBAAyB7S,YAAgBuS,IAAgBO,eAFlDjW,EAAAE,KAAA,EAGW1C,EAAKwY,uBAAuB1S,OAHvC,OAGNmR,EAHMzU,EAAAK,KAKZ7C,EAAKoO,SAAS,CAAC6I,aALHzU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAOZxC,EAAKoO,SAAS,CACZ6I,SAAU,KACV7B,YAAY,IATF,yBAAA5S,EAAAW,SAAAlB,EAAA,iBARlBjC,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAmY,EAAA/K,GAAApN,OAAAqO,EAAA,EAAArO,CAAAmY,EAAA,EAAA7J,IAAA,SAAAC,MAAA,WAwBI,OACEC,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KAEEhK,EAAA7M,EAAAC,cAAC6W,EAAA,EAAD,KACEjK,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,kBAGFlK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,cACb2M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,4BAEF4M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,2BACb2M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM1V,UAAU,kBAAkBJ,GAAE,GAAA+B,OAAK8T,GAAL,SAApC,SAIJ9I,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAU3G,KAAKgO,MAAMgJ,WAAahX,KAAKgO,MAAMmH,YAC7D1G,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,MAEK7T,KAAKgO,MAAMgJ,UAAYhX,KAAKgO,MAAMmH,YACnC1G,EAAA7M,EAAAC,cAAC+W,GAAD,MAIA5Y,KAAKgO,MAAMgJ,UAA2C,IAA/BhX,KAAKgO,MAAMgJ,SAASvJ,QAC3CgB,EAAA7M,EAAAC,cAACgX,GAAD,MAIA7Y,KAAKgO,MAAMgJ,UAAYhX,KAAKgO,MAAMgJ,SAASvJ,OAAS,GACpDgB,EAAA7M,EAAAC,cAACiX,EAAD,CAAe9B,SAAUhX,KAAKgO,MAAMgJ,SAAUC,iBAAkBjX,KAAKqY,uBAtDnFD,EAAA,CAAkCrJ,aAgErBgK,GAAa,kBACxBtK,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,4FAISmX,GAAqB,kBAChCvK,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,wIC1EemS,8MAEnBjL,MAAQ,KAERkL,aAAe,SAACC,EAAQC,GACtB,IAAMjR,EAAUpI,EAAKsZ,oBAAoBF,GACzCpZ,EAAK8O,MAAMyK,SAASnR,EAASiR,MAG/BC,oBAAsB,SAACF,GACrB,MAAO,CACLxR,KAAMwR,EAAOxR,KACbC,YAAauR,EAAOvR,gBAIxB2R,oBAAsB,SAACC,GACrB,IAAMhV,EAAOgV,GAAwB,GACrC,MAAO,CACL7R,KAAMnD,EAAKmD,MAAQ,GACnBC,YAAapD,EAAKoD,aAAe,OAIrC6R,iBAAmBC,YAAaC,MAAM,CACpChS,KAAM+R,YACHE,SAAS,oBACZhS,YAAa8R,YACVE,SAAS,qGAGL,IAAA/N,EAAA7L,KAEP,OACEyO,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,0BAEb2M,EAAA7M,EAAAC,cAACgY,GAAA,EAAD,CACEC,cAAe9Z,KAAKuZ,oBAAoBvZ,KAAK6O,MAAMkL,aACnDT,SAAUtZ,KAAKkZ,aACfO,iBAAkBzZ,KAAKyZ,kBAEtB,SAAAhY,GAOO,IANJyX,EAMIzX,EANJyX,aACAc,EAKIvY,EALJuY,aACAC,EAIIxY,EAJJwY,WACAd,EAGI1X,EAHJ0X,OACAe,EAEIzY,EAFJyY,QACAC,EACI1Y,EADJ0Y,OAGIC,EAAU,SAAAzS,GAAI,OAAIuS,EAAQvS,KAAUwS,EAAOxS,IAC3C0S,EAAY,SAAA1S,GAAI,OAAIuS,EAAQvS,IAASwS,EAAOxS,IAElD,OACE8G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAD,CAAM0G,SAAUJ,EAAcoB,YAAU,GAGtC7L,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,qBACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,OAAO4S,KAAK,OAAO/L,MAAO2K,EAAOxR,KACtC0N,SAAU2E,EAAcQ,OAAQP,EAChCQ,YAAY,kCACZJ,UAAWA,EAAU,QACrBD,QAASA,EAAQ,UAE/B3L,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzBJ,EAAOxS,SAOhB8G,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,4BACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,cAAc6G,MAAO2K,EAAOvR,YAAaoF,GAAG,WAAW2N,KAAK,IACjEtF,SAAU2E,EAAcQ,OAAQP,EAChCI,UAAWA,EAAU,eACrBD,QAASA,EAAQ,iBAC/B3L,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzBJ,EAAOvS,gBAMhB6G,EAAA7M,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAeE,UAAU,gBACvB2M,EAAA7M,EAAAC,cAACgZ,GAAA,EAAD,CAAYnZ,GAAImK,EAAKgD,MAAMiM,4BAA8B,IAC7CnZ,KAAMkK,EAAKgD,MAAMkM,aAE7BtM,EAAA7M,EAAAC,cAACmZ,GAAApZ,EAAD,CAAQkF,QAAQ,UAAUyT,KAAK,SAASzY,UAAU,uBAC/C+J,EAAKgD,MAAMoM,wBA/FSlM,aCHpBmM,8MAEnBlN,MAAQ,CACNmN,eAAe,KA4BjBC,8DAA0B,SAAApZ,EAAO+X,EAAPtY,GAAA,IAAA4Z,EAAA,OAAA5L,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAqB4Y,EAArB5Z,EAAqB4Z,gBAC/B,GADU9Y,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIhBwV,IAAgBqD,cAAcvB,GAJd,OAKtBha,EAAKwb,yBALiBhZ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAOtBxC,EAAKyb,0BAPiB,QAUxBH,GAAc,GAVU,yBAAA9Y,EAAAW,SAAAlB,EAAA,2EAa1BwZ,wBAA0B,kBAAMzb,EAAKoO,SAAS,CAACgN,eAAe,OAE9DI,uBAAyB,kBAAMxb,EAAK8O,MAAM4M,QAAQvQ,KAAKqM,6EAvCrD,OACE9I,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAAC6W,EAAA,EAAD,KACEjK,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,CAAgBjX,GAAI6V,IAApB,YACA9I,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,aAGFlK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAAKrF,EAAA7M,EAAAC,cAAA,kCAIL7B,KAAKgO,MAAMmN,eACX1M,EAAA7M,EAAAC,cAAC6Z,GAAD,MAGFjN,EAAA7M,EAAAC,cAAC8Z,GAAD,CAAab,2BAA4BvD,GAC5BwD,WAAW,mBACXzB,SAAUtZ,KAAKob,wBACfH,WAAW,mBA1BWlM,aAkD9B6M,GAAwB,kBACnCnN,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,wHCtDiB+U,8MAEnBpC,iBAAmBC,YAAaC,MAAM,CACpChS,KAAM+R,YACHE,SAAS,oBACZhS,YAAa8R,YACVE,SAAS,+BAIdV,mDAAe,SAAAlX,EAAOmX,EAAQC,GAAf,IAAA5Q,EAAA,OAAAiH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP+F,EAAWzI,EAAK+b,iBAAiB3C,GAD1B5W,EAAAE,KAAA,EAEP1C,EAAK8O,MAAMyK,SAAS9Q,EAAU4Q,GAFvB,wBAAA7W,EAAAW,SAAAlB,gEAKf+Z,iBAAmB,SAACC,GAClB,IAAMxX,EAAOwX,GAAqB,GAClC,MAAO,CACLrU,KAAMnD,EAAKmD,MAAQ,GACnBC,YAAapD,EAAKoD,aAAe,OAIrCkU,iBAAmB,SAAC3C,GAClB,MAAO,CACLxR,KAAMwR,EAAOxR,KACbC,YAAauR,EAAOvR,sFAKf,IAAAiE,EAAA7L,KACP,OACEyO,EAAA7M,EAAAC,cAACgY,GAAA,EAAD,CACEC,cAAe9Z,KAAK+b,iBAAiB/b,KAAK6O,MAAMrG,UAChD8Q,SAAUtZ,KAAKkZ,aACfO,iBAAkBzZ,KAAKyZ,kBAEtB,SAAA/R,GAOO,IANJwR,EAMIxR,EANJwR,aACAc,EAKItS,EALJsS,aACAC,EAIIvS,EAJJuS,WACAd,EAGIzR,EAHJyR,OACAe,EAEIxS,EAFJwS,QACAC,EACIzS,EADJyS,OAGIC,EAAU,SAAAzS,GAAI,OAAIuS,EAAQvS,KAAUwS,EAAOxS,IAC3C0S,EAAY,SAAA1S,GAAI,OAAIuS,EAAQvS,IAASwS,EAAOxS,IAElD,OACE8G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAD,CAAM0G,SAAUJ,EAAcoB,YAAU,GAItC7L,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,2BACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,OAAO4S,KAAK,OAAO/L,MAAO2K,EAAOxR,KACtC0N,SAAU2E,EAAcQ,OAAQP,EAChCI,UAAWA,EAAU,QACrBD,QAASA,EAAQ,UAE/B3L,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzBJ,EAAOxS,SAOhB8G,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,6BACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,cAAc6G,MAAO2K,EAAOvR,YAAaoF,GAAG,WAAW2N,KAAK,IACjEtF,SAAU2E,EAAcQ,OAAQP,EAChCI,UAAWA,EAAU,eACrBD,QAASA,EAAQ,iBAC/B3L,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzBJ,EAAOvS,gBAOhB6G,EAAA7M,EAAAC,cAACoa,GAAA,EAAD,CAAena,UAAU,gBACvB2M,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAASjB,EAAKgD,MAAMD,UAAhD,UACAH,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQmK,KAAK,UAAU1O,EAAKgD,MAAMoM,uBA1FRlM,aCE7BmN,GAAb,SAAA7O,GAAA,SAAA6O,IAAA,IAAA5O,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAkc,GAAA,QAAA1O,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAic,IAAAnO,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CAACmO,WAAW,GAFtBpc,EAIEqc,wBAA0B,kBAAMrc,EAAKoO,SAAS,CAACgO,WAAW,KAJ5Dpc,EAMEsc,kBAAoB,WAClBtc,EAAKuc,0BACLvc,EAAK8O,MAAMwN,qBARftc,EAWEuc,wBAA0B,kBAAMvc,EAAKoO,SAAS,CAACgO,WAAW,KAX5Dpc,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAic,EAAA7O,GAAApN,OAAAqO,EAAA,EAAArO,CAAAic,EAAA,EAAA3N,IAAA,SAAAC,MAAA,WAcI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC0a,GAAD,CAAqBtO,KAAMjO,KAAKgO,MAAMmO,UAAWvN,SAAU5O,KAAKsc,wBAC3C/U,UAAWvH,KAAK6O,MAAMtH,UAAW8U,kBAAmBrc,KAAKqc,oBAE9E5N,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS9M,KAAKoc,yBAAtB,qBAnBRF,EAAA,CAA0CnN,aA0B7ByN,GAAb,SAAAvN,GAAA,SAAAuN,IAAA,IAAAtN,EAAArD,EAAA5L,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAwc,GAAA,QAAArN,EAAAnL,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAApL,UAAAoL,GAAA,OAAAvD,EAAA5L,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAkP,EAAAjP,OAAA6N,EAAA,EAAA7N,CAAAuc,IAAAzO,KAAAhK,MAAAmL,EAAA,CAAAlP,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNmN,eAAe,GAHnBtP,EAME4Q,kBANF,eAAA/U,EAAAzH,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAMsB,SAAAlG,EAAOwG,EAAP/G,GAAA,IAAA4Z,EAAA,OAAA5L,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAkB4Y,EAAlB5Z,EAAkB4Z,gBACtB,GADI9Y,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIVia,KAAiBhU,eAAjBzI,OAAA0c,GAAA,EAAA1c,CAAA,GACDuI,EADC,CAEJjB,UAAWsE,EAAKgD,MAAMtH,aANR,OAQhBsE,EAAKwQ,oBARW9Z,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAUhBsJ,EAAK+Q,0BAVW,QAalBvB,GAAc,GAbI,yBAAA9Y,EAAAW,SAAAlB,EAAA,iBANtB,gBAAAqG,EAAAI,GAAA,OAAAf,EAAA3D,MAAA/D,KAAAgE,YAAA,GAAA6H,EAsBEwQ,kBAAoB,kBAAMxQ,EAAKgD,MAAMwN,qBAtBvCxQ,EAwBE+Q,wBAA0B,kBAAM/Q,EAAKsC,SAAS,CAACgN,eAAe,KAxBhEtP,EAAA,OAAA5L,OAAAoO,EAAA,EAAApO,CAAAuc,EAAAvN,GAAAhP,OAAAqO,EAAA,EAAArO,CAAAuc,EAAA,EAAAjO,IAAA,SAAAC,MAAA,WA2BI,OACEC,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,MACtBQ,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,KACEtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMqI,MAAP,6BAGF1J,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KAEIjQ,KAAKgO,MAAMmN,eACX1M,EAAA7M,EAAAC,cAACgb,GAAD,MAIFpO,EAAA7M,EAAAC,cAACib,GAAD,CACElO,SAAU5O,KAAK6O,MAAMD,SACrBqM,WAAW,SACX3B,SAAUtZ,KAAKyc,0BA3C3BD,EAAA,CAAyCzN,aAmD5BgO,GAAsB,kBACjCtO,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,sEC5EOkW,WAAb,SAAA3P,GAAA,SAAA2P,IAAA,IAAA1P,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgd,GAAA,QAAAxP,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAA+c,IAAAjP,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNC,MAAM,GAHVlO,EAMEmO,YAAc,kBAAMnO,EAAKoO,SAAS,CAACF,MAAM,KAN3ClO,EAQEqO,aAAe,kBAAMrO,EAAKoO,SAAS,CAACF,MAAM,KAR5ClO,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAA+c,EAAA3P,GAAApN,OAAAqO,EAAA,EAAArO,CAAA+c,EAAA,EAAAzO,IAAA,SAAAC,MAAA,WAWI,OACEC,EAAA7M,EAAAC,cAAA,YACE4M,EAAA7M,EAAAC,cAACob,GAADhd,OAAA0O,OAAA,CAAoBV,KAAMjO,KAAKgO,MAAMC,KACjBqI,QAAStW,KAAKoO,cACVpO,KAAK6O,QAE7BJ,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,cAAcgL,QAASgC,YAAe9O,KAAKkO,cACtDO,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,2BAlBvBkb,EAAA,CAAiDjO,cAyBpCmO,GAAb,SAAAjO,GAAA,SAAAiO,IAAA,IAAAhO,EAAArD,EAAA5L,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAkd,GAAA,QAAA/N,EAAAnL,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAApL,UAAAoL,GAAA,OAAAvD,EAAA5L,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAkP,EAAAjP,OAAA6N,EAAA,EAAA7N,CAAAid,IAAAnP,KAAAhK,MAAAmL,EAAA,CAAAlP,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNxF,SAAU,KAEV+L,YAAY,EACZY,YAAY,EAEZgI,UAAU,EACVC,WAAW,GATfvR,EAkBEwR,cAlBFpd,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAkBkB,SAAAlG,IAAA,IAAAwG,EAAA,OAAAiH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEZqJ,EAAKsC,SAAS,CAACoG,YAAY,EAAMY,YAAY,IAFjC5S,EAAAE,KAAA,EAGWia,KAAiBpU,YAAYuD,EAAKyR,iBAH7C,OAGN9U,EAHMjG,EAAAK,KAIZiJ,EAAKsC,SAAS,CAACoG,YAAY,EAAOY,YAAY,EAAO3M,aAJzCjG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMZsJ,EAAKsC,SAAS,CAACoG,YAAY,EAAOY,YAAY,IANlC,yBAAA5S,EAAAW,SAAAlB,EAAA,iBAlBlB6J,EA4BEyR,cAAgB,kBAAMzR,EAAKgD,MAAMrG,SAASnI,IA5B5CwL,EA8BE0R,cAAgB,kBAAM1R,EAAKsC,SAAS,CAAC3F,SAASvI,OAAA0c,GAAA,EAAA1c,CAAA,GAAK4L,EAAKmC,MAAMxF,SAAjB,CAA2BV,QAAQ,OA9BlF+D,EAgCE2R,gBAAkB,kBAAM3R,EAAKsC,SAAS,CAAC3F,SAASvI,OAAA0c,GAAA,EAAA1c,CAAA,GAAK4L,EAAKmC,MAAMxF,SAAjB,CAA2BV,QAAQ,OAhCpF+D,EAkCE+C,SAAW,kBAAM/C,EAAKgD,MAAMyH,WAlC9BzK,EAoCE4R,OApCFxd,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAoCW,SAAAjE,IAAA,OAAAwL,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAA1B,KAAA,EAELqJ,EAAKsC,SAAS,CAACgP,UAAU,EAAMC,WAAW,IAFrClZ,EAAAzB,KAAA,EAGCia,KAAiB9T,eAAeiD,EAAKmC,MAAMxF,UAH5C,OAILqD,EAAKsC,SAAS,CAACgP,UAAU,EAAOC,WAAW,IAC3CvR,EAAKgD,MAAMyH,UALNpS,EAAAzB,KAAA,gBAAAyB,EAAA1B,KAAA,EAAA0B,EAAA+E,GAAA/E,EAAA,SAOL2H,EAAKsC,SAAS,CAACgP,UAAU,EAAOC,WAAW,IAPtC,yBAAAlZ,EAAAhB,SAAAe,EAAA,iBApCX4H,EAAA,OAAA5L,OAAAoO,EAAA,EAAApO,CAAAid,EAAAjO,GAAAhP,OAAAqO,EAAA,EAAArO,CAAAid,EAAA,EAAA3O,IAAA,qBAAAC,MAAA,SAYqBkP,EAAWC,EAAWC,GACnC5d,KAAK6O,MAAMZ,OAASyP,EAAUzP,MAChCjO,KAAKqd,kBAdX,CAAA9O,IAAA,SAAAC,MAAA,WA+CW,IAAAkF,EACyD1T,KAAKgO,MAA9DuG,EADAb,EACAa,WAAYY,EADZzB,EACYyB,WAAYgI,EADxBzJ,EACwByJ,SAAUC,EADlC1J,EACkC0J,UAAW5U,EAD7CkL,EAC6ClL,SACpD,OACEiG,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,MACtBQ,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,yCACoC/P,KAAKsd,iBAGzC7O,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,QAAS4N,GAEvBY,GACA1G,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,6DAMAsW,GACA3O,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,2DAMA0B,GACAiG,EAAA7M,EAAAC,cAACgc,GAAD,CAA0B5T,WAAYzB,EAASnI,GACrByH,SAAUU,EAASV,OACnByV,cAAevd,KAAKud,cACpBC,gBAAiBxd,KAAKwd,oBAKtD/O,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAAS9M,KAAK4O,SAAU/B,SAAUsQ,GAA9D,UACA1O,EAAA7M,EAAAC,cAAC8K,EAAA,EAAD,CAAeG,QAAS9M,KAAKyd,OAAQ5Q,SAAU0H,EAAY3H,UAAWuQ,GAAtE,cAnFVD,EAAA,CAAwCnO,aA2FlC+O,GAA2B,SAAAjG,GAA0D,IAAxD/P,EAAwD+P,EAAxD/P,OAAQmC,EAAgD4N,EAAhD5N,WAAYsT,EAAoC1F,EAApC0F,cAAeC,EAAqB3F,EAArB2F,gBAC9DO,EAAaC,GAAc/T,GACjC,OACEwE,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKqL,MAAN,CACEC,SAAUpW,EACVyS,KAAK,QACL4D,MAAM,mBACN9I,SAAUmI,IAEZ/O,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,wBAAb,sEAGF2M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKqL,MAAN,CACEC,QAASpW,EACTyS,KAAK,QACL4D,MAAM,kBACN9I,SAAUkI,IAEZ9O,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,wBAAb,6FAEe2M,EAAA7M,EAAAC,cAAA,KAAGuc,KAAML,EAAYxI,OAAO,SAAS8I,IAAI,uBAAuBN,OAOjFC,GAAgB,SAAC/T,GAAD,SAAAxG,OAAmB6C,IAAnB,MAAA7C,OAAkC6a,KAAlC,KAAA7a,OAA2DwG,ICpJpEsU,GAAiB,SAAA9c,GAAA,IAAE+c,EAAF/c,EAAE+c,UAA8BC,GAAhChd,EAAaid,kBAAbjd,EAAgCgd,mBAAhC,OAC5BhQ,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOC,OAAK,GACV1I,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,gBACA4M,EAAA7M,EAAAC,cAAA,kBACA4M,EAAA7M,EAAAC,cAAA,yBACA4M,EAAA7M,EAAAC,cAAA,uBAGF4M,EAAA7M,EAAAC,cAAA,aAEE2c,EAAU7d,IAAI,SAAA6H,GAAQ,OACpBiG,EAAA7M,EAAAC,cAAC8c,GAAD,CAAmBnW,SAAUA,EACV+F,IAAK/F,EAASnI,GACdoe,kBAAmBA,SAOxCG,GAAoB,SAAAlX,GAAmC,IAAjCc,EAAiCd,EAAjCc,SAAUiW,EAAuB/W,EAAvB+W,kBAC9BI,EAAgB,GAAApb,OAAMqb,KAAN,KAAArb,OAAwB+E,EAASnI,IAEvD,OACEoO,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAImd,GAAmBrW,EAASnI,KAExCoO,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAImd,GAAmBrW,EAASb,OAExC8G,EAAA7M,EAAAC,cAAA,UAAK2G,EAASZ,aACd6G,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAACkd,GAAD,CAA6BvW,SAAUA,IACvCiG,EAAA7M,EAAAC,cAACmd,GAAD,CAAsBxW,SAAUA,EAAUiW,kBAAmBA,OAM/DQ,GAAuB,SAAApH,GAAA,IAAErP,EAAFqP,EAAErP,SAAUiW,EAAZ5G,EAAY4G,kBAAZ,OAC3BhQ,EAAA7M,EAAAC,cAACmW,EAAD,CACEpI,UAAW6O,EACX9O,YAAa,kBAAM+M,KAAiBvT,eAAeX,IAEnDwH,OACEvB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMqI,MAAP,uBAA4B1J,EAAA7M,EAAAC,cAAA,QAAMC,UAAU,cAAc0G,EAASb,OAGrE/C,KACE6J,EAAA7M,EAAAC,cAAA,+CACmC4M,EAAA7M,EAAAC,cAAA,cAAS2G,EAASb,MADrD,SCrDeuX,eAEnB,SAAAA,EAAYrQ,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAkf,IACjBnf,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAif,GAAAnR,KAAA/N,KAAM6O,KAMRiH,kBAAoB,kBAAM/V,EAAKof,kBAPZpf,EASnBuY,qBAAuB,kBAAMvY,EAAKqf,wBAAwBhZ,UATvCrG,EAWnBof,eAXmBlf,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAWF,SAAAlG,IAAA,IAAAqd,EAAAb,EAAA,OAAA/O,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf1C,EAAKoO,SAAS,CAACqQ,UAAW,OADXjc,EAAAC,KAAA,EAIP6c,EAAU3C,KAAiB3U,sBAAsBhI,EAAK8O,MAAM1G,SAClEpI,EAAKqf,wBAA0B1Z,YAAgB2Z,GALlC9c,EAAAE,KAAA,EAMW1C,EAAKqf,wBAAwBvZ,OANxC,OAMP2Y,EANOjc,EAAAK,KAQb7C,EAAKoO,SAAS,CAACqQ,cARFjc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0G,GAAA1G,EAAA,SAUbxC,EAAKoO,SAAS,CACZqQ,UAAW,KACXrJ,YAAY,IAZD,yBAAA5S,EAAAW,SAAAlB,EAAA,kBAXEjC,EA4BnBsc,kBAAoB,kBAAMtc,EAAKof,kBA1B7Bpf,EAAKiO,MAAQ,CACXzG,UAAWsH,EAAM1G,QAAQ9H,IAHVN,wEA+BjB,OACE0O,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,cACb2M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAAKrF,EAAA7M,EAAAC,cAAA,wBACL4M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,2BACb2M,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACyd,GAAD,CAAsB/X,UAAWvH,KAAKgO,MAAMzG,UAAW8U,kBAAmBrc,KAAKqc,uBAKrF5N,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAU3G,KAAKgO,MAAMwQ,YAAcxe,KAAKgO,MAAMmH,YAC9D1G,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAEI9T,KAAKgO,MAAMmH,YACX1G,EAAA7M,EAAAC,cAAC0d,GAAD,MAIAvf,KAAKgO,MAAMwQ,WACX/P,EAAA7M,EAAAC,cAAC2d,GAAD,CAAgBhB,UAAWxe,KAAKgO,MAAMwQ,UACtBC,kBAAmBze,KAAKmf,4BAvDHpQ,aAiExC0Q,GAAyB,kBACpChR,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,sGCzEA4Y,GAAS,GAAAjc,OAAM8C,IAAN,UAGf,SAASoZ,GAAW3c,GAKlB,OAJAA,EAAK4c,WAAa,IAAIC,KAAK7c,EAAK4c,YAChC5c,EAAK8c,WAAa,IAAID,KAAK7c,EAAK8c,YAChC9c,EAAK+c,WAAa,IAAIF,KAAK7c,EAAK+c,YAEzB/c,EAQM,IAAAgd,GAAA,CAEPC,iBAFO,eAAAC,EAAAjgB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,EAEWmG,EAASgY,GAFpB,IAAAnd,EAAA,OAAAyM,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGLO,EAAO,CACXqE,WAAYc,EAAQ9H,GACpB+f,QAASD,GALA5d,EAAAE,KAAA,EAOE0B,YAASub,GAAW1c,GAPtB,cAAAT,EAAAU,OAAA,SAAAV,EAAAK,MAAA,wBAAAL,EAAAW,SAAAlB,MAAA,gBAAAqG,EAAAI,GAAA,OAAAyX,EAAAnc,MAAA/D,KAAAgE,YAAA,GAUPqc,kBAVO,eAAAC,EAAArgB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAjE,EAUWkE,GAVX,IAAAC,EAAA,OAAAqH,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAWYkB,YAAO,GAAAF,OAAIic,GAAJ,eAAAjc,OAA2B0E,EAAQ9H,KAXtD,cAWL+H,EAXKlE,EAAAtB,KAAAsB,EAAAjB,OAAA,SAYJmF,EAASzH,IAAIgf,KAZT,wBAAAzb,EAAAhB,SAAAe,MAAA,gBAAAL,GAAA,OAAA0c,EAAAvc,MAAA/D,KAAAgE,YAAA,GAsBPuc,WAtBO,eAAAC,EAAAvgB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAA3D,EAsBIkc,GAtBJ,OAAAhR,EAAA7N,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EAuBE4C,YAAU,GAAA5B,OAAIic,GAAJ,KAAAjc,OAAiBgd,EAAKpgB,KAvBlC,cAAAoE,EAAAxB,OAAA,SAAAwB,EAAA7B,MAAA,wBAAA6B,EAAAvB,SAAAqB,MAAA,gBAAAV,GAAA,OAAA2c,EAAAzc,MAAA/D,KAAAgE,YAAA,IChBF0c,GAAb,SAAArT,GAAA,SAAAqT,IAAA,IAAApT,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA0gB,GAAA,QAAAlT,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAygB,IAAA3S,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNmS,OAAQ,IAHZpgB,EAMEyU,cAAgB,SAACmM,GAAD,OAAW5gB,EAAKoO,SAAS,CAACgS,OAAQQ,EAAMpL,OAAO/G,SANjEzO,EAQE6gB,SARF3gB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAQa,SAAAlG,IAAA,IAAA6e,EAAA,OAAApR,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT1C,EAAK+gB,gBADIve,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIaud,GAAaC,iBAAiBlgB,EAAK8O,MAAM1G,QAASpI,EAAKiO,MAAMmS,QAJ1E,OAIDU,EAJCte,EAAAK,KAKP7C,EAAKghB,kBAAkBF,GALhBte,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAOPxC,EAAKihB,iBAPE,yBAAAze,EAAAW,SAAAlB,EAAA,iBARbjC,EAmBE+gB,cAAgB,kBAAM/gB,EAAKoO,SAAS,CAClC8S,WAAW,EACXC,iBAAiB,EACjBC,aAAa,KAtBjBphB,EAyBEghB,kBAAoB,SAACK,GACnBrhB,EAAKoO,SAAS,CACZ8S,WAAW,EACXC,iBAAiB,EACjBf,OAAQ,GACRkB,mBAAoBD,EAAc3T,SAEpC1N,EAAK8O,MAAMyS,mBAhCfvhB,EAmCEihB,eAAiB,kBAAMjhB,EAAKoO,SAAS,CACnC8S,WAAW,EACXE,aAAa,KArCjBphB,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAygB,EAAArT,GAAApN,OAAAqO,EAAA,EAAArO,CAAAygB,EAAA,EAAAnS,IAAA,SAAAC,MAAA,WAyCI,OACEC,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,cACb2M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAAKrF,EAAA7M,EAAAC,cAAA,gCAKL7B,KAAKgO,MAAMmT,aACX1S,EAAA7M,EAAAC,cAAC0f,GAAD,MAMAvhB,KAAKgO,MAAMkT,iBACXzS,EAAA7M,EAAAC,cAAC2f,GAAD,CAAoBC,MAAOzhB,KAAKgO,MAAMqT,qBAKxC5S,EAAA7M,EAAAC,cAAC6f,GAAA,EAAD,CAAY5f,UAAU,QACpB2M,EAAA7M,EAAAC,cAAC8f,GAAA,EAAD,CACElH,YAAY,wCACZmH,aAAW,kBACXvM,SAAUrV,KAAKwU,cACf3H,SAAU7M,KAAKgO,MAAMiT,UACrBtZ,KAAK,WAGP8G,EAAA7M,EAAAC,cAAC6f,GAAA,EAAWG,OAAZ,KACEpT,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CACEtJ,QAAQ,kBACR0H,MAAOxO,KAAKgO,MAAMmS,OAClBtT,SAAU7M,KAAKgO,MAAMmS,OAAO1S,QAAU,GAAKzN,KAAKgO,MAAMiT,UACtDnU,QAAS9M,KAAK4gB,UAJhB,YAYF5gB,KAAKgO,MAAMiT,WACXxS,EAAA7M,EAAAC,cAACigB,GAAD,WArFVpB,EAAA,CAAmC3R,aA8FtBgT,GAAmB,kBAC9BtT,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,qDAKWkb,GAAqB,SAAAta,GAAA,IAAE+Z,EAAF/Z,EAAE+Z,MAAF,OAChChT,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,WACZ2a,EADH,kCAKWQ,GAAiB,kBAC5BxT,EAAA7M,EAAAC,cAACqgB,GAAA,EAAD,CAAaC,UAAQ,EAACC,IAAK,OCxGhBC,WAAb,SAAAhV,GAAA,SAAAgV,IAAA,OAAApiB,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAqiB,GAAApiB,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAoiB,GAAAte,MAAA/D,KAAAgE,YAAA,OAAA/D,OAAAoO,EAAA,EAAApO,CAAAoiB,EAAAhV,GAAApN,OAAAqO,EAAA,EAAArO,CAAAoiB,EAAA,EAAA9T,IAAA,SAAAC,MAAA,WAYW,IAAAzO,EAAAC,KACD6gB,EAAQ7gB,KAAK6O,MAAMgS,MACnByB,EAAcD,EAAWE,eAAe1B,GAE9C,OACEpS,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOsL,SAAO,EAACC,UAAQ,EAACtL,OAAK,EAACrV,UAAU,eACtC2M,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,gBAGEygB,EAAY3hB,IAAI,SAAAgH,GAAI,OAClB8G,EAAA7M,EAAAC,cAAA,MAAI0M,IAAK5G,GAAOA,KAIpB8G,EAAA7M,EAAAC,cAAA,uBAGF4M,EAAA7M,EAAAC,cAAA,aAEEgf,EAAMlgB,IAAI,SAAA8f,GAAI,OACZhS,EAAA7M,EAAAC,cAAA,MAAI0M,IAAKkS,EAAKpgB,IACZoO,EAAA7M,EAAAC,cAAA,UAAK4e,EAAKpgB,IAIRiiB,EAAY3hB,IAAI,SAAA4N,GAAG,OACjBE,EAAA7M,EAAAC,cAAA,MAAI0M,IAAG,GAAA9K,OAAKgd,EAAKpgB,GAAV,KAAAoD,OAAgB8K,IAAQkS,EAAKjc,KAAK+J,IAAQ,MAIrDE,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAC6gB,GAAD,CAAkBjC,KAAMA,EAAM7Q,UAAW,kBAAM7P,EAAK8O,MAAM8T,cAAclC,kBA/C5F4B,EAAA,CAAgCtT,cAAnBsT,GAGJE,eAAiB,SAAC1B,GACvB,IAAMyB,EAAc,GAKpB,OAJAzB,EACGlgB,IAAI,SAAA8f,GAAI,OAAIA,EAAKjc,OACjB7D,IAAIV,OAAO2iB,MACXlX,QAAQ,SAAAmX,GAAQ,OAAIA,EAASnX,QAAQ,SAAA6C,GAAG,OAAI+T,EAAY/T,IAAO,MAC3DtO,OAAO2iB,KAAKN,IAqDvB,IAAMQ,GAAmB,SAAArhB,GAAA,IAAEgf,EAAFhf,EAAEgf,KAAM7Q,EAARnO,EAAQmO,UAAR,OACvBnB,EAAA7M,EAAAC,cAACmW,EAAD,CACEpI,UAAWA,EACXD,YAAa,kBAAMqQ,GAAaO,WAAWE,IAE3CzQ,OACEvB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMqI,MAAP,oBAAyB1J,EAAA7M,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+B2e,EAAKpgB,KAG/DuE,KACE6J,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,+BAAf,2CAGE2M,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOsL,SAAO,EAACC,UAAQ,EAACtL,OAAK,EAACrV,UAAU,qBACtC2M,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,iBACA4M,EAAA7M,EAAAC,cAAA,qBAGF4M,EAAA7M,EAAAC,cAAA,aAGA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,gBACA4M,EAAA7M,EAAAC,cAAA,sBAKA5B,OAAO2iB,KAAKnC,EAAKjc,MAAM7D,IAAI,SAAA4N,GAAG,OAC5BE,EAAA7M,EAAAC,cAAA,MAAI0M,IAAKA,GACPE,EAAA7M,EAAAC,cAAA,UAAK0M,GACLE,EAAA7M,EAAAC,cAAA,UAAK4e,EAAKjc,KAAK+J,aC7FlBwU,GAAb,SAAA1V,GAAA,SAAA0V,IAAA,IAAAzV,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA+iB,GAAA,QAAAvV,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAA8iB,IAAAhV,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,GAFVjO,EAIE+V,kBAAoB,kBAAM/V,EAAKijB,cAJjCjjB,EAMEuY,qBAAuB,kBAAMvY,EAAKkjB,oBAAoB7c,UANxDrG,EAQEijB,WARF/iB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAQe,SAAAlG,IAAA,IAAAmG,EAAA0Y,EAAA,OAAApR,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEH2F,EAAUpI,EAAK8O,MAAM1G,QAC3BpI,EAAKkjB,oBAAsBvd,YAAgBsa,GAAaK,kBAAkBlY,IAHjE5F,EAAAE,KAAA,EAIW1C,EAAKkjB,oBAAoBpd,OAJpC,OAIHgb,EAJGte,EAAAK,KAMT7C,EAAKoO,SAAS,CAAC0S,UANNte,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAQTxC,EAAKoO,SAAS,CACZ0S,MAAO,KACP1L,YAAY,IAVL,yBAAA5S,EAAAW,SAAAlB,EAAA,iBARfjC,EAuBE4iB,cAAgB,SAAClC,GACf,IAAM9J,EAAQ5W,EAAKiO,MAAM6S,MAAMqC,QAAQzC,GACjCI,EAAQ9gB,EAAKiO,MAAM6S,MACzBA,EAAMhK,OAAOF,EAAO,GACpB5W,EAAKoO,SAAS,CAAC0S,WA3BnB9gB,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAA8iB,EAAA1V,GAAApN,OAAAqO,EAAA,EAAArO,CAAA8iB,EAAA,EAAAxU,IAAA,SAAAC,MAAA,WA+BI,IAAMrG,EAAUnI,KAAK6O,MAAM1G,QAC3B,OACEsG,EAAA7M,EAAAC,cAAA,WAEE4M,EAAA7M,EAAAC,cAACshB,GAAD,CAAehb,QAASA,EAASmZ,gBAAiBthB,KAAKgjB,aAGvDvU,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,cACb2M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,+BAKN4M,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAU3G,KAAKgO,MAAM6S,OACrCpS,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,CAAW3W,UAAU,yBACnB2M,EAAA7M,EAAAC,cAACuhB,GAAD,CAAYvC,MAAO7gB,KAAKgO,MAAM6S,MAAO8B,cAAe3iB,KAAK2iB,uBAhDrEI,EAAA,CAA+BhU,aCKVsU,8MAEnBrV,MAAQ,KAER8H,kBAAoB,kBAAM/V,EAAKujB,kBAE/BhL,qBAAuB,kBAAMvY,EAAKwjB,sBAAsBnd,+MAGhD/F,EAAKL,KAAK6O,MAAM2U,MAAMC,OAAOpjB,YAGjCL,KAAKujB,sBAAwB7d,YAAgBuS,IAAgBxB,WAAWpW,aAClDL,KAAKujB,sBAAsB1d,cAA3CsC,SAENnI,KAAKmO,SAAS,CAAChG,4DAEfoT,aAAuBvb,kJAKzB,OACEyO,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAAC6W,EAAA,EAAD,KACEjK,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,CAAgBjX,GAAI6V,IAApB,YACA9I,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,KACG3Y,KAAKgO,MAAM7F,QAAUnI,KAAKgO,MAAM7F,QAAQ3D,KAAKmD,KAAO,QAIzD8G,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAU3G,KAAKgO,MAAM7F,SACnCsG,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAAC6hB,GAAD,CAAavb,QAASnI,KAAKgO,MAAM7F,UAEjCsG,EAAA7M,EAAAC,cAAA,OAAK8hB,MAAO,CAAC1P,MAAO,SAClBxF,EAAA7M,EAAAC,cAAA,WAEA4M,EAAA7M,EAAAC,cAAC+hB,GAAA,EAAD,CAAMC,iBAAiB,YACrBpV,EAAA7M,EAAAC,cAACiiB,GAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,aAC7BvV,EAAA7M,EAAAC,cAACoiB,GAAD,CAAyB9b,QAASnI,KAAKgO,MAAM7F,WAG/CsG,EAAA7M,EAAAC,cAACiiB,GAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,SAC1BvV,EAAA7M,EAAAC,cAACqiB,GAAD,CAAW/b,QAASnI,KAAKgO,MAAM7F,uBA5CV4G,aAwDzC,SAAS2U,GAATjiB,GAAgC,IAAV0G,EAAU1G,EAAV0G,QACpB,OACEsG,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,cACb2M,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,UAAKsG,EAAQ3D,KAAKmD,OAEpB8G,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,2BACb2M,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC2V,EAAA,EAAD,CAAM9V,GAAE,GAAA+B,OAAK8T,GAAL,KAAA9T,OAAsB0E,EAAQ9H,GAA9B,SAAyCyB,UAAU,mBAA3D,WAKN2M,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAAM3L,EAAQ3D,KAAKoD,4BC5ENuc,eAEnB,SAAAA,EAAYtV,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAmkB,IACjBpkB,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAkkB,GAAApW,KAAA/N,KAAM6O,KAMRiH,kBAAoB,kBAAM/V,EAAKujB,gBAPZvjB,EASnBujB,aATmBrjB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KASJ,SAAAlG,IAAA,IAAAmG,EAAA,OAAAsH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWwV,IAAgBxB,WAAW1W,EAAKiO,MAAM3N,IAFjD,OAEL8H,EAFK5F,EAAAK,KAGX7C,EAAKoO,SAAS,CAAChG,YAHJ5F,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAKXgZ,aAAuBtb,OAAAmkB,GAAA,EAAAnkB,QAAAmkB,GAAA,EAAAnkB,CAAAF,KALZ,yBAAAwC,EAAAW,SAAAlB,EAAA,iBATIjC,EAkBnBqb,wBAlBmB,eAAAvD,EAAA5X,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAkBO,SAAAjE,EAAO8V,EAAPrS,GAAA,IAAA2T,EAAA,OAAA5L,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAqB4Y,EAArB3T,EAAqB2T,gBAC/B,GADUnX,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,EAIhBwV,IAAgBoM,cAAc,CAClChkB,GAAIN,EAAKiO,MAAM7F,QAAQ9H,GACvBmE,KAAMuV,IANc,OAQtBha,EAAKukB,sBARiBpgB,EAAAzB,KAAA,gBAAAyB,EAAA1B,KAAA,EAAA0B,EAAA+E,GAAA/E,EAAA,SAUtBnE,EAAKwkB,sBAALrgB,EAAA+E,IAVsB,QAaxBoS,GAAc,GAbU,yBAAAnX,EAAAhB,SAAAe,EAAA,iBAlBP,gBAAAoE,EAAAI,GAAA,OAAAoP,EAAA9T,MAAA/D,KAAAgE,YAAA,GAAAjE,EAkCnB6O,SAAW,kBAAM7O,EAAKukB,uBAlCHvkB,EAoCnBukB,oBAAsB,kBAAMvkB,EAAK8O,MAAM4M,QAAQvQ,KAAnB,GAAAzH,OAA2B8T,GAA3B,KAAA9T,OAA4C1D,EAAKiO,MAAM7F,QAAQ9H,MApCxEN,EAsCnBwkB,sBAAwB,SAACjP,GAAD,OAAOvV,EAAKoO,SAAS,CAACqW,YAAalP,KApCzDvV,EAAKiO,MAAQ,CACX3N,GAAIwO,EAAM2U,MAAMC,OAAOpjB,IAHRN,wEAyCjB,OACE0O,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KAEEhK,EAAA7M,EAAAC,cAAC6W,EAAA,EAAD,KACEjK,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,CAAgBjX,GAAI6V,IAApB,YACA9I,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,CAAgBjX,GAAE,GAAA+B,OAAK8T,GAAL,KAAA9T,OAAsBzD,KAAK6O,MAAM2U,MAAMC,OAAOpjB,KAC7DL,KAAKgO,MAAM7F,QAAUnI,KAAKgO,MAAM7F,QAAQ3D,KAAKmD,KAAO,OAEvD8G,EAAA7M,EAAAC,cAAC8W,EAAA,EAAD,cAGFlK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,0BACgB7B,KAAKgO,MAAM7F,SAAWnI,KAAKgO,MAAM7F,QAAQ3D,KAAKmD,QAMhE3H,KAAKgO,MAAMwW,aACX/V,EAAA7M,EAAAC,cAAC4iB,GAAD,CAAoBriB,MAAOpC,KAAKgO,MAAMwW,eAIrCxkB,KAAKgO,MAAM7F,SACZsG,EAAA7M,EAAAC,cAAC6iB,GAAD,MAGA1kB,KAAKgO,MAAM7F,SACXsG,EAAA7M,EAAAC,cAAC8Z,GAAD,CAAa5B,YAAa/Z,KAAKgO,MAAM7F,QAAQ3D,KAChC8U,SAAUtZ,KAAKob,wBACfH,WAAW,OACXF,WAAW,kBACXD,2BAA0B,GAAArX,OAAK8T,GAAL,KAAA9T,OAAsBzD,KAAKgO,MAAM7F,QAAQ9H,cA7EjD0O,aAqFzC,SAAS2V,KACP,OAAQjW,EAAA7M,EAAAC,cAAA,gCAIH,IAAM8iB,GAAqB,SAAAxO,KAAE/T,MAAF,OAChCqM,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,2CCrGJ1F,EAAAiF,EAAA7E,EAAA,sBAAA+V,KAAAnW,EAAAiF,EAAA7E,EAAA,sBAAAojB,KAOO,IAAMrN,GAAgB,YAEhBsN,GAAW,kBACtBpW,EAAA7M,EAAAC,cAACijB,EAAA,EAAD,KACErW,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAK8T,IAAiB0N,OAAK,EAACC,UAAW9M,KAClD3J,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAK8T,GAAL,QAA0B2N,UAAWhK,KAChDzM,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAK8T,GAAL,aAA+B0N,OAAK,EAACC,UAAWf,KAC3D1V,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAK8T,GAAL,QAA0B2N,UAAW7B,oFCV9C8B,EAAY,GAAA1hB,OAAM8C,IAAN,aAELY,EAAS,CAClBie,sBAAuB,wBAG3B,SAASC,EAAcriB,GAOrB,OANAA,EAAK3C,GAAKmH,SAASxE,EAAK3C,IACxB2C,EAAK4c,WAAa,IAAIC,KAAK7c,EAAK4c,YAChC5c,EAAK8c,WAAa,IAAID,KAAK7c,EAAK8c,YAChC9c,EAAK+c,WAAa,IAAIF,KAAK7c,EAAK+c,YAChC/c,EAAKuP,QAAUvP,EAAKmO,QAEbnO,EAGT,SAASsiB,EAAcC,GACrB,OAAOA,EAGM/jB,EAAA,GACPgX,YADO,eAAAgN,EAAAvlB,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAlG,IAAA,IAAAoG,EAAA,OAAA/F,EAAAT,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAQwhB,GAFpB,cAEL/c,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAI0kB,IAHT,wBAAA9iB,EAAAW,SAAAlB,MAAA,yBAAAwjB,EAAAzhB,MAAA/D,KAAAgE,YAAA,GAMPyS,WANO,eAAAgP,EAAAxlB,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAAjE,EAMI5D,GANJ,IAAAqlB,EAAA,OAAArjB,EAAAT,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAOWkB,YAAO,GAAAF,OAAI0hB,EAAJ,KAAA1hB,OAAoBpD,IAPtC,cAOLqlB,EAPKxhB,EAAAtB,KAAAsB,EAAAjB,OAAA,SAQJoiB,EAAcK,IARV,wBAAAxhB,EAAAhB,SAAAe,MAAA,gBAAAoE,GAAA,OAAAod,EAAA1hB,MAAA/D,KAAAgE,YAAA,GAWPsX,cAXO,eAAAqK,EAAA1lB,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA3D,EAWO4D,GAXP,IAAAnF,EAAA,OAAAX,EAAAT,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAYLO,EAAOsiB,EAAcnd,GAZhB1D,EAAAhC,KAAA,EAaE0B,YAAQ,GAAAV,OAAI0hB,GAAgBniB,GAb9B,cAAAyB,EAAAxB,OAAA,SAAAwB,EAAA7B,MAAA,wBAAA6B,EAAAvB,SAAAqB,MAAA,gBAAAkE,GAAA,OAAAkd,EAAA5hB,MAAA/D,KAAAgE,YAAA,GAgBPqgB,cAhBO,eAAAuB,EAAA3lB,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA/C,EAgBOgD,GAhBP,IAAAnF,EAAA,OAAAX,EAAAT,EAAAU,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAkBHQ,EAAOsiB,EAAcnd,GAlBlB/C,EAAA3C,KAAA,EAmBIsC,YAAO,GAAAtB,OAAI0hB,EAAJ,KAAA1hB,OAAoB0E,EAAQ9H,IAAM2C,GAnB7C,cAAAoC,EAAAnC,OAAA,SAAAmC,EAAAxC,MAAA,UAAAwC,EAAA5C,KAAA,EAAA4C,EAAA6D,GAAA7D,EAAA,SAqBU,MAAfA,EAAA6D,GAAEC,SArBG,CAAA9D,EAAA3C,KAAA,eAsBD,IAAIK,MAAMqE,EAAO0e,sBAtBhB,cAAAzgB,EAAA6D,GAAA,yBAAA7D,EAAAlC,SAAAiC,EAAA,iCAAAvB,GAAA,OAAAgiB,EAAA7hB,MAAA/D,KAAAgE,YAAA,GA6BPkU,cA7BO,eAAA4N,EAAA7lB,OAAAgI,EAAA,EAAAhI,CAAAoC,EAAAT,EAAAsG,KAAA,SAAA1C,EA6BO2C,GA7BP,OAAA9F,EAAAT,EAAAU,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EA8BE4C,YAAU,GAAA5B,OAAI0hB,EAAJ,KAAA1hB,OAAoB0E,EAAQ9H,KA9BxC,cAAAoF,EAAAxC,OAAA,SAAAwC,EAAA7C,MAAA,wBAAA6C,EAAAvC,SAAAsC,MAAA,gBAAA3B,GAAA,OAAAiiB,EAAA/hB,MAAA/D,KAAAgE,YAAA,8UCpBT+hB,EAAe,GAAAtiB,OAAM8C,IAAN,gBAGRyf,EAA4B,SAAAvkB,GAAA,IAAEpB,EAAFoB,EAAEpB,GAAImE,EAAN/C,EAAM+C,KAAN,MAAiB,CACxDnE,KACAsH,KAAMnD,EAAKmD,KACXse,YAAazhB,EAAKyhB,YAClBC,MAAO1hB,EAAK0hB,MACZC,MAAO3hB,EAAK2hB,MACZC,qBAAsB5hB,EAAK4hB,uBAGdC,EAAA,CACPC,wBADO,eAAAC,EAAAtmB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,IAAA,IAAAoG,EAAA,OAAAqH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAQoiB,GAFpB,cAEL3d,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAIqlB,IAHT,wBAAAzjB,EAAAW,SAAAlB,MAAA,yBAAAukB,EAAAxiB,MAAA/D,KAAAgE,YAAA,yDCbMwiB,6MAECC,EAAOC,EAAQC,EAAU3B,GAC3C,OACEvW,EAAA7M,EAAAC,cAAA,QACEC,UAAW6kB,EAAWD,EAAOE,IAAI,mBAAqB,GACtDC,YAAaJ,EAAMxS,MACnB6S,OAAO,QACPzgB,EAAG2e,WARmC+B,yECHzBC,aAMnB,SAAAA,EAAYC,EAAYC,GAAajnB,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgnB,GACnChnB,KAAKmnB,YAAYF,EAAYC,2DAGnBD,EAAYC,GACtBlnB,KAAKinB,WAAaA,EAClBjnB,KAAKknB,WAAaA,EAClB,IAAME,EAAuBF,EAAWG,0BACxCrnB,KAAKsnB,SAASF,EAAqBpnB,KAAKunB,iBAChBC,IAApBxnB,KAAKynB,YACPznB,KAAKsnB,SAAStnB,KAAK0nB,gBAAgBC,6CAKrC,OAAO3nB,KAAKynB,6CAIZ,OAAO,uCAIP,OAAOznB,KAAK0nB,gBAAgB9N,iDAI5B,OAAO5Z,KAAKinB,6CAIZ,OAAOjnB,KAAK0nB,gBAAgB/f,wCAI5B,OAAO3H,KAAKwO,uCAGLA,GACPxO,KAAKwO,MAAQA,0CAIb,OAAIxO,KAAK4nB,cACA5nB,KAAK6nB,sDAMd,QAAS7nB,KAAK8nB,wDAId,IAAMC,EAAY/nB,KAAK8nB,eAEvB,QAD2B9nB,KAAKknB,WAAWc,wBACfD,GAAWN,kDAIvC,OAAOznB,KAAK0nB,gBAAgBK,mBC5D1BE,oLAIF,GADmBjoB,KAAK0nB,gBACT9N,SAAU,CACvB,IAAMpL,EAAQxO,KAAKynB,WACnB,OAAOjZ,GAASA,EAAMf,OAAS,EAE/B,OAAO,SARWuZ,GA2DTkB,EAAA,CACb3N,KAAM,OACN4N,mBA9CA,SAAAC,EAAYvZ,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAooB,IACjBroB,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAmoB,GAAAra,KAAA/N,KAAM6O,KAURwG,SAAW,SAACsL,GAAU,IACbnS,EAASmS,EAAMpL,OAAf/G,MACPzO,EAAKsoB,WAAWf,SAAS9Y,GACzBzO,EAAKoO,SAAS,CAACK,WAdEzO,EAiBnBya,OAAS,kBAAMza,EAAK8O,MAAMyZ,kBAjBPvoB,EAmBnBuY,qBAAuBvY,EAAKya,OAjB1Bza,EAAKiO,MAAQ,CACXQ,MAAOzO,EAAKsoB,WAAWZ,YAHR1nB,0EAQjB,OAAOC,KAAK6O,MAAM4X,uCAclB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAEd6G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAcmF,KAAK,OACL/L,MAAOxO,KAAKgO,MAAMQ,MAClB6G,SAAUrV,KAAKqV,SACfmF,OAAQxa,KAAKwa,OACbH,WAAYoM,EAAMrM,UAClBvN,SAAU7M,KAAK6O,MAAMhC,WACnC4B,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzB0M,EAAWhB,YADd,wBAtCiBlX,aAiDvBwZ,MAAON,GCTMO,EAAA,CACbjO,KAxDW,SAyDXgO,wLArDE,IAAM/Z,EAAQxO,KAAKynB,WACnB,OAAQznB,KAAKyoB,cAAkC,kBAAVja,IAAuBka,MAAMla,UAH5CwY,GAwDxBmB,mBA/CA,SAAAQ,EAAY9Z,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA2oB,IACjB5oB,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA0oB,GAAA5a,KAAA/N,KAAM6O,KAURwG,SAAW,SAACsL,GAAU,IACbnS,EAASmS,EAAMpL,OAAf/G,MACPzO,EAAKsoB,WAAWf,SAAS9f,SAASgH,IAClCzO,EAAKoO,SAAS,CAACK,WAdEzO,EAiBnBya,OAAS,kBAAMza,EAAK8O,MAAMyZ,kBAjBPvoB,EAmBnBuY,qBAAuBvY,EAAKya,OAjB1Bza,EAAKiO,MAAQ,CACXQ,MAAOzO,EAAKsoB,WAAWZ,YAHR1nB,0EAQjB,OAAOC,KAAK6O,MAAM4X,uCAclB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAEd6G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAcmF,KAAK,SACL/L,MAAK,GAAA/K,OAAKzD,KAAKgO,MAAMQ,OACrB6G,SAAUrV,KAAKqV,SACfmF,OAAQxa,KAAKwa,OACbH,WAAYoM,EAAMrM,UAClBvN,SAAU7M,KAAK6O,MAAMhC,WACnC4B,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WACzB0M,EAAWhB,YADd,wBAtCmBlX,cCqCZ6Z,EAAA,CACbrO,KA/CW,UAgDXgO,wLA5CE,OAAO,SAFgBvB,GA+CzBmB,mBAvCA,SAAAU,EAAYha,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA6oB,IACjB9oB,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA4oB,GAAA9a,KAAA/N,KAAM6O,KAURwG,SAAW,SAACsL,GAAU,IACbzC,EAAWyC,EAAMpL,OAAjB2I,QACPne,EAAKsoB,WAAWf,SAASpJ,GACzBne,EAAKoO,SAAS,CAACK,MAAO0P,GAAUne,EAAK8O,MAAMyZ,iBAZ3CvoB,EAAKiO,MAAQ,CACXQ,MAAOzO,EAAKsoB,WAAWZ,YAHR1nB,0EAQjB,OAAOC,KAAK6O,MAAM4X,uCAUlB,IACMQ,EADQjnB,KAAKqoB,WACMX,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAEd6G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKqL,MAAN,CAAY1D,KAAK,WACL4D,MAAO8I,EAAWhB,YAClB/H,QAASle,KAAKgO,MAAMQ,MACpB6G,SAAUrV,KAAKqV,SACfxI,SAAU7M,KAAK6O,MAAMhC,mBAhCbkC,cCPtB+Z,oLAGF,IAAMta,EAAQxO,KAAKynB,WAEnB,OAA0D,OAD1CznB,KAAK+oB,aACNzoB,KAAK,SAAA0oB,GAAM,OAAIA,EAAOxa,QAAUA,yCAI/C,OAAOxO,KAAK0nB,gBAAgBuB,eATIjC,GA+CrBkC,EAAA,CACb3O,KAAM,mBACN4N,kNA9BAgB,cAAe,SAACxI,GACd,IAAMnS,EAAQmS,EAAMpL,OAAO/G,MAC3BzO,EAAKsoB,WAAWf,SAAS9Y,GACzBzO,EAAK8O,MAAMyZ,4FANX,OAAOtoB,KAAK6O,MAAM4X,uCAUlB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAGd6G,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAcpI,GAAG,SAASwB,MAAOiY,EAAMgB,WAAYpS,SAAUrV,KAAKmpB,cAAetc,SAAU7M,KAAK6O,MAAMhC,UAElG4Z,EAAMsC,aAAapoB,IAAI,SAAAqoB,GAAM,OAC3Bva,EAAA7M,EAAAC,cAAA,UAAQ0M,IAAKya,EAAOxa,MAAOA,MAAOwa,EAAOxa,OAAQwa,EAAO7K,kBAzBjCpP,aAqCnCwZ,MAAOO,4BCnDYM,6MAEnBpb,MAAQ,CACNC,MAAM,KAGRkO,UAAY,kBAAMpc,EAAKoO,SAAS,CAACF,MAAM,OAEvCob,UAAY,kBAAMtpB,EAAKoO,SAAS,CAACF,MAAM,6EAGrC,OACEQ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQvD,SAAU7M,KAAK6O,MAAMhC,SAAU/K,UAAU,YAAYgL,QAAS9M,KAAKmc,WAA3E,eAEA1N,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAKgO,MAAMC,KAAMhB,KAAK,MACjCwB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,KAAe/P,KAAK6O,MAAMmV,OAE1BvV,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAACynB,EAAA,EAAWtpB,KAAK6O,QAGnBJ,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS9M,KAAKqpB,WAAtB,mBAvBiCta,aCGvCwa,oLAEF,OAAO,SAFavC,GAiDTwC,EAAA,CACbjP,KAAM,OACN4N,kNA1CAsB,mBAAqB,SAAC9nB,GACpB5B,EAAKsoB,WAAWf,SAAS3lB,GACzB5B,EAAK8O,MAAMyZ,4FAIX,OAAOtoB,KAAK6O,MAAM4X,uCAIlB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBACnBgC,EAAkB1pB,KAAK2pB,YAE7B,OACElb,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAGd6G,EAAA7M,EAAAC,cAAC6nB,EAAD,CAAiBE,eAAgB5pB,KAAKypB,mBACrBI,aAAcpD,EAAMgB,WACpBpd,KAAM,CAACyf,SAAS,GAChBjd,SAAU7M,KAAK6O,MAAMhC,SACrBmX,MAAOiD,EAAWhB,mDAQvC,OAFcjmB,KAAKqoB,WACMX,gBACVqC,cACNX,EAEFY,WAtCcjb,aA8CvBwZ,MAAOgB,YCrDHU,oLAGF,OAAOjqB,KAAK+oB,aAAatb,OAAS,uCAIlC,OAAOzN,KAAKynB,8CAGHwB,GACTjpB,KAAKsnB,SAAS2B,+CAGItS,GAClB3W,KAAK+oB,aACFlS,OAAOF,EAAO,qCAGTqS,GACRhpB,KAAK+oB,aAAa7d,KAAK8d,UApBMhC,GAwB3BkD,6MAMJC,eAAiB,SAACxT,GAChB5W,EAAKsoB,WAAW+B,oBAAoBzT,GACpC5W,EAAK8O,MAAMyZ,oBAGb+B,YAAc,SAACrB,GACbjpB,EAAKsoB,WAAWiC,UAAUtB,GAC1BjpB,EAAK8O,MAAMyZ,4FAVX,OAAOtoB,KAAK6O,MAAM4X,uCAclB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAId6G,EAAA7M,EAAAC,cAAC0oB,EAAD,CAActB,QAASxC,EAAMsC,aAAcoB,eAAgBnqB,KAAKmqB,iBAChE1b,EAAA7M,EAAAC,cAAC2oB,EAAD,CAAWH,YAAarqB,KAAKqqB,sBA5BHtb,aAoC5B0b,EAAe,SAAAhpB,GAAA,IAAEwnB,EAAFxnB,EAAEwnB,QAASkB,EAAX1oB,EAAW0oB,eAAX,OACnB1b,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOsL,SAAO,EAACC,UAAQ,EAACtL,OAAK,GAC3B1I,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,mBACA4M,EAAA7M,EAAAC,cAAA,mBACA4M,EAAA7M,EAAAC,cAAA,aAGF4M,EAAA7M,EAAAC,cAAA,aAEEonB,EAAQtoB,IAAI,SAACqoB,EAAQrS,GAAT,OACVlI,EAAA7M,EAAAC,cAAA,MAAI0M,IAAKya,EAAOxa,OACdC,EAAA7M,EAAAC,cAAA,UAAKmnB,EAAO7K,OACZ1P,EAAA7M,EAAAC,cAAA,UAAKmnB,EAAOxa,OACZC,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgL,QAAS,kBAAMqd,EAAexT,KACxElI,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,6BAUrB4oB,6MAEJ1c,MAAQ,CACNmQ,MAAO,GACP3P,MAAO,MAGTmc,iBAAmB,kBAAM9e,EAAKmC,MAAMmQ,MAAM1Q,OAAS,GAAK5B,EAAKmC,MAAMQ,MAAMf,OAAS,KAElF4c,YAAc,WACZxe,EAAKgD,MAAMwb,YAAY,CACrBlM,MAAOtS,EAAKmC,MAAMmQ,MAClB3P,MAAO3C,EAAKmC,MAAMQ,QAEpB3C,EAAKsC,SAAS,CACZgQ,MAAO,GACP3P,MAAO,8EAIF,IAAAiF,EAAAzT,KACP,OACEyO,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKiB,IAAN,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAK8W,GAAG,KAAKC,GAAG,KACdpc,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,cACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,QAAQ4S,KAAK,OAAO/L,MAAOxO,KAAKgO,MAAMmQ,MAC3C9I,SAAU,SAACsL,GAAD,OAAWlN,EAAKtF,SAAS,CAACgQ,MAAOwC,EAAMpL,OAAO/G,aAG1EC,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAK8W,GAAG,KAAKC,GAAG,KACdpc,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKE,MAAN,cACArE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,QAAQ4S,KAAK,OAAO/L,MAAOxO,KAAKgO,MAAMQ,MAC3C6G,SAAU,SAACsL,GAAD,OAAWlN,EAAKtF,SAAS,CAACK,MAAOmS,EAAMpL,OAAO/G,aAG1EC,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAK8W,GAAG,KAAK9oB,UAAU,IACrB2M,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS9M,KAAKqqB,YAAaxd,UAAW7M,KAAK2qB,oBAAnD,gBAtCc5b,aA6CT+b,EAAA,CACbvQ,KAAM,gBACN4N,OAAQ+B,EACR3B,MAAO0B,yDC1IIc,GAAb,SAAA1d,GAAA,SAAA0d,IAAA,IAAAzd,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA+qB,GAAA,QAAAvd,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAA8qB,IAAAhd,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNrG,KAAM,GACNqjB,QAAS,MAJbjrB,EAOEsV,SAAW,SAACsL,GACV,IACMsK,EADStK,EAAMpL,OACA0V,MACA,IAAjBA,EAAMxd,QACR1N,EAAKmrB,WAAWD,EAAM,KAX5BlrB,EAeEmrB,WAfF,eAAAzpB,EAAAxB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAee,SAAAlG,EAAOmpB,GAAP,OAAA1b,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAA0G,GAAAlJ,EAAAwC,EAAA6oB,GAEHD,EAAKxjB,KAFFpF,EAAAE,KAAA,EAGM1C,EAAKsrB,gBAAgBF,GAH3B,OAAA5oB,EAAA+oB,GAAA/oB,EAAAK,KAAAL,EAAAgpB,GAAA,CAET5jB,KAFSpF,EAAA6oB,GAGTJ,QAHSzoB,EAAA+oB,IAAA/oB,EAAA0G,GACNkF,SADMJ,KAAAxL,EAAA0G,GAAA1G,EAAAgpB,IAAA,wBAAAhpB,EAAAW,SAAAlB,MAff,gBAAAqG,GAAA,OAAA5G,EAAAsC,MAAA/D,KAAAgE,YAAA,GAAAjE,EAsBEsrB,gBAtBF,eAAA3jB,EAAAzH,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAsBoB,SAAAjE,EAAOknB,GAAP,IAAAK,EAAA,OAAA/b,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAEV+oB,EAAS,IAAIC,WAFHvnB,EAAAjB,OAAA,SAGT,IAAI6C,QAAQ,SAACC,EAASC,GAC3BwlB,EAAOE,iBAAiB,OAAQ,SAAC/K,GAAD,OAAW5a,EAAQ4a,EAAMpL,OAAO1P,UAChE2lB,EAAOG,WAAWR,MALJ,wBAAAjnB,EAAAhB,SAAAe,MAtBpB,gBAAAwE,GAAA,OAAAf,EAAA3D,MAAA/D,KAAAgE,YAAA,GAAAjE,EA+BE6gB,SAAW,kBAAM7gB,EAAK8O,MAAM+c,aAAa7rB,EAAKiO,MAAMgd,UA/BtDjrB,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAA8qB,EAAA1d,GAAApN,OAAAqO,EAAA,EAAArO,CAAA8qB,EAAA,EAAAxc,IAAA,SAAAC,MAAA,WAkCI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,8BACA4M,EAAA7M,EAAAC,cAAC6f,GAAA,EAAD,KACEjT,EAAA7M,EAAAC,cAAC6f,GAAA,EAAWmK,QAAZ,KACEpd,EAAA7M,EAAAC,cAAA,SAAOC,UAAU,mBAAjB,cAEE2M,EAAA7M,EAAAC,cAAA,SAAO0Y,KAAK,OAAOoJ,MAAO,CAACmI,QAAS,QAASC,OAAO,MAAMC,UAAU,EAAO3W,SAAUrV,KAAKqV,aAI9F5G,EAAA7M,EAAAC,cAAC8f,GAAA,EAAD,CAAanT,MAAOxO,KAAKgO,MAAMrG,KAAM8S,YAAY,uCAAuCwR,UAAQ,IAEhGxd,EAAA7M,EAAAC,cAAC6f,GAAA,EAAWG,OAAZ,KACEpT,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQuT,MAAO,CAACuI,OAAQ,OAAQC,UAAW,eACnCtf,SAAiC,OAAvB7M,KAAKgO,MAAMgd,QAAkBle,QAAS9M,KAAK4gB,UAD7D,iBAhDZmK,EAAA,CAAoChc,aCIvBqd,GAAb,SAAA/e,GAAA,SAAA+e,IAAA,IAAA9e,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAosB,GAAA,QAAA5e,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAmsB,IAAAre,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MACEM,MAAQ,CACNC,MAAM,GAFVlO,EAKEoc,UAAY,kBAAMpc,EAAKoO,SAAS,CAACF,MAAM,KALzClO,EAOEspB,UAAY,kBAAMtpB,EAAKoO,SAAS,CAACF,MAAM,KAPzClO,EASE0d,OAAS,SAAC4O,GACRtsB,EAAK8O,MAAMyd,aAAaD,GACxBtsB,EAAKspB,aAXTtpB,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAmsB,EAAA/e,GAAApN,OAAAqO,EAAA,EAAArO,CAAAmsB,EAAA,EAAA7d,IAAA,SAAAC,MAAA,WAeI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,YAAYgL,QAAS9M,KAAKmc,UAAWtP,SAAU7M,KAAK6O,MAAMhC,UAA5E,eACA4B,EAAA7M,EAAAC,cAAC0qB,GAAD,CAAiBte,KAAMjO,KAAKgO,MAAMC,KACjBqI,QAAStW,KAAKqpB,UACd5L,OAAQzd,KAAKyd,OACb4O,KAAMrsB,KAAK6O,MAAMwd,YArB1CD,EAAA,CAA8Crd,aA2BxCyd,eAEJ,SAAAA,EAAY3d,GAAO,IAAAhD,EAAA,OAAA5L,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAwsB,IACjB3gB,EAAA5L,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAusB,GAAAze,KAAA/N,KAAM6O,KAMR4d,aAAe,SAACJ,GAAD,OAAUxgB,EAAKsC,SAAS,CAACke,UAPrBxgB,EASnB4R,OAAS,kBAAM5R,EAAKgD,MAAM4O,OAAO5R,EAAKmC,MAAMqe,OAP1CxgB,EAAKmC,MAAQ,CACXqe,KAAMxgB,EAAKgD,MAAMwd,MAHFxgB,wEAYjB,OACE4C,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,KAAMhB,KAAK,MACjCwB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,iCAEAtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAAC6qB,GAAD,CAAgBd,aAAc5rB,KAAKysB,eAEnChe,EAAA7M,EAAAC,cAAA,WAEA4M,EAAA7M,EAAAC,cAAC8qB,GAAD,CAAYN,KAAMrsB,KAAKgO,MAAMqe,KAAMI,aAAczsB,KAAKysB,gBAGxDhe,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAAS9M,KAAK6O,MAAMyH,SAAhD,UACA7H,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS9M,KAAKyd,QAAtB,iBA5BoB1O,aAmCxB6d,GAAa,SAAAnrB,GAAA,IAAEgrB,EAAFhrB,EAAEgrB,aAAcJ,EAAhB5qB,EAAgB4qB,KAAhB,OACjB5d,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,oBACA4M,EAAA7M,EAAAC,cAACgrB,EAAAjrB,EAAD,CACE+hB,MAAO,CAAC1P,MAAO,QACfwG,YAAY,oBACZqS,KAAK,aACLC,MAAM,UACNplB,KAAK,wBACL0N,SAAUoX,EACVO,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrB3e,MAAO6d,EACPe,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,OCnFXC,qLAEF,OAAO,oCAIP,OAAO1tB,KAAKynB,2CAGN4E,GACNrsB,KAAKsnB,SAAS+E,UAVMrF,GA0CT2G,GAAA,CACbpT,KAAM,OACN4N,kNA3BAmE,aAAe,SAACD,GACdtsB,EAAKsoB,WAAWuF,QAAQvB,GACxBtsB,EAAK8O,MAAMyZ,4FAIX,OAAOtoB,KAAK6O,MAAM4X,uCAIlB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAGd6G,EAAA7M,EAAAC,cAACgsB,GAAD,CAA0BxB,KAAM5F,EAAMqH,UAAWxB,aAActsB,KAAKssB,aAAczf,SAAU7M,KAAK6O,MAAMhC,mBAtBtFkC,aA+BvBwZ,MAAOmF,cCnDIK,WAAiB,kBAAMC,GAAS,CAC3CC,EAAGC,KACHC,EAAGD,KACHE,EAAGF,SAIQA,GAAsB,kBAAMG,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,OAElEN,GAAW,SAAAvsB,GAAA,IAAEwsB,EAAFxsB,EAAEwsB,EAAGE,EAAL1sB,EAAK0sB,EAAGC,EAAR3sB,EAAQ2sB,EAAR,UAAA3qB,SAAqB,GAAK,KAAOwqB,GAAK,KAAOE,GAAK,GAAKC,GAAGI,SAAS,IAAIC,MAAM,KAExFC,GAAa,SAACC,GAAD,QAAWC,GAASD,IAEjCC,GAAW,SAACD,GAEvB,IAAM9oB,EAAS,4CAA4CgpB,KAAKF,GAChE,OAAO9oB,EAAS,CACdooB,EAAGzmB,SAAS3B,EAAO,GAAI,IACvBsoB,EAAG3mB,SAAS3B,EAAO,GAAI,IACvBuoB,EAAG5mB,SAAS3B,EAAO,GAAI,KACrB,MAGOipB,GAAkC,SAACH,GAAD,OAASI,GACtDC,GACEJ,GAASD,MAIPK,GAAe,SAAAtnB,GAAA,OAAgB,KAAhBA,EAAEumB,EAA0B,KAA5BvmB,EAAKymB,EAAmC,KAAxCzmB,EAAQ0mB,GAA6C,KAEpEW,GAAoC,SAACE,GAAD,OAAeA,EAAY,GAAM,QAAU,SCtB/EC,8MAKJC,qBAAuB,SAAC9uB,GAAD,OAAQN,EAAKunB,SAASjnB,MAE7C+uB,qBAAuB,kBAAMrvB,EAAK0nB,cAElC4H,0BAA4B,mBAAQtvB,EAAKqvB,iGAPvC,OAAO,SAFiCpI,GAYtCsI,8MAMJC,yBAA2B,kBAAM1jB,EAAKwc,WAAWnB,WAAWsI,yBAE5DC,uBAAyB,SAACpvB,GAAD,OAAQwL,EAAK0jB,2BACnCG,uBAAuBrvB,GAAIsH,QAG9BgoB,0BAA4B,SAAAluB,GAAU,IAARpB,EAAQoB,EAARpB,GAC5BwL,EAAKwc,WAAW8G,qBAAqB9uB,GACrCwL,EAAKgD,MAAMyZ,oBAGbsH,WAAa,kBAAM/jB,EAAKgD,MAAMhC,oFAd5B,OAAO7M,KAAK6O,MAAM4X,uCAiBlB,IACMQ,EADQjnB,KAAKqoB,WACMX,gBACnBmI,EAAwB7vB,KAAKuvB,2BAEnC,OACE9gB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAGd6G,EAAA7M,EAAAC,cAACiuB,GAAA,EAAD,KAEI9vB,KAAK+vB,eAGPthB,EAAA7M,EAAAC,cAACmuB,GAAD,CAA8BC,SAAUJ,EAAsBK,cAChCC,kBAAmBnwB,KAAK2vB,qEAO5D,IAAMlJ,EAAQzmB,KAAKqoB,WACnB,IAAK5B,EAAM4I,4BACT,OAAO5gB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASM,OAAV,CAAiBvjB,SAAU7M,KAAK4vB,aAAc9tB,UAAU,aAAxD,QAIT,IAAMuuB,EAAUrwB,KAAKuvB,2BAA2BG,uBAAuBjJ,EAAM2I,wBAC7E,OACE3gB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASM,OAAV,CAAiBvjB,SAAU7M,KAAK4vB,aACf9tB,UAAU,YACV6hB,MAAO,CACL2M,gBAAiBD,EAAQlK,MACzBoK,OAAQF,EAAQlK,MAChBA,MAAO2I,GAAgCuB,EAAQlK,SAE/DkK,EAAQ1oB,aA1D4BoH,aAgEvCyhB,GAA+B,SAAA9oB,GAAA,IAAEuoB,EAAFvoB,EAAEuoB,SAAUE,EAAZzoB,EAAYyoB,kBAAZ,OACnC1hB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASW,KAAV,KAEEhiB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASY,KAAV,CAAe5jB,QAAS,kBAAMqjB,EAAkB,CAAC9vB,GAAI,QAAQyB,UAAU,mCACrE2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,+BADjB,QAOEmuB,EAAStvB,IAAI,SAAA0vB,GAAO,OAClB5hB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASY,KAAV,CAAeniB,IAAK8hB,EAAQhwB,GACbyB,UAAU,kCACVgL,QAAS,kBAAMqjB,EAAkBE,KAC9C5hB,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,6BACV6hB,MAAO,CAAC2M,gBAAiBD,EAAQlK,SACrCkK,EAAQ1oB,UAOJgpB,GAAA,CACbpW,KAtGW,kBAuGXgO,MAAO2G,GACP/G,OAAQmH,aC5FGsB,GATmB,SAACC,GAC/B,IAAMlwB,EAAM,GAEZ,OADAkwB,EAAWnlB,QAAQ,SAAAolB,GAAS,OAAInwB,EAAImwB,EAAUvW,MAAQuW,IAC/CnwB,EAM0BowB,CAAwB,CACzD7I,EACA8I,EACApI,EACAM,EACAM,EACAsB,EACA6C,GACAsD,GCsFa,CACb1W,KAAM,cACN4N,mBA1GA,SAAA+I,EAAYriB,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAkxB,IACjBnxB,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAixB,GAAAnjB,KAAA/N,KAAM6O,KAYRsiB,aAbmBlxB,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAaJ,SAAAlG,IAAA,IAAAovB,EAAA,OAAA3hB,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACb1C,EAAKoO,SAAS,CAACijB,cAAe,KAAMC,iBAAiB,EAAOC,YAAY,IAD3D/uB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGiBia,IAAiB5S,oBAC3C/J,EAAKud,gBAAiBvd,EAAKwxB,cAJlB,OAGLH,EAHK7uB,EAAAK,KAMX7C,EAAKyxB,gBAAgBJ,GANV7uB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAQXxC,EAAKoO,SAAS,CAACijB,cAAe,KAAMC,iBAAiB,EAAMC,YAAY,IAR5D,yBAAA/uB,EAAAW,SAAAlB,EAAA,iBAXbjC,EAAKiO,MAAQ,CACXojB,cAAerxB,EAAKsoB,WAAWoJ,mBAC/BJ,iBAAiB,EACjBC,YAAY,GALGvxB,0EAUjB,OAAOC,KAAK6O,MAAM4X,8CAkBlB,OAFmBzmB,KAAK0xB,gBACSC,OACZ1nB,mDAIrB,OAAOjK,KAAKqoB,WAAWnB,gDAKvB,OADmBlnB,KAAK0xB,gBACNrxB,2CAGJ+wB,GACdpxB,KAAKmO,SAAS,CAACijB,gBAAeC,iBAAiB,EAAOC,YAAY,IAClEtxB,KAAKqoB,WAAWuJ,iBAAiBR,oCAIjC,OACE3iB,EAAA7M,EAAAC,cAAA,WACG7B,KAAK6xB,sBAENpjB,EAAA7M,EAAAC,cAAC8K,GAAA,EAAD,CAAeI,OAAK,EAACD,QAAS9M,KAAKmxB,aACpBvkB,UAAW5M,KAAKgO,MAAMsjB,WACtBzkB,SAAU7M,KAAK6O,MAAMhC,UAFpC,gEAUJ,OAAiC,OAA7B7M,KAAKgO,MAAMojB,cACNpxB,KAAK8xB,2BAEP9xB,KAAK+xB,+EAIZ,OACEtjB,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAArB,+IAOF,OACE2M,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAArB,iCACgC2M,EAAA7M,EAAAC,cAAA,cAAS7B,KAAKgO,MAAMojB,cAApB,KADhC,0DA/EwBriB,aA6G9BwZ,wLAlBE,OAAO,2CAGQ6I,GACXA,IACFA,EAAgBA,EAAcY,QAAQ,IAExChyB,KAAKsnB,SAAS8J,8CAId,OAAOpxB,KAAKynB,kBAdeT,8CCxEhBiL,GApBsB,SAAAxwB,GAAA,IAAEywB,EAAFzwB,EAAEywB,uBAAwBC,EAA1B1wB,EAA0B0wB,2BAA1B,OACnC1jB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,2BAEA4M,EAAA7M,EAAAC,cAAA,OAAKuwB,IAAKF,GAENC,EAA2BxxB,IAAI,SAAAsmB,GAC7B,OACExY,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CAAM9jB,IAAK0Y,EAAWtf,KAChB2qB,6BAA4BztB,KAAKC,UAAUmiB,GAC3CnlB,UAAU,QACd2M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,KAAckX,EAAWhB,6BCTlBsM,sNAEnBvkB,MAAQ,CACNwkB,UAAU,KAGZC,gBAAkB,kBAAM1yB,EAAKoO,SAAS,SAACH,GAAD,MAAY,CAACwkB,UAAWxkB,EAAMwkB,qFAGlE,OACE/jB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CAAMvwB,UAAU,cACd2M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,KACEtB,EAAA7M,EAAAC,cAAA,OAAKiL,QAAS9M,KAAKyyB,iBACjBhkB,EAAA7M,EAAAC,cAAA,WAEI7B,KAAK6O,MAAM6jB,SACXjkB,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,gCAGd9B,KAAK6O,MAAMmV,OAGdvV,EAAA7M,EAAAC,cAAA,KAAGC,UAAS,qBAAA2B,OAAuBzD,KAAKgO,MAAMwkB,SAAW,WAAa,iBAG1E/jB,EAAA7M,EAAAC,cAAC8wB,GAAA,EAAD,CAAUC,GAAI5yB,KAAKgO,MAAMwkB,UACvB/jB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKpiB,KAAN,KACGjQ,KAAK6O,MAAMjI,oBA5BmBmI,cCM9B8jB,WAAA,SAAApxB,GAA6E,IAA3EqxB,EAA2ErxB,EAA3EqxB,kBAAmBC,EAAwDtxB,EAAxDsxB,uBAAwBlmB,EAAgCpL,EAAhCoL,SAAUmmB,EAAsBvxB,EAAtBuxB,iBAC9D3yB,EAAKyyB,EAAkBtyB,QACvByyB,EAAqBH,EAAkB9K,wBACvC5B,EAAuB0M,EAAkBI,6BAE/C,OACEzkB,EAAA7M,EAAAC,cAAA,WAEIukB,EAAqBzlB,IAAI,SAACwyB,GACxB,IAAMC,EAAqBC,GAAWF,EAAoB5Y,MACpDhM,EAAG,GAAA9K,OAAMpD,EAAN,KAAAoD,OAAY0vB,EAAoBxrB,MACnC2rB,EAAiBL,EAAmBE,EAAoBxrB,MAE9D,IAAK2rB,EAAeC,gBAClB,OAAO,KAGT,GAAIH,EAAoB,CACtB,IAAMrkB,EAAYqkB,EAAmBjL,OACrC,OACE1Z,EAAA7M,EAAAC,cAAC2xB,GAAD,CAAoBC,OAAQT,EAAkBhP,MAAOsP,EAAe5L,gBAAgBzB,YAAa1X,IAAKA,GACpGE,EAAA7M,EAAAC,cAACkN,EAAD,CAAW0X,MAAO6M,EACPhL,eAAgByK,EAChBlmB,SAAUA,KAIzB,OAAO4B,EAAA7M,EAAAC,cAAC6xB,GAAD,CAAsBnlB,IAAKA,EAAKuiB,UAAWqC,SAQxDQ,GAAqB,SAAAjsB,GAA+B,IAA7B+rB,EAA6B/rB,EAA7B+rB,OAAQzP,EAAqBtc,EAArBsc,MAAOpd,EAAcc,EAAdd,SAC1C,OAAI6sB,EACKhlB,EAAA7M,EAAAC,cAAC+xB,GAAD,CAAwB5P,MAAOA,EAAOpd,SAAUA,IAEhD6H,EAAA7M,EAAAC,cAACgyB,GAAD,CAAiC7P,MAAOA,EAAOpd,SAAUA,KAKvDktB,GAAyB,SAAAjc,GAAA,IAAEmM,EAAFnM,EAAEmM,MAAOpd,EAATiR,EAASjR,SAAT,OACpC6H,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CAAMvwB,UAAU,2BACd2M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,KAAciU,GACdvV,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKpiB,KAAN,KACGrJ,KAKDmtB,GAAkC,SAAA5d,GAAA,IAAE6N,EAAF7N,EAAE6N,MAAOpd,EAATuP,EAASvP,SAAT,OACtC6H,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,sCACb2M,EAAA7M,EAAAC,cAAA,UAAKmiB,GACJpd,IAICotB,GAAuB,SAAAC,GAAA,IAAEnD,EAAFmD,EAAEnD,UAAF,OAC3BriB,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,6BAC6BgqB,EAAUnpB,KADvC,cACwDmpB,EAAUvW,KADlE,OC/Ca2Z,GArBiB,SAAAzyB,GAAyE,IAAvEywB,EAAuEzwB,EAAvEywB,uBAAwBiC,EAA+C1yB,EAA/C0yB,kBAAmBpB,EAA4BtxB,EAA5BsxB,uBAC3E,OACEtkB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,6BACA4M,EAAA7M,EAAAC,cAAA,OAAKuwB,IAAKF,EAAwBvO,MAAO,CAACyQ,UAAW,UAEjDD,EAAkBE,iBAAiB1zB,IAAI,SAAA2zB,GACrC,OACE7lB,EAAA7M,EAAAC,cAAC0yB,GAAD,CACEpC,2BAA4BgC,EAAkBK,gCAC9CjmB,IAAK+lB,EAAiB9zB,QACtB8zB,iBAAkBA,EAClBvB,uBAAwBA,SAWlC0B,GAA0B,SAAA/sB,GAAA,IAAE4sB,EAAF5sB,EAAE4sB,iBAAkBvB,EAApBrrB,EAAoBqrB,uBAApB,OAC9BtkB,EAAA7M,EAAAC,cAAA,OAAK6yB,gBAAeJ,EAAiB9zB,SACnCiO,EAAA7M,EAAAC,cAAC8yB,GAAD,CAAiB3Q,MAAOsQ,EAAiBM,+BAA+B3O,YACvDyM,SAAU4B,EAAiBla,WAC1C3L,EAAA7M,EAAAC,cAACgxB,GAAD,CACEC,kBAAmBwB,EACnBvB,uBAAwBA,2BC9BnB8B,GAAb,WAOE,SAAAA,EAAYC,EAA2B/nB,GAAO,IAAAhN,EAAAC,KAAAC,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA60B,GAAA70B,KAyC9Coa,QAAU,kBAA6F,MAAvFna,OAAOkZ,OAAOpZ,EAAKioB,yBAAyB1nB,KAAK,SAAAwwB,GAAS,OAAKA,EAAU1W,aAxCvFpa,KAAKmnB,YAAY2N,EAA2B/nB,GARhD,OAAA9M,OAAAqO,EAAA,EAAArO,CAAA40B,EAAA,EAAAtmB,IAAA,cAAAC,MAAA,SAWcsmB,EAA2B/nB,GACrC/M,KAAK+0B,6BAA6BD,GAClC/nB,EAAQ8nB,EAAiBG,wBAAwBjoB,EAAO+nB,GACxD90B,KAAKK,GAAK0M,EAAM1M,GAChBL,KAAKua,KAAOxN,EAAMwN,KAClBva,KAAKonB,qBAAuBra,EAAM8jB,WAClC7wB,KAAKi1B,sBAAsBC,GAAsBl1B,KAAM80B,EAA0B1O,yBAjBrF,CAAA7X,IAAA,+BAAAC,MAAA,SAoB+BsmB,GAC3B90B,KAAK80B,0BAA4BA,IArBrC,CAAAvmB,IAAA,+BAAAC,MAAA,WAiCI,OAAOxO,KAAK80B,4BAjChB,CAAAvmB,IAAA,YAAAC,MAAA,WAqCI,MAAO,CACLnO,GAAIL,KAAKK,GACTka,KAAMva,KAAKua,KACXsW,WAAYsE,GAAoBn1B,KAAKgoB,4BAxC3C,CAAAzZ,IAAA,QAAAC,MAAA,WA6CI,OAAOxO,KAAKK,KA7ChB,CAAAkO,IAAA,wBAAAC,MAAA,WAmDI,OAAOxO,KAAKizB,qBAnDhB,CAAA1kB,IAAA,wBAAAC,MAAA,SAsDwBykB,GACpBjzB,KAAKizB,mBAAqBA,IAvD9B,CAAA1kB,IAAA,6BAAAC,MAAA,WA2DI,OAAOxO,KAAK40B,+BAA+BxO,uBA3D/C,CAAA7X,IAAA,0BAAAC,MAAA,WAgEI,OAAOxO,KAAKonB,wBAhEhB,EAAA7Y,IAAA,0BAAAC,MAAA,SAwBkCzB,EAAO+nB,GAKrC,OAJA/nB,EAAQA,GAAS,IACX1M,GAAK0M,EAAM1M,IAAM+0B,OACvBroB,EAAMwN,KAAOxN,EAAMwN,MAAQua,EAA0BntB,KACrDoF,EAAM8jB,WAAa9jB,EAAM8jB,YAAc,GAChC9jB,MA7BX8nB,EAAA,GCQMQ,GAAmB,SAACC,EAASC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAkB3uB,SAAS6G,OAAQ+nB,IACrD,GAAID,EAAkB3uB,SAAS4uB,KAAOF,EACpC,OAAOE,EAIX,OAAQ,GAIWC,eAMnB,SAAAA,EAAY5mB,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAy1B,IACjB11B,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAw1B,GAAA1nB,KAAA/N,KAAM6O,KALR6mB,cAAgB,KAIG31B,EAHnB41B,UAAY,KAGO51B,EAFnB61B,MAAQ,KAEW71B,EAMnB+V,kBAAoB,kBAAM/V,EAAK81B,gBANZ91B,EAQnB81B,aAAe,WACb,IAAMC,EAAa/1B,EAAK21B,cAAcK,QAChCC,EAASj2B,EAAK41B,UAAUI,QACxBE,EAAa,CAACH,EAAYE,GAEhCj2B,EAAK61B,MAAQM,KAAQD,EAAY,CAC/BE,KAAM,SAACC,EAAIC,GAAL,OAAgBA,IAAWP,GAGjCQ,QAAS,SAACF,EAAI7gB,GAAL,OAAgBA,IAAWygB,GAGpCO,eAAe,IAIjBx2B,EAAK61B,MAAMY,GAAG,OAAQ,SAACC,EAASlhB,EAAQ8gB,EAAQf,GAC9C,GAAI/f,IAAWygB,EAAQ,CACrB,IAAMU,EAAerB,GAAiBC,EAASU,GACzBK,IAAWP,EAG/B/1B,EAAK42B,aAAaF,EAASC,GAE3B32B,EAAK62B,cAAcH,EAASC,MAKlC32B,EAAK61B,MAAMY,GAAG,SAAU,SAACC,EAASI,GAGhCA,EAAUC,YAAYL,GAEtB,IAAMp2B,EAAKo2B,EAAQM,aAAa,iBAChCh3B,EAAKsoB,WAAW2O,gBAAgB32B,GAChCN,EAAK8O,MAAMyZ,oBA5CIvoB,EAgDnB42B,aAAe,SAACF,EAASQ,GACvBl3B,EAAKm3B,gDAAgDD,GAErD,IAAME,EAAgBp3B,EAAKq3B,sCAAsCH,GAC3DI,EAAWt3B,EAAKu3B,oCAAoCb,GAE1D12B,EAAKw3B,iCAAiCF,EAAUF,GAIhDV,EAAQe,WAAWC,YAAYhB,IA1Dd12B,EA6DnBm3B,gDAAkD,SAACD,GACjD,GAAyB,IAArBA,GAA0BA,EAAmBl3B,EAAKs0B,iBAAiB5mB,OACrE,MAAM,IAAI3K,MAAM,4DA/DD/C,EAmEnBq3B,sCAAwC,SAACM,GAAD,OAAkC,IAAjBA,EAAqB33B,EAAKs0B,iBAAiB5mB,OAASiqB,EAAc,GAnExG33B,EAqEnBu3B,oCAAsC,SAACb,GACrC,IAAM3B,EAA4BjwB,KAAK8yB,MAAMlB,EAAQM,aAAa,+BAClE,OAAO,IAAIlC,GAAiBC,IAvEX/0B,EA0EnBw3B,iCAAmC,SAACF,EAAUF,GAC5Cp3B,EAAKsoB,WAAWuP,SAASP,EAAUF,GACnCp3B,EAAK83B,eA5EY93B,EA+EnB62B,cAAgB,SAACH,EAASQ,GACxBl3B,EAAKm3B,gDAAgDD,GAErD,IAAMa,EAAc/3B,EAAKg4B,mBAAmBtB,GACtCuB,EAAcj4B,EAAKk4B,mCAAmChB,GAE5Dl3B,EAAKsoB,WAAW6P,WAAWJ,EAAaE,GACxCj4B,EAAK8O,MAAMyZ,kBAtFMvoB,EA0FnBg4B,mBAAqB,SAACtB,GACpB,IAAMT,EAASj2B,EAAKsoB,WAAW8P,YACzB93B,EAAKo2B,EAAQM,aAAa,iBAEhC,OAAOf,EAAOpf,UAAU,SAAA7J,GAAK,OAAIA,EAAM1M,KAAOA,KA9F7BN,EAiGnBk4B,mCAAqC,SAACP,GAAD,OAAkC,IAAjBA,EAAqB33B,EAAKs0B,iBAAiB5mB,OAAS,EAAIiqB,EAAc,GA/F1H33B,EAAK21B,cAAgB0C,IAAMC,YAC3Bt4B,EAAK41B,UAAYyC,IAAMC,YAHNt4B,0EAoGjB,OAAOC,KAAK6O,MAAMslB,2DAIlB,OAAOn0B,KAAKqoB,WAAWgM,kDAIvB,OACE5lB,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAK8W,GAAG,IAAIC,GAAG,KACbpc,EAAA7M,EAAAC,cAACy2B,GAAD,CAA8BnG,2BAA4BnyB,KAAKqoB,WAAWmM,gCAC5CtC,uBAAwBlyB,KAAK01B,iBAG7DjnB,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAK8W,GAAG,IAAIC,GAAG,KACbpc,EAAA7M,EAAAC,cAAC02B,GAAD,CAAyBrG,uBAAwBlyB,KAAK21B,UAC7BxB,kBAAmBn0B,KAAKqoB,WACxB0K,uBAAwB/yB,KAAK6O,MAAMyZ,0BA5H5BvZ,aChB7BypB,GAAb,SAAAnrB,GAWE,SAAAmrB,EAAY3pB,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAw4B,IACjBz4B,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAu4B,GAAAzqB,KAAA/N,KAAM6O,KALRb,MAAQ,CACNC,MAAM,GAGWlO,EA0BnBoc,UAAY,kBAAMpc,EAAKoO,SAAS,CAACF,MAAM,KA1BpBlO,EA4BnBspB,UAAY,kBAAMtpB,EAAKoO,SAAS,CAACF,MAAM,KA5BpBlO,EAiCnB0d,OAAS,WACP1d,EAAKsoB,WAAWoQ,eAAe14B,EAAK24B,yBACpC34B,EAAK8O,MAAMyZ,iBACXvoB,EAAKspB,aAlCLtpB,EAAK24B,wBAA0B34B,EAAK44B,yBAFnB54B,EAXrB,OAAAE,OAAAoO,EAAA,EAAApO,CAAAu4B,EAAAnrB,GAAApN,OAAAqO,EAAA,EAAArO,CAAAu4B,EAAA,EAAAjqB,IAAA,qBAAAC,MAAA,SAsBqBkP,EAAWC,EAAWC,GACpC5d,KAAK6O,MAAM+pB,qBACZ54B,KAAK04B,wBAA0B14B,KAAK24B,yBACpC34B,KAAK6O,MAAMyZ,oBAzBjB,CAAA/Z,IAAA,WAAAC,MAAA,WA8BI,OAAOxO,KAAK6O,MAAMgqB,cA9BtB,CAAAtqB,IAAA,yBAAAC,MAAA,WAkCI,OAAOxO,KAAKqoB,WAAWyQ,iBAAiBC,UAlC5C,CAAAxqB,IAAA,SAAAC,MAAA,WAmDI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACm3B,GAAD,CAAyB/qB,KAAMjO,KAAKgO,MAAMC,KACjBkmB,kBAAmBn0B,KAAK04B,wBACxBpiB,QAAStW,KAAKqpB,UACd5L,OAAQzd,KAAKyd,SAEtChP,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,YAAYgL,QAAS9M,KAAKmc,UAAWtP,SAAU7M,KAAK6O,MAAMhC,UACzE7M,KAAK6O,MAAMoqB,iBA3DtBT,EAAA,CAAsDzpB,aAmEhDmqB,oLAGK,IAAArtB,EAAA7L,KAAA2T,EACsC3T,KAAK6O,MAA3CslB,EADAxgB,EACAwgB,kBAAmB1W,EADnB9J,EACmB8J,OAAQnH,EAD3B3C,EAC2B2C,QAElC,OACE7H,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,KAAMhB,KAAK,MACjCwB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,+BAEAtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAACs3B,GAAD,CAAchF,kBAAmBA,EACnB7L,eAAgB,WAGdzc,EAAKgsB,kBAIvBppB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAASwJ,GAArC,UACA7H,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS2Q,EAAQ5Q,UAAWsnB,EAAkB/Z,WAAtD,iBArB4BrL,aCvEzBqqB,GAAb,WAKE,SAAAA,EAAYjH,EAA4B6D,GAAS/1B,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAo5B,GAC/Cp5B,KAAKmnB,YAAYgL,EAA4B6D,GANjD,OAAA/1B,OAAAqO,EAAA,EAAArO,CAAAm5B,EAAA,EAAA7qB,IAAA,cAAAC,MAAA,SASc2jB,EAA4B6D,GAAQ,IAAAj2B,EAAAC,KAC9CA,KAAKq5B,8BAA8BlH,GACnCnyB,KAAKs5B,eAAetD,EAAOr1B,IAAI,SAAAoM,GAAK,OAAI,IAAI8nB,GAC1C90B,EAAK60B,6BAA6B7nB,EAAMwN,MACxCxN,QAbN,CAAAwB,IAAA,gCAAAC,MAAA,SAiBgC2jB,GAC5BnyB,KAAKmyB,2BAA6BA,IAlBtC,CAAA5jB,IAAA,+BAAAC,MAAA,SAqB+B+qB,GAC3B,OAAOv5B,KAAKw0B,gCAAgCl0B,KAAK,SAAA2mB,GAAU,OAAIA,EAAWtf,OAAS4xB,MAtBvF,CAAAhrB,IAAA,gCAAAC,MAAA,WA0BI,OAAOxO,KAAKmyB,6BA1BhB,CAAA5jB,IAAA,iBAAAC,MAAA,WA8BI,OAAOxO,KAAKw5B,cA9BhB,CAAAjrB,IAAA,iBAAAC,MAAA,SAiCiBgrB,GACbx5B,KAAKw5B,YAAcA,IAlCvB,CAAAjrB,IAAA,QAAAC,MAAA,WAsCI,OAAO,IAAI4qB,EAAkBp5B,KAAKw0B,gCAAiCx0B,KAAKy5B,eAtC5E,CAAAlrB,IAAA,YAAAC,MAAA,WA0CI,OAAOxO,KAAKq0B,iBAAiB1zB,IAAI,SAAA+4B,GAAW,OAAIA,EAAYD,gBA1ChE,CAAAlrB,IAAA,gBAAAC,MAAA,WA8CI,OAAwC,IAAjCxO,KAAKq0B,iBAAiB5mB,SA9CjC,CAAAc,IAAA,WAAAC,MAAA,SAiDW6oB,EAAUF,GACjBn3B,KAAKq0B,iBAAiBxd,OAAOsgB,EAAe,EAAGE,KAlDnD,CAAA9oB,IAAA,aAAAC,MAAA,SAqDa5M,EAAGwsB,GACZ,IAAM4H,EAASh2B,KAAKq0B,iBACdsF,EAAO3D,EAAOp0B,GACpBo0B,EAAOp0B,GAAKo0B,EAAO5H,GACnB4H,EAAO5H,GAAKuL,IAzDhB,CAAAprB,IAAA,kBAAAC,MAAA,SA4DkBnO,GACd,IAAM21B,EAASh2B,KAAKq0B,iBACd1d,EAAQqf,EAAOpf,UAAU,SAAA7J,GAAK,OAAIA,EAAM1M,KAAOA,IACjDsW,GAAS,GACXqf,EAAOnf,OAAOF,EAAO,KAhE3B,CAAApI,IAAA,UAAAC,MAAA,WAqEI,OAAgE,MAAzDxO,KAAKq0B,iBAAiB/zB,KAAK,SAAAyM,GAAK,OAAKA,EAAMqN,gBArEtDgf,EAAA,GCCaQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA35B,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA45B,GAAA35B,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA25B,GAAA71B,MAAA/D,KAAAgE,YAAA,OAAA/D,OAAAoO,EAAA,EAAApO,CAAA25B,EAAAC,GAAA55B,OAAAqO,EAAA,EAAArO,CAAA25B,EAAA,EAAArrB,IAAA,cAAAC,MAAA,SAIcyY,EAAYla,GACtB9M,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAA25B,EAAAE,WAAA,cAAA95B,MAAA+N,KAAA/N,KAAkBinB,EAAYla,GAC9B/M,KAAKy4B,eAAe,IAAIW,GACtBnS,EAAWkL,2BACXnyB,KAAK+5B,YAAY/D,WARvB,CAAAznB,IAAA,YAAAC,MAAA,WAaI,MAAO,CACLwnB,OAAQh2B,KAAK84B,iBAAiBW,eAdpC,CAAAlrB,IAAA,YAAAC,MAAA,WAmBI,OAAOxO,KAAKynB,aAnBhB,CAAAlZ,IAAA,iBAAAC,MAAA,WAuBI,OAAOxO,KAAKg6B,cAvBhB,CAAAzrB,IAAA,iBAAAC,MAAA,SA0BiBwrB,GACbh6B,KAAKg6B,YAAcA,IA3BvB,CAAAzrB,IAAA,UAAAC,MAAA,WA+BI,OAAOxO,KAAK84B,iBAAiB1e,YA/BjC,CAAA7L,IAAA,gBAAAC,MAAA,WAmCI,OAAOxO,KAAK84B,iBAAiBmB,oBAnCjCL,EAAA,CAAmC5S,GCC7BkT,GAAsB,GAAAz2B,OAAM8C,IAAN,gBAEf4zB,GAAyB,SAAA14B,GAAA,IAAEpB,EAAFoB,EAAEpB,GAAImE,EAAN/C,EAAM+C,KAAN,OAAAvE,OAAA0c,EAAA,EAAA1c,CAAA,CACpCI,MACGmE,IAGU41B,GAAA,CACPC,qBADO,eAAAC,EAAAr6B,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,IAAA,IAAAoG,EAAA,OAAAqH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYkB,YAAQu2B,IAFpB,cAEL9xB,EAFK7F,EAAAK,KAAAL,EAAAU,OAAA,SAGJmF,EAASzH,IAAIw5B,KAHT,wBAAA53B,EAAAW,SAAAlB,MAAA,yBAAAs4B,EAAAv2B,MAAA/D,KAAAgE,YAAA,ICJTu2B,GAA0B,IAEnBC,GAAb,SAAAntB,GAAA,SAAAmtB,IAAA,IAAAltB,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAw6B,GAAA,QAAAhtB,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAu6B,IAAAzsB,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNC,MAAM,GAHVlO,EAME06B,OAAS,kBAAM16B,EAAKoO,SAAS,CAACF,MAAM,KANtClO,EAQE26B,OAAS,SAACC,GAAD,OAAgB56B,EAAKoO,SAAS,CAACF,MAAM,GAAQ,kBAAM6G,WAAW6lB,EAAYJ,OARrFx6B,EAUE66B,0BAA4B,SAACZ,GAAD,OAAiBj6B,EAAK26B,OAAO,WACvD36B,EAAK86B,iBAAiBpC,eAAeuB,GACrCj6B,EAAK8O,MAAMyZ,oBAZfvoB,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAu6B,EAAAntB,GAAApN,OAAAqO,EAAA,EAAArO,CAAAu6B,EAAA,EAAAjsB,IAAA,gCAAAC,MAAA,WAiBI,OAAOxO,KAAK66B,iBAAiB/B,iBAAiBtE,kCAjBlD,CAAAjmB,IAAA,iBAAAC,MAAA,WAqBI,OAAOxO,KAAK6O,MAAMgqB,cArBtB,CAAAtqB,IAAA,SAAAC,MAAA,WAyBI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACi5B,GAAD,CAAyB7sB,KAAMjO,KAAKgO,MAAMC,KACjBysB,OAAQ16B,KAAK06B,OACbE,0BAA2B56B,KAAK46B,0BAChCzI,2BAA4BnyB,KAAKw0B,kCAE1D/lB,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,UAAUgG,QAAS9M,KAAKy6B,OAAQ34B,UAAU,iBAAiB+K,SAAU7M,KAAK6O,MAAMhC,UAAhG,+BAhCR2tB,EAAA,CAAsDzrB,aAwCzCgsB,GAAb,SAAA9rB,GAAA,SAAA8rB,IAAA,IAAA7rB,EAAArD,EAAA5L,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA+6B,GAAA,QAAA5rB,EAAAnL,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAApL,UAAAoL,GAAA,OAAAvD,EAAA5L,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAkP,EAAAjP,OAAA6N,EAAA,EAAA7N,CAAA86B,IAAAhtB,KAAAhK,MAAAmL,EAAA,CAAAlP,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNgtB,UAAW,KACX7lB,YAAY,GAJhBtJ,EAOEiK,kBAAoB,kBAAMjK,EAAKovB,kBAPjCpvB,EASEyM,qBAAuB,kBAAMzM,EAAKqvB,wBAAwB90B,UAT5DyF,EAWEovB,eAXFh7B,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAWmB,SAAAlG,IAAA,IAAAg5B,EAAA,OAAAvrB,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfoJ,EAAKsC,SAAS,CAACgH,YAAY,IADZ5S,EAAAC,KAAA,EAGbqJ,EAAKqvB,wBAA0Bx1B,YAAgB00B,GAAyBC,wBAH3D93B,EAAAE,KAAA,EAIWoJ,EAAKqvB,wBAAwBr1B,OAJxC,OAIPm1B,EAJOz4B,EAAAK,KAKbiJ,EAAKsC,SAAS,CAAC6sB,cALFz4B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAObsJ,EAAKsC,SAAS,CAACgH,YAAY,IAPd,yBAAA5S,EAAAW,SAAAlB,EAAA,iBAXnB6J,EAsBEsvB,iBAAmB,SAACC,GAClB,IAAMpB,EAAc,IAAIZ,GAAkBvtB,EAAKgD,MAAMsjB,2BAA4BiJ,EAASpF,QAC1FnqB,EAAKgD,MAAM+rB,0BAA0BZ,IAxBzCnuB,EAAA,OAAA5L,OAAAoO,EAAA,EAAApO,CAAA86B,EAAA9rB,GAAAhP,OAAAqO,EAAA,EAAArO,CAAA86B,EAAA,EAAAxsB,IAAA,SAAAC,MAAA,WA4BI,OACEC,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,KAAMysB,OAAQ16B,KAAK6O,MAAM6rB,OAAQztB,KAAK,MAC5DwB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,+BAEAtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KAEIjQ,KAAKgO,MAAMmH,YACX1G,EAAA7M,EAAAC,cAACw5B,GAAD,OAICr7B,KAAKgO,MAAMgtB,YAAch7B,KAAKgO,MAAMmH,YACrC1G,EAAA7M,EAAAC,cAACy5B,GAAD,MAIAt7B,KAAKgO,MAAMgtB,WACXvsB,EAAA7M,EAAAC,cAAC05B,GAAD,CAAcP,UAAWh7B,KAAKgO,MAAMgtB,UAAWG,iBAAkBn7B,KAAKm7B,oBAI1E1sB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAAS9M,KAAK6O,MAAM6rB,QAAhD,gBAlDVK,EAAA,CAA6ChsB,aAyDvCysB,GAAsB,kBAC1B/sB,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,uDAKI20B,GAAoB,kBACxBhtB,EAAA7M,EAAAC,cAAA,wBAGI65B,GAAe,SAAAh0B,GAAA,IAAEszB,EAAFtzB,EAAEszB,UAAWG,EAAbzzB,EAAayzB,iBAAb,OACnB1sB,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,KACEhK,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KAEImnB,EAAUr6B,IAAI,SAAAy6B,GAAQ,OACpB3sB,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAI,GAAI4nB,GAAI,EAAGptB,IAAK6sB,EAAS/6B,GAAIyB,UAAU,QAC9C2M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,KACE5jB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,KAAcqrB,EAASzzB,MACvB8G,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKpiB,KAAN,KAAYmrB,EAASxzB,aACrB6G,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKliB,OAAN,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtD,QAAS,kBAAMquB,EAAiBC,KAAxC,kBCtEDQ,GAAA,CACbrhB,KAAM,WACNgO,MAAOqR,GACPzR,kNAjDAna,MAAQ,CACN4qB,oBAAoB,KAOtBiD,2BAA6B,WAC3B97B,EAAK8O,MAAMyZ,iBACXvoB,EAAKoO,SAAS,CAACyqB,oBAAoB,OAGrCkD,yBAA2B,WACzB/7B,EAAK8O,MAAMyZ,iBACXvoB,EAAKoO,SAAS,CAACyqB,oBAAoB,+EAVnC,OAAO54B,KAAK6O,MAAM4X,uCAclB,IAAMA,EAAQzmB,KAAKqoB,WACbpB,EAAaR,EAAMiB,gBAEzB,OACEjZ,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAClBmlB,EAAWrf,aAIZ6e,EAAMwT,iBACNxrB,EAAA7M,EAAAC,cAACk6B,GAAD,CAAkClD,YAAapS,EACb6B,eAAgBtoB,KAAK67B,2BACrBhvB,SAAU7M,KAAK6O,MAAMhC,WAGzD4B,EAAA7M,EAAAC,cAACm6B,GAAD,CAAkCnD,YAAapS,EACb6B,eAAgBtoB,KAAK87B,yBACrB7C,WAAYxS,EAAMwT,gBAAkB,sBAAwB,qBAC5DrB,mBAAoB54B,KAAKgO,MAAM4qB,mBAC/B/rB,SAAU7M,KAAK6O,MAAMhC,mBAzClCkC,cCLhBskB,GAAUpzB,OAAA0c,EAAA,EAAA1c,CAAA,GAClB2wB,GADkB3wB,OAAAg8B,EAAA,EAAAh8B,CAAA,GAKpB27B,GAASrhB,KAAOqhB,KCDN1G,GAAwB,SAAChO,EAAYd,GAChD,IAAM6M,EAAqB,GAM3B,OALA7M,EAAqB1a,QAAQ,SAAAub,GAC3B,IAAMtf,EAAOsf,EAAWtf,KAClB4gB,EDAoB,SAAChO,GAC7B,IAAMuW,EAAYuC,GAAW9Y,GAC7B,IAAKuW,EACH,MAAM,IAAIhuB,MAAJ,8BAAAW,OAAwC8W,EAAxC,MAER,OAAOuW,EAAUvI,MCLD2T,CAAejV,EAAW1M,MACxC0Y,EAAmBtrB,GAAQ,IAAI4gB,EAAMtB,EAAYC,KAE5C+L,GAOIkC,GAAsB,SAAClC,GAClC,IAAMpC,EAAa,GAEnB,OADA5wB,OAAO2iB,KAAKqQ,GAAoBvnB,QAAQ,SAAA/D,GAAI,OAAIkpB,EAAWlpB,GAAQsrB,EAAmBtrB,GAAM8xB,cACrF5I,aClBIsL,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAA7uB,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAm8B,GAAA,QAAA3uB,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAAk8B,IAAApuB,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAQE2uB,UAAY,GARdt8B,EASEu8B,MAAQ,IAAIz8B,KAAK,IATnBE,EAwCEqa,QAAU,kBAA6F,MAAvFna,OAAOkZ,OAAOpZ,EAAKioB,yBAAyB1nB,KAAK,SAAAwwB,GAAS,OAAKA,EAAU1W,aAxC3Fra,EA0CES,MAAQ,kBAAMT,EAAKM,IA1CrBN,EA4CEw8B,SAAW,kBAAMx8B,EAAKoe,OA5CxBpe,EA8CEy8B,MAAQ,SAACn8B,GAAD,OAAQN,EAAKM,GAAKA,GA9C5BN,EAgDE08B,SAAW,SAACte,GAAD,OAAWpe,EAAKoe,MAAQA,GAhDrCpe,EA0DEioB,sBAAwB,kBAAMjoB,EAAKkzB,oBA1DrClzB,EAgEEmzB,2BAA6B,kBAAMnzB,EAAK28B,oBAAoBtW,sBAhE9DrmB,EAkEEsnB,wBAA0B,kBAAMtnB,EAAKqnB,sBAlEvCrnB,EA2EEU,aAAe,kBAAMV,EAAKs8B,WA3E5Bt8B,EA6EEI,aAAe,kBAAMJ,EAAK48B,gBA7E5B58B,EAmFE68B,WAAa,mBAAQ78B,EAAK48B,gBAnF5B58B,EAqFEmB,UAAY,kBAAMnB,EAAK68B,cAAgB78B,EAAKI,eAAee,aArF7DnB,EAuFE88B,SAAW,kBAAM98B,EAAK68B,cAAgB78B,EAAKI,eAAe08B,YAvF5D98B,EAyFEiB,WAAa,kBAAMjB,EAAK68B,cAAgB78B,EAAKI,eAAea,cAzF9DjB,EA+FE+8B,uBAAyB,kBAAM,EAAIX,EAAsBY,mBAAtB98B,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,KAA+C0N,QA/FpF1N,EAqGEi9B,sBAAwB,iBACtB,CAAC/8B,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,KAAA0D,OAAAxD,OAAAyW,EAAA,EAAAzW,CAASk8B,EAAsBY,mBAAtB98B,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,OACPc,OAAO,SAAAkM,GAAK,OAAIA,EAAM7L,cACtBuM,QAxGP1N,EA8GEk9B,uBAAyB,iBACvB,CAACh9B,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,KAAA0D,OAAAxD,OAAAyW,EAAA,EAAAzW,CAASk8B,EAAsBY,mBAAtB98B,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,OACPc,OAAO,SAAAkM,GAAK,OAAIA,EAAM/L,eACtByM,QAjHP1N,EAoHEm9B,SAAW,kBAAOn9B,EAAKmB,cAA6C,MAA7BnB,EAAKu8B,MAAMn8B,iBAA2BJ,EAAKu8B,MAAMn8B,eAAee,cApHzGnB,EAsHEo9B,YAAc,kBAAOp9B,EAAKmB,aAtH5BnB,EAyHEgB,gBAAkB,kBAAMhB,EAAKs8B,UAAUx7B,OAAO,SAAAC,GAAQ,OAAIA,EAASE,gBAzHrEjB,EA+HEq9B,gBAAkB,kBAChBn9B,OAAOkZ,OAAOpZ,EAAKs9B,QAAQ,MAAMC,YAC9B38B,IAAI,SAAA48B,GAAI,OAAIA,EAAKC,gBAAgBC,aAjIxC19B,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAAk8B,EAAAC,GAAAn8B,OAAAqO,EAAA,EAAArO,CAAAk8B,EAAA,EAAA5tB,IAAA,cAAAC,MAAA,SAWczB,EAAO2wB,GACZ3wB,EAAM1M,IACTL,KAAK29B,uBAAuB5wB,EAAO2wB,GAErCz9B,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAAk8B,EAAArC,WAAA,cAAA95B,MAAA+N,KAAA/N,KAAkB+M,EAAO2wB,GACzB19B,KAAKy8B,SAAS1vB,EAAMoR,OACpBne,KAAK08B,oBAAsBgB,EAAOE,uBAAuB7wB,EAAMwN,MAC/Dva,KAAKonB,qBAAuBra,EAAM8jB,YAAc,GAChD7wB,KAAKi1B,sBAAsBC,GAAsBl1B,KAAMA,KAAKkzB,iCAnBhE,CAAA3kB,IAAA,yBAAAC,MAAA,SAsByBzB,EAAO2wB,GAC5B3wB,EAAM1M,GAAK+0B,OACXroB,EAAMoR,MAAQuf,EAAOrV,WAAWwV,oBAChC9wB,EAAMmZ,MAAQnZ,EAAMmZ,MAAMvlB,IAAI,SAAAm9B,GAAI,OAAA79B,OAAA0c,EAAA,EAAA1c,CAAA,GAC7B69B,EAD6B,CAEhCz9B,GAAI+0B,aA3BV,CAAA7mB,IAAA,YAAAC,MAAA,WAgCI,OAAOvO,OAAA0c,EAAA,EAAA1c,CAAA,GAAAA,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAAk8B,EAAArC,WAAA,YAAA95B,MAAA+N,KAAA/N,MAAA,CAELme,MAAOne,KAAKu8B,WACZhiB,KAAMva,KAAK08B,oBAAoB/0B,KAC/BkpB,WAAYsE,GAAoBn1B,KAAKgoB,6BApC3C,CAAAzZ,IAAA,WAAAC,MAAA,WAmDI,MAAO,YAnDX,CAAAD,IAAA,iBAAAC,MAAA,WAuDI,OAAOvO,OAAOkZ,OAAOnZ,KAAK+9B,cAvD9B,CAAAxvB,IAAA,wBAAAC,MAAA,SA4DwBykB,GACpBjzB,KAAKizB,mBAAqBA,IA7D9B,CAAA1kB,IAAA,UAAAC,MAAA,SAoEU1O,GACNE,KAAKs8B,MAAQx8B,EACbE,KAAK28B,eAAiB78B,EAAKK,eAAiBL,EAAKK,eAAeS,YAAYZ,KAAKQ,SAAW,KAC5FR,KAAKq8B,UAAYv8B,EAAKW,aAAaT,KAAKQ,aAvE5C27B,EAAA,CAA2C6B,oBAA9B7B,GAyIJY,mBAAqB,SAAChwB,GAAwB,IAAjBkxB,EAAiBj6B,UAAAyJ,OAAA,QAAA+Z,IAAAxjB,UAAA,GAAAA,UAAA,GAAP,GACtCk6B,EAAenxB,EAAMqwB,kBAK3B,OAJIc,EAAazwB,OAAS,IACxBwwB,EAAQ/yB,KAARnH,MAAAk6B,EAAOh+B,OAAAyW,EAAA,EAAAzW,CAASi+B,IAChBA,EAAaxyB,QAAQ,SAAAimB,GAAM,OAAIwK,GAAsBY,mBAAmBpL,EAAQsM,MAE3EA,iBC/IEE,WAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAl+B,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAm+B,GAAAl+B,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAk+B,GAAAp6B,MAAA/D,KAAAgE,YAAA,OAAA/D,OAAAoO,EAAA,EAAApO,CAAAk+B,EAAAC,GAAAn+B,OAAAqO,EAAA,EAAArO,CAAAk+B,EAAA,EAAA5vB,IAAA,SAAAC,MAAA,WAEW,IACA6vB,EAAQr+B,KAAK6O,MAAbwvB,KAEP,OACE5vB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CAAMvwB,UAAU,QAAQ6hB,MAAO,CAC7B2M,gBAAiB+N,EAAKC,WACtBnY,MAAO2I,GAAgCuP,EAAKC,cAE5C7vB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,KACEtB,EAAA7M,EAAAC,cAAC08B,EAAA,WAAD,CAAY52B,KAAK,KAAK02B,KAAMA,IAE5B5vB,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,cACZu8B,EAAK12B,MAGR8G,EAAA7M,EAAAC,cAAC08B,EAAA,WAAD,CAAY52B,KAAK,MAAM02B,KAAMA,IAE7B5vB,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,mBAGXu8B,EAAKr9B,cACLyN,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,wBAMbu8B,EAAKn9B,aACLuN,EAAA7M,EAAAC,cAAC28B,GAAA,EAAD,CAAS33B,UAAU,OAAOoG,KAAK,OAM/BoxB,EAAKxB,YACLpuB,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,qCAMZu8B,EAAKjkB,WACN3L,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,6CA5C3Bq8B,EAAA,CAA4CM,sBCD/BC,GAAb,SAAAC,GAQE,SAAAD,EAAYE,GAAW,IAAA7+B,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA0+B,IACrB3+B,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAy+B,GAAA3wB,KAAA/N,KAAA,GAAAyD,OAASm7B,EAAT,cACKC,aAAaD,GAFG7+B,EARzB,OAAAE,OAAAoO,EAAA,EAAApO,CAAAy+B,EAAAC,GAAA1+B,OAAAqO,EAAA,EAAArO,CAAAy+B,EAAA,OAAAnwB,IAAA,oBAAAC,MAAA,SAI4BowB,GACxB,OAAO,MALX3+B,OAAAqO,EAAA,EAAArO,CAAAy+B,EAAA,EAAAnwB,IAAA,eAAAC,MAAA,SAaeowB,GACX5+B,KAAK4+B,UAAYA,IAdrB,CAAArwB,IAAA,UAAAC,MAAA,WAkBI,OAAOxO,KAAK8+B,iBAlBhB,CAAAvwB,IAAA,eAAAC,MAAA,WAsBI,OAAOxO,KAAK4+B,YAtBhB,CAAArwB,IAAA,iBAAAC,MAAA,WA0BI,OAAO,IAAI2tB,KA1Bf,CAAA5tB,IAAA,sBAAAC,MAAA,SA6BsBuwB,EAAeV,GACjC,OAAOjG,IAAMv2B,cAAcs8B,GAAwB,CACjDE,OACAU,sBAhCNL,EAAA,CAA6CM,+BCHtCC,GAA0CC,KAA1CD,OAAQE,GAAkCD,KAAlCC,QAASC,GAAyBF,KAAzBE,SAAUC,GAAeH,KAAfG,YAErBC,GAAb,WAME,SAAAA,EAAY/+B,EAAKG,GAAS,IAAAX,EAAAC,KAAAC,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAs/B,GAAAt/B,KAY1BuxB,WAAa,kBAAMxxB,EAAKW,SAZEV,KAc1Bu/B,SAAW,kBAAMx/B,EAAKy/B,WAAWD,YAdPv/B,KAgB1By/B,WAAa,kBAAM1/B,EAAKy/B,WAAWC,cAhBTz/B,KAkB1BkB,UAAY,kBAAMnB,EAAKy/B,WAAWE,aAAeP,IAAWp/B,EAAK4/B,QAAQD,aAAeP,IAlB9Dn/B,KAoB1B68B,SAAW,kBAAM98B,EAAKy/B,WAAWE,aAAeT,IAAUl/B,EAAK4/B,QAAQD,aAAeT,IApB5Dj/B,KAsB1BgB,WAAa,kBAAMjB,EAAKy/B,WAAWE,aAAeN,IAAYr/B,EAAK4/B,QAAQD,aAAeN,IArBxFp/B,KAAKU,QAAUA,EACfV,KAAKw/B,WAAaF,EAAkBM,yBAAyBr/B,EAAKG,GAClEV,KAAK2/B,QAAUL,EAAkBM,yBAAyBr/B,EAA3C,GAAAkD,OAAmD/C,EAAnD,UATnB,OAAAT,OAAAqO,EAAA,EAAArO,CAAAq/B,EAAA,OAAA/wB,IAAA,YAAAC,MAAA,SAcmB1O,EAAMY,GACrB,OAAOZ,EAAKA,KAAKa,IAAI,SAAAJ,GAAG,OAAI,IAAI++B,EAAkB/+B,EAAKG,SAf3D4+B,EAAA,GAAaA,GAYJM,yBAA2B,SAACr/B,EAAKG,GAAN,OAAkBH,EAAIK,YAAYF,IAAY,CAACg/B,SAAU,kBAAML,MCb5F,IAAMQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA5/B,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA6/B,GAAA5/B,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA4/B,GAAA97B,MAAA/D,KAAAgE,YAAA,OAAA/D,OAAAoO,EAAA,EAAApO,CAAA4/B,EAAAC,GAAA7/B,OAAAqO,EAAA,EAAArO,CAAA4/B,EAAA,EAAAtxB,IAAA,UAAAC,MAAA,SAGU1O,GACNE,KAAKs8B,MAAQx8B,EACbE,KAAK28B,eAAiB78B,EAAKK,eAAiB,IAAIm/B,GAAkBx/B,EAAKK,eAAgBH,KAAKQ,SAAW,KACvGR,KAAKq8B,UAAYiD,GAAkBS,UAAUjgC,EAAME,KAAKQ,WAN5D,CAAA+N,IAAA,WAAAC,MAAA,WAWI,IAAMwxB,EAAuBhgC,KAAKigC,mCAClC,OAAKD,EAAqB3Q,4BAGnBrvB,KAAKwvB,sBAAsBE,uBAChCsQ,EAAqB5Q,wBACrBjJ,MAJOlmB,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAA4/B,EAAA/F,WAAA,WAAA95B,MAAA+N,KAAA/N,QAbb,CAAAuO,IAAA,mCAAAC,MAAA,WAqBI,OAAOxO,KAAKgoB,wBAAL,oBArBX,CAAAzZ,IAAA,sBAAAC,MAAA,WAyBI,OAAOxO,KAAK2xB,OAAOnC,0BAzBvBqQ,EAAA,CAAsC1D,ICAhC+D,GAAgB,CCEtB,SAAAC,GAME,SAAAC,EAAYxB,GAAW,IAAA7+B,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAogC,IACrBrgC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAmgC,GAAAryB,KAAA/N,KAAA,aACK6+B,aAAaD,GAFG7+B,EANzB,OAAAE,OAAAoO,EAAA,EAAApO,CAAAmgC,EAAAD,GAAAlgC,OAAAqO,EAAA,EAAArO,CAAAmgC,EAAA,OAAA7xB,IAAA,oBAAAC,MAAA,SAE4BowB,GACxB,MAAqB,OAAdA,MAHX3+B,OAAAqO,EAAA,EAAArO,CAAAmgC,EAAA,EAAA7xB,IAAA,iBAAAC,MAAA,WAYI,OAAO,IAAIqxB,KAZf,CAAAtxB,IAAA,sBAAAC,MAAA,SAesBuwB,EAAeV,GACjC,OAAOjG,IAAMv2B,cAAcs8B,GAAwB,CACjDE,OACAU,sBAlBNqB,EAAA,CAAwC1B,IDAtCA,IAGa2B,GAAA,SACezB,GACzB,OAAOsB,GAAc5/B,KAAK,SAAAggC,GAAO,OAAIA,EAAQC,kBAAkB3B,MER/C4B,yLAEL1C,GACZ,IAAK79B,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAAugC,EAAA1G,WAAA,gBAAA95B,MAAA+N,KAAA/N,KAAoB89B,GACvB,OAAO,EAET,IAAM2C,EAAqCD,EAAeE,qBAAqB1gC,KAAK2gC,YAIpF,OAHIF,GACF33B,QAAQE,KAAK,mDAEPy3B,qCAIR,OAAOzgC,KAAK2xB,oDAGO,IAAA5xB,EAAAC,KACnB,OAAOA,KAAK4gC,iBACTjgC,IAAI,SAAA48B,GAAI,OAAIA,EAAKsD,aAAe9gC,EAAOw9B,EAAKuD,WAAavD,EAAKsD,aAC9DlgC,IAAI,SAAAm9B,GAAI,OAAIA,EAAK6C,sDAIpB,OAAO1gC,OAAOkZ,OAAOnZ,KAAKs9B,2DAGAvwB,GAA6B,IAAtBg0B,EAAsB/8B,UAAAyJ,OAAA,QAAA+Z,IAAAxjB,UAAA,GAAAA,UAAA,GAAJ,GACnD+8B,EAAgBh0B,EAAMvM,UAAW,EACjC,IACMwgC,EADUj0B,EAAMswB,QAAQ,OACE4D,qBAHuBC,GAAA,EAAAC,GAAA,EAAAC,OAAA5Z,EAAA,IAIvD,QAAA6Z,EAAAC,EAA2BN,EAA3BO,OAAAC,cAAAN,GAAAG,EAAAC,EAAA7+B,QAAAg/B,MAAAP,GAAA,EAA4C,KAAnCQ,EAAmCL,EAAA7yB,MAC1C,GAAIuyB,EAAgBW,EAAelhC,SACjC,OAAO,EAET,GAAIggC,EAAeE,qBAAqBgB,EAAgBX,GACtD,OAAO,GAT4C,MAAA56B,GAAAg7B,GAAA,EAAAC,EAAAj7B,EAAA,YAAA+6B,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAavD,OADAL,EAAgBh0B,EAAMvM,UAAW,GAC1B,SAxCiCohC,oBCCvBC,0LAEJC,GACb,OAAO,IAAItB,UAH+BuB,sBCEjCC,GAAb,SAAAC,GAIE,SAAAD,EAAYE,GAAsB,IAAAniC,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgiC,IAChCjiC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA+hC,GAAAj0B,KAAA/N,QACKmiC,wBAAwBD,GAC7BniC,EAAKqiC,oBAH2BriC,EAJpC,OAAAE,OAAAoO,EAAA,EAAApO,CAAA+hC,EAAAC,GAAAhiC,OAAAqO,EAAA,EAAArO,CAAA+hC,EAAA,EAAAzzB,IAAA,0BAAAC,MAAA,SAU0B0zB,GACtBliC,KAAKkiC,qBAAuBA,IAXhC,CAAA3zB,IAAA,oBAAAC,MAAA,WAeIxO,KAAKqiC,oBAAoB,IAAI7b,GAC7BxmB,KAAKsiC,oBAAoB,IAAIT,IAC7B7hC,KAAKuiC,qBAAqB,IAAIC,uBAC9BxiC,KAAKyiC,0BAlBT,CAAAl0B,IAAA,wBAAAC,MAAA,WAqB2B,IAAA3C,EAAA7L,KACvBA,KAAKsmB,0BAA0B5a,QAAQ,SAAAgxB,GACrC,IAAM4D,EAAUJ,GAAyCxD,EAAoB/0B,MAC7EkE,EAAK62B,oBAAoB,IAAIpC,EAAQ5D,EAAoB/0B,WAxB/D,CAAA4G,IAAA,0BAAAC,MAAA,WA6BI,OAAOxO,KAAKkiC,uBA7BhB,CAAA3zB,IAAA,yBAAAC,MAAA,SAgCyBowB,GACrB,OAAO5+B,KAAKsmB,0BAA0BhmB,KAAK,SAAA2mB,GAAU,OAAIA,EAAWtf,OAASi3B,MAjCjF,CAAArwB,IAAA,WAAAC,MAAA,WAqCI,OAAOxO,KAAK2iC,sBArChBX,EAAA,CAAyCY,iBCGpBC,eAQnB,SAAAA,EAAYh0B,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA6iC,IACjB9iC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA4iC,GAAA90B,KAAA/N,KAAM6O,KALRb,MAAQ,CACN80B,sBAAsB,GAGL/iC,EASnBgjC,UAAY,WACVhjC,EAAK29B,OAAS,IAAIsE,GAAoBjiC,EAAK8O,MAAMqzB,sBACjDniC,EAAK29B,OAAOsF,gBAAgBjjC,EAAKsoB,YACjCtoB,EAAK29B,OAAOwE,qBAAuBniC,EAAK8O,MAAMqzB,sBAZ7BniC,EAenBkjC,iBAAmB,SAACp7B,GAClB,GAAIA,GAASA,EAAMxH,GACjB,IACEN,EAAKsoB,WAAW6a,mBAAmBr7B,EAAO9H,EAAK29B,QAC/C39B,EAAKojC,oCACL,MAAO7tB,GACPvV,EAAKoO,SAAS,CAAC20B,sBAAsB,IACrCh6B,QAAQ1G,MAAM,8CAA+CkT,KAtBhDvV,EA2BnBojC,kCAAoC,WAClCljC,OAAOkZ,OAAOpZ,EAAKsoB,WAAW+a,YAC3B13B,QAAQ3L,EAAKsjC,sBA7BCtjC,EAgCnBujC,OAAS,SAAC3iB,GACJ5gB,EAAKwjC,iCAAiC5iB,IACxC5gB,EAAKyjC,mBAAmB7iB,IAlCT5gB,EAsCnBwjC,iCAAmC,SAAC5iB,GAAD,QAAa5gB,EAAK0jC,gCAAgC9iB,IAtClE5gB,EAwCnByjC,mBAAqB,SAAC7iB,GACpB,IAAM+b,EAAsB38B,EAAK0jC,gCAAgC9iB,GAC3D+iB,EAAW3jC,EAAK4jC,iBAAiBhjB,GACvC5gB,EAAK6jC,+BAA+BlH,EAAqBgH,IA3CxC3jC,EA8CnB0jC,gCAAkC,SAAC9iB,GAAD,OAAW9b,KAAK8yB,MAAMhX,EAAMkjB,aAAaC,QAAQ,yBA9ChE/jC,EAgDnB4jC,iBAAmB,SAAChjB,GAAD,OAAW5gB,EAAK29B,OAAOqG,sBAAsBpjB,IAhD7C5gB,EAkDnB6jC,+BAAiC,SAAClH,EAAqBgH,GACrD,IAAMrF,EAAOt+B,EAAKikC,wBAAwBtH,EAAqBgH,GAC/D3jC,EAAKkkC,eAAe5F,EAAM3B,IApDT38B,EAuDnBikC,wBAA0B,SAACtH,EAAqBgH,GAC9C,IAAMnpB,EAAOmiB,EAAoB/0B,KAE3B02B,EADUt+B,EAAK29B,OAAOwG,eAAe3pB,GACtB4pB,iBAWrB,OAVA9F,EAAK1M,OAAS5xB,EAAKsoB,WACnBgW,EAAKlX,YAAY,CACfxf,KAAM+0B,EAAoBzW,YAC1B1L,KAAMmiB,EAAoB/0B,KAC1Bue,MAAOwW,EAAoBxW,MAC3BC,MAAOuW,EAAoBvW,MAE3Bie,EAAGV,EAASU,EACZC,EAAGX,EAASW,GACXtkC,EAAK29B,QACDW,GArEUt+B,EAyEnBkkC,eAAiB,SAAC5F,GAChBt+B,EAAKsjC,oBAAoBhF,GACzBt+B,EAAKsoB,WAAWic,QAAQjG,GACxBt+B,EAAK8O,MAAM01B,iBA5EMxkC,EA+EnBsjC,oBAAsB,SAAChF,GAAD,OAAUA,EAAKmG,YAAY,CAC/CC,iBAAkB1kC,EAAK2kC,sBACvBC,cAAe5kC,EAAK2kC,yBAjFH3kC,EAoFnB2kC,sBAAwB,WACtB,IAAME,EAAgB7kC,EAAK8kC,mBAC3B,GAA6B,IAAzBD,EAAcn3B,OAAc,CAC9B,IAAM4wB,EAAOuG,EAAc,GAC3B7kC,EAAK8O,MAAMi2B,gBAAgBzG,QAE3Bt+B,EAAK8O,MAAMi2B,gBAAgB,OA1FZ/kC,EA8FnB8kC,iBAAmB,kBAAM9kC,EAAKsoB,WAAW0c,iBAAiB,SA9FvChlC,EAgGnBsoB,SAAW,kBAAMtoB,EAAK8O,MAAMm2B,YA9F1BjlC,EAAKgjC,YAFYhjC,mFAMjBC,KAAKijC,iBAAiBjjC,KAAK6O,MAAMo2B,+CA6FjC,OAAIjlC,KAAKgO,MAAM80B,qBACNr0B,EAAA7M,EAAAC,cAACqjC,GAAD,MAGLz2B,EAAA7M,EAAAC,cAAA,OAAKyhC,OAAQtjC,KAAKsjC,OACb6B,WAAY,SAAAxkB,GAAK,OAAIA,EAAMykB,kBAC3BtjC,UAAU,4BACb2M,EAAA7M,EAAAC,cAAC08B,EAAA,cAAD,CAAeQ,cAAe/+B,KAAK09B,iBAlHI3uB,aA0H3Cs2B,GAA4B,kBAChC52B,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,mCACb2M,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpO,UAAU,wBAAwBgF,QAAQ,UAAjD,8BCxGWw+B,GAxBuB,SAAA7jC,GAAA,IAAEygC,EAAFzgC,EAAEygC,qBAAF,OACpCzzB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,oBAEA4M,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KAEIouB,EAAqBvhC,IAAI,SAAAuhC,GAAoB,OAC3CzzB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CACEvwB,UAAU,OACVyM,IAAK2zB,EAAqB7hC,GAC1BklC,WAAS,EACTC,YAAa,SAAA7kB,GAAK,OAAIA,EAAMkjB,aAAa4B,QAAQ,sBAAuB5gC,KAAKC,UAAUo9B,MACvFzzB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,CAAajO,UAAU,2CACpBogC,EAAqBjc,oBCdjByf,eAGnB,SAAAA,EAAY72B,GAAO,IAAA9O,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA0lC,IACjB3lC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAylC,GAAA33B,KAAA/N,KAAM6O,KAQR82B,aAAe,SAAChlB,GAAD,OAAW5gB,EAAKoO,SAAS,CACtCxG,KAAMgZ,EAAMpL,OAAO/G,SAVFzO,EAanB6lC,oBAAsB,SAACjlB,GAAD,OAAW5gB,EAAKoO,SAAS,CAC7CvG,YAAa+Y,EAAMpL,OAAO/G,SAdTzO,EAiBnBya,OAAS,kBAAMza,EAAK8O,MAAMg3B,OAAX5lC,OAAA0c,EAAA,EAAA1c,CAAA,GACVF,EAAK8O,MAAMrG,SADD,CAEbb,KAAM5H,EAAKiO,MAAMrG,MAAQ5H,EAAK8O,MAAMlH,KACpCC,YAAa7H,EAAKiO,MAAMpG,aAAe7H,EAAK8O,MAAMjH,gBApBjC,IAAAk+B,EAEWj3B,EAAMrG,SAA3Bb,EAFUm+B,EAEVn+B,KAAMC,EAFIk+B,EAEJl+B,YAFI,OAGjB7H,EAAKiO,MAAQ,CACXrG,OACAC,eALe7H,wEAyBjB,OACE0O,EAAA7M,EAAAC,cAAA,WAGE4M,EAAA7M,EAAAC,cAAC+xB,GAAD,CAAwB5P,MAAM,QAC5BvV,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,OAAO4S,KAAK,OAAO/L,MAAOxO,KAAKgO,MAAMrG,KAAM0N,SAAUrV,KAAK2lC,aAC/DnrB,OAAQxa,KAAKwa,OAAQ3N,SAAU7M,KAAK6O,MAAMhC,YAG1D4B,EAAA7M,EAAAC,cAAC+xB,GAAD,CAAwB5P,MAAM,eAC5BvV,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,cAAc4S,KAAK,OAAOvN,GAAG,WAAWwB,MAAOxO,KAAKgO,MAAMpG,YAC/DyN,SAAUrV,KAAK4lC,oBAAqBprB,OAAQxa,KAAKwa,OAAQ3N,SAAU7M,KAAK6O,MAAMhC,oBAvChDkC,wECChDg3B,WAAkB,CAAC,OAAQ,QAEZC,8MAEnBh4B,MAAQ,CACNi4B,eAAgBF,GAAgB,MAGlCG,uBAAyB,SAACD,GAAD,OAAoBlmC,EAAKoO,SAAS,CAAC83B,4FAEnD,IAAAtyB,EACiC3T,KAAK6O,MAAtCs3B,EADAxyB,EACAwyB,SAAUC,EADVzyB,EACUyyB,oBACjB,GAAID,EAASplC,kBAAkB0M,QAAU,EACvC,OACEgB,EAAA7M,EAAAC,cAACwkC,GAAD,MAGJ,IAAMC,EAAiBtmC,KAAKgO,MAAMi4B,eAC5BM,EAAoBJ,EAASplC,kBAAkB,GACrD,OACE0N,EAAA7M,EAAAC,cAAA,iCAGE4M,EAAA7M,EAAAC,cAAC2kC,GAAA,EAAD,CAAe1kC,UAAU,iCACvB2M,EAAA7M,EAAAC,cAAC4kC,GAAA,EAAD,CAAmBlsB,KAAK,QACL5S,KAAK,iBACL++B,aAAcX,GAAgB,GAC9B1wB,SAAUrV,KAAKkmC,wBAE9BH,GAAgBplC,IAAI,SAAAgmC,GAAM,OACxBl4B,EAAA7M,EAAAC,cAAC+kC,GAAA,EAAD,CAAcr4B,IAAKo4B,EAAQn4B,MAAOm4B,GAASA,EAAOE,mBAM1Dp4B,EAAA7M,EAAAC,cAACiuB,GAAA,EAAD,CAAU9iB,GAAI85B,KAAahlC,UAAU,aACnC2M,EAAA7M,EAAAC,cAACklC,GAAD,CAAsBxJ,KAAM6I,EAAoBG,EAAmBD,GAC7CU,UAAWb,EAASjlC,YACpBb,GAAIkmC,EAAkBhH,aAE5C9wB,EAAA7M,EAAAC,cAACiuB,GAAA,EAASM,OAAV,CAAiB6W,OAAK,EAACngC,QAAQ,YAE/B2H,EAAA7M,EAAAC,cAACiuB,GAAA,EAASW,KAAV,KAEI0V,EAASplC,kBAAkBJ,IAAI,SAACJ,EAAKoW,GAAN,OAC7BlI,EAAA7M,EAAAC,cAACqlC,GAAD,CAAkB34B,IAAKhO,EAAIg/B,WACThC,KAAM6I,EAAoB7lC,EAAK+lC,GAC/BU,UAAWb,EAASjlC,aAAyB,IAAVyV,EACnCtW,GAAIE,EAAIg/B,yBA/CIxwB,aAyDjCo4B,GAAmB,kBAAO14B,EAAA7M,EAAAC,cAAA,yCAE1BulC,GAAuB,SAAA3lC,GAAA,IAAE87B,EAAF97B,EAAE87B,KAAMyJ,EAARvlC,EAAQulC,SAAU3mC,EAAlBoB,EAAkBpB,GAAlB,OAClCoO,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,kBAAkB6hB,MAAO,CAACwC,MAAO,SAAU/H,KAAMmf,EAAMhoB,OAAO,SAAS8I,IAAI,uBACrF2oB,EAAW,0BAAH,aAAAvjC,OAA4CpD,KAI5CgnC,GAAmB,SAAA3/B,GAAA,IAAE61B,EAAF71B,EAAE61B,KAAMyJ,EAARt/B,EAAQs/B,SAAU3mC,EAAlBqH,EAAkBrH,GAAlB,OAC9BoO,EAAA7M,EAAAC,cAACiuB,GAAA,EAASY,KAAV,CAAetS,KAAMmf,EAAMhoB,OAAO,UAAlC,IACIlV,EADJ,IACS2mC,EAAW,YAAc,KCnErBM,WAAA,SAACz4B,GAAD,OACbJ,EAAA7M,EAAAC,cAAA,YAEKgN,EAAMod,UACPxd,EAAA7M,EAAAC,cAAC0lC,GAAkB14B,GAGrBJ,EAAA7M,EAAAC,cAAC2lC,GAAgB34B,MAIf44B,GAAgB,SAAAhmC,GAAA,IAAE0kC,EAAF1kC,EAAE0kC,SAA+BuB,GAAjCjmC,EAAY2kC,oBAAZ3kC,EAAiCimC,SAASC,EAA1ClmC,EAA0CkmC,WAAYC,EAAtDnmC,EAAsDmmC,UAAtD,OACpBn5B,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,KACE5jB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,kBAEAtB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKpiB,KAAN,KAEIk2B,EAASjlC,aACTuN,EAAA7M,EAAAC,cAAA,kDACuCskC,EAAShmC,eAAeo/B,WAD/D,KAC4E9wB,EAAA7M,EAAAC,cAAA,WAD5E,YAEW4M,EAAA7M,EAAAC,cAAA,WACT4M,EAAA7M,EAAAC,cAACgmC,GAAD,CAAiB1B,SAAUA,KAI/B13B,EAAA7M,EAAAC,cAAC8K,GAAA,EAAD,CAAeI,OAAK,EAACD,QAAS46B,EACf76B,UAAWs5B,EAASjJ,WACpBtwB,UAAW+6B,GAAaC,MAMvCE,GAAc,SAAApgC,GAAA,IAAEy+B,EAAFz+B,EAAEy+B,SAAUC,EAAZ1+B,EAAY0+B,oBAAZ,OAClB33B,EAAA7M,EAAAC,cAACwwB,GAAA,EAAD,CAAMvwB,UAAU,QACd2M,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKtiB,OAAN,gBACAtB,EAAA7M,EAAAC,cAACwwB,GAAA,EAAKpiB,KAAN,KACExB,EAAA7M,EAAAC,cAACkmC,GAAD,CAAkB3B,oBAAqBA,EACrBD,SAAUA,OAK5B6B,GAAkB,SAAAnwB,GAAgB,IAAdsuB,EAActuB,EAAdsuB,SAClB8B,EAAqB5Z,KAAK6Z,KAAK/B,EAASlJ,yBAA2BkJ,EAASrJ,yBAA2B,KACvGqL,EAAoB9Z,KAAK6Z,KAAK/B,EAASnJ,wBAA0BmJ,EAASrJ,yBAA2B,KAC3G,OACEruB,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACqgB,GAAA,EAAD,CAAapgB,UAAU,2BACrB2M,EAAA7M,EAAAC,cAACqgB,GAAA,EAAD,CAAaC,UAAQ,EAACrb,QAAQ,UAAUsb,IAAKiM,KAAK+Z,IAAI,EAAGH,GAAqB15B,IAAK,IACnFE,EAAA7M,EAAAC,cAACqgB,GAAA,EAAD,CAAaC,UAAQ,EAACrb,QAAQ,UAAUsb,IAAK+lB,EAAmB55B,IAAK,KAIvEE,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,uBACb2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,eACb2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,qEADjB,mBAIA2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,eACb2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,qEADjB,qBC3DaumC,8MAEnBr6B,MAAQ,CACN25B,YAAY,EACZW,YAAY,KAGd7+B,mCAAgB,SAAAzH,IAAA,IAAA4H,EAAA,OAAA6F,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACd1C,EAAKoO,SAAS,CAACw5B,YAAY,EAAMW,YAAY,IAD/B/lC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGeia,IAAiBrT,qBAAqBtJ,EAAKuI,eAH1D,cAGNsB,EAHMrH,EAAAK,KAAAL,EAAAE,KAAA,EAIN1C,EAAKwoC,wBAAwB3+B,GAJvB,OAAArH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMZxC,EAAKoO,SAAS,CAACm6B,YAAY,IANf,QAQdvoC,EAAKoO,SAAS,CAACw5B,YAAY,IARb,yBAAAplC,EAAAW,SAAAlB,EAAA,mBAWhBumC,wBAA0B,SAAC3+B,GAAD,OAAkB,IAAI9D,QAAQ,SAACC,EAASC,GAOhEjG,EAAK8O,MAAM25B,iBAAiBC,gBANX,SAAXx9B,EAAYu9B,GACZA,EAAiBE,UAAUtoC,YAAYwJ,KACzC4+B,EAAiBG,mBAAmB19B,GACpClF,YAMNuC,YAAc,kBAAMvI,EAAK8O,MAAM25B,iBAAiBlgC,uFAEvC,IACAq/B,EAAc3nC,KAAKgO,MAAnB25B,WADAh0B,EAE8B3T,KAAK6O,MAAnC25B,EAFA70B,EAEA60B,iBAAkBvc,EAFlBtY,EAEkBsY,SACzB,OACExd,EAAA7M,EAAAC,cAAA,WAEI7B,KAAKgO,MAAMs6B,YACX75B,EAAA7M,EAAAC,cAACqO,EAAA,EAAD,CAAOpJ,QAAQ,UAAf,yBAKF2H,EAAA7M,EAAAC,cAACylC,GAAD,CAAcnB,SAAUqC,EACVpC,oBAAqB,SAAC7lC,EAAKomC,GAAN,OAAiBiC,KAAYC,gBAAgBtoC,EAAKomC,IACvEiB,UAAU,iBACVF,QAAS1nC,KAAKyJ,cACdk+B,WAAYA,EACZ1b,SAAUA,YA/CkBld,aCFnC+5B,WAAA,SAAArnC,GAAA,IAAEuiB,EAAFviB,EAAEuiB,MAAO+kB,EAATtnC,EAASsnC,OAAT,OACbt6B,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,kBACb2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,8BACb2M,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAAA,UAAKmiB,KAIR+kB,mCCTcC,eAEnB,SAAAA,EAAYn6B,GAAO,IAAA9O,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgpC,IACjBjpC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA+oC,GAAAj7B,KAAA/N,KAAM6O,KAYRo6B,gBAAkB,WAChB,IAAM9iB,EAAQ4H,KACdhuB,EAAKoO,SAAS,CACVgY,QACA+iB,SAAU/iB,GACT,kBAAMpmB,EAAK8O,MAAMwG,SAAStV,EAAKiO,MAAMmY,UAlBzBpmB,EAuBnByU,cAAgB,SAACc,GACf,IAAM6Q,EAAQ7Q,EAAEC,OAAO/G,MACvBzO,EAAKoO,SAAS,CAAC+6B,SAAU/iB,IACrBuI,GAAWvI,KACbpmB,EAAKoO,SAAS,CAACgY,UACfpmB,EAAK8O,MAAMwG,SAAS8Q,KA1BtB,IAAIA,EAAQtX,EAAMsX,MAFD,OAGZA,IACHA,EAAQ4H,KACRhuB,EAAK8O,MAAMwG,SAAS8Q,IAEtBpmB,EAAKiO,MAAQ,CACXmY,QACA+iB,SAAU/iB,GATKpmB,wEAgCV,IAAA2T,EACmB1T,KAAKgO,MAAxBmY,EADAzS,EACAyS,MAAO+iB,EADPx1B,EACOw1B,SACd,OACEz6B,EAAA7M,EAAAC,cAAC6f,GAAA,EAAD,CAAY5f,UAAU,QACpB2M,EAAA7M,EAAAC,cAAC6f,GAAA,EAAWmK,QAAZ,KACEpd,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,oBACRgG,QAAS9M,KAAKipC,gBACdtlB,MAAO,CACL2M,gBAAiBnK,EACjBgjB,YAAahjB,EACbA,MAAO2I,GAAgC3I,KAE/C1X,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,sBAGjB2M,EAAA7M,EAAAC,cAAC8f,GAAA,EAAD,CAAaynB,mBAAiB,eAAe56B,MAAO06B,EACvC7zB,SAAUrV,KAAKwU,wBAlDWzF,aCHlCs6B,WAAiC,yFAEzBC,cAKnB,SAAAA,EAAYtE,GAAY,IAAAjlC,EAAAC,KAAAC,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAspC,GAAAtpC,KAFxBiwB,SAAW,GAEajwB,KAkDxBupC,6BAA+B,SAAClZ,GAAD,OAC7BtwB,EAAKypC,qCACF99B,QAAQ,SAAAs0B,GAAoB,OAAIA,EAAqB7Q,qBAAqBkB,EAAQhwB,OApD/DL,KAsDxBwpC,mCAAqC,kBAAMzpC,EAAK0pC,mBAC7C9oC,IAAI,SAAAoM,GAAK,OAAIA,EAAMkzB,sCAvDEjgC,KAoExB0pC,8BAAgC,SAACrZ,GAAD,OAC9BtwB,EAAKypC,qCACF3oC,OAAO,SAAAm/B,GAAoB,OAAIA,EAAqB5Q,yBAA2BiB,EAAQhwB,KACvFqL,QAAQ,SAAAs0B,GAAoB,OAAIA,EAAqB7Q,qBAAqB,SAvEvDnvB,KA0ExB2pC,6CAA+C,WAC7C,IAAMC,EAA+C,IAA9B7pC,EAAKmwB,cAAcziB,OACpCuoB,EAASj2B,EAAKilC,WAAW6E,iBACzBC,EAAmC/pC,EAAKypC,qCAC3C3oC,OAAO,SAAAm/B,GAAoB,QAAMA,EAAqB5Q,yBACzD,OAAOwa,GAAkB5T,EAAOvoB,SAAWq8B,EAAiCr8B,QA/EtDzN,KAmFxB+pC,+BAAiC,kBAC/BhqC,EAAKypC,qCACF3oC,OAAO,SAAAm/B,GAAoB,QAAMA,EAAqB5Q,yBACtD3hB,OAAS,GArFZzN,KAAKglC,WAAaA,0DAGR/U,GACVjwB,KAAKgqC,YAAY/Z,uCAGPA,GACVjwB,KAAKiwB,SAAWA,sCAIhB,OAAOjwB,KAAKkwB,oDAIZ,OAAOlwB,KAAKiwB,wDAGS5vB,GACrB,OAAOL,KAAKkwB,cAAc5vB,KAAK,SAAA+vB,GAAO,OAAIA,EAAQhwB,KAAOA,0CAG7C4pC,GACZ,IAAMtzB,EAAQ3W,KAAKiwB,SAAS/M,QAAQ+mB,GAChCtzB,GAAS,IACX3W,KAAK0pC,8BAA8BO,GACnCjqC,KAAKiwB,SAASpZ,OAAOF,EAAO,uCAIrB0Z,GACTrwB,KAAKiwB,SAAS/kB,KAAKmlB,yEAInBrwB,KAAKkqC,4BACL,IAAM7Z,EAAUiZ,EAAsBa,oBACtCnqC,KAAKoqC,WAAW/Z,GAChBrwB,KAAKupC,6BAA6BlZ,8CAkBlC,OAAOrwB,KAAKglC,WAAW6E,iBAAiBhpC,OAAO,SAAAkM,GAAK,OAAIA,aAAiB8yB,yDAG/C,IAAAh0B,EAAA7L,KAC1BA,KAAKiwB,SAASvkB,QAAQ,SAAA2kB,GACpBxkB,EAAK69B,8BAA8BrZ,GACnCxkB,EAAKw+B,cAAcha,cArEJiZ,GAgDZa,kBAAoB,iBAAO,CAChC9pC,GAAI,2BACJsH,KAAM,UACNwe,MAAO,UACPmkB,qBAAsB,0FA4CnB,IAAMC,GAAyB,SAAA9oC,GAAA,IAAEkG,EAAFlG,EAAEkG,KAAM2iC,EAAR7oC,EAAQ6oC,qBAAR,OACpC3iC,GAAQA,EAAK8F,QAAU,GAAK68B,GACzBA,EAAqB78B,QAAU,GC3Ff+8B,8MAEnBC,oBAAsBrS,IAAMC,cAC5BqS,eAAiBtS,IAAMC,cAEvBrqB,MAAQ,CACNC,MAAM,KAGR08B,YAAc,WACZ5qC,EAAKoO,SAAS,CAACF,MAAM,IACrBlO,EAAK6qC,yDAOPC,iDAAmD,SAACv1B,GAClD,IAAMo1B,EAAiB3qC,EAAK2qC,eAAe3U,QACpBzgB,EAAEw1B,eAAe5nB,QAAQwnB,IAAmB,GAEjE3qC,EAAKgrC,iBAITC,UAAY,SAAC3a,GACXtwB,EAAKgrC,cACLhrC,EAAK8O,MAAMo8B,MAAM5a,MAGnB0a,YAAc,WACZhrC,EAAKoO,SAAS,CAACF,MAAM,IACrBlO,EAAKmrC,8KAlBLC,SAASvmC,KAAK8mB,iBAAiB,QAAS1rB,KAAK6qC,kIAsB7CM,SAASvmC,KAAKwmC,oBAAoB,QAASprC,KAAK6qC,mFAIhD,OACEp8B,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,YACVgL,QAAS9M,KAAK2qC,YACdvY,IAAKpyB,KAAKyqC,qBAFlB,wBAGAh8B,EAAA7M,EAAAC,cAACwpC,GAAA,EAAD,CACEhrC,GAAG,4CACH4N,KAAMjO,KAAKgO,MAAMC,KACjBq9B,UAAU,OACV/1B,OAAQvV,KAAKyqC,oBAAoB1U,QACjCc,UAAWsU,SAASI,eAAe,oBAEnC98B,EAAA7M,EAAAC,cAAC2pC,GAAA,EAAD,CAASxnB,MAAM,0BACN3jB,GAAG,kCACHirC,UAAU,QACjB78B,EAAA7M,EAAAC,cAAA,OAAKuwB,IAAKpyB,KAAK0qC,gBACbj8B,EAAA7M,EAAAC,cAAC4pC,GAAD,CAA8BT,UAAWhrC,KAAKgrC,uBAzDTj8B,aAqE7C28B,8MAEJ19B,MAAQ,CACNrG,KAAM,GACNwe,MAAO,KACPmkB,qBAAsBjB,MAGxBsC,aAAe,SAACr2B,GAAD,OAAOzJ,EAAKsC,SAAS,CAACxG,KAAM2N,EAAEC,OAAO/G,WAEpDo9B,cAAgB,SAACzlB,GAAD,OAAWta,EAAKsC,SAAS,CAACgY,aAE1C0lB,4BAA8B,kBAAA5rC,OAAA0c,EAAA,EAAA1c,CAAA,GAAW4L,EAAKmC,UAE9Ci9B,MAAQ,WACNp/B,EAAKgD,MAAMm8B,UAAX/qC,OAAA0c,EAAA,EAAA1c,CAAA,CACEI,GAAI+0B,QACDvpB,EAAKggC,gCAEVhgC,EAAKsC,SAAS,CAACxG,KAAM,GAAIwe,MAAO,gFAIzB,IAAAzS,EACe1T,KAAKgO,MAApBrG,EADA+L,EACA/L,KAAMwe,EADNzS,EACMyS,MACb,OACE1X,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKiB,IAAN,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAG,MACNtF,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,OACL4S,KAAK,OACLE,YAAY,wBACZjM,MAAO7G,EACP0N,SAAUrV,KAAK2rC,iBAGjCl9B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAG,KACNtF,EAAA7M,EAAAC,cAACiqC,GAAD,CAAmB3lB,MAAOA,EAAO9Q,SAAUrV,KAAK4rC,iBAElDn9B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAG,KACNtF,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,YACV+K,UAAW09B,GAAuBvqC,KAAK6rC,+BACvC/+B,QAAS9M,KAAKirC,OAFtB,gBAxCiCl8B,sBCvE9Bg9B,GAAb,SAAA1+B,GAAA,SAAA0+B,IAAA,IAAAz+B,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA+rC,GAAA,QAAAv+B,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAA8rC,IAAAh+B,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAEEM,MAAQ,CACNC,MAAM,GAHVlO,EAMEmO,YAAc,kBAAMnO,EAAKoO,SAAS,CAACF,MAAM,KAN3ClO,EAQEqO,aAAe,kBAAMrO,EAAKoO,SAAS,CAACF,MAAM,KAR5ClO,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAA8rC,EAAA1+B,GAAApN,OAAAqO,EAAA,EAAArO,CAAA8rC,EAAA,EAAAx9B,IAAA,SAAAC,MAAA,WAWI,OACEC,EAAA7M,EAAAC,cAAA,YACE4M,EAAA7M,EAAAC,cAACmqC,GAAD,CAA0B/9B,KAAMjO,KAAKgO,MAAMC,KACjBqI,QAAStW,KAAKoO,aACdiiB,QAASrwB,KAAK6O,MAAMwhB,QACpBkU,cAAevkC,KAAK6O,MAAM01B,gBAEpD91B,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,cAAcgL,QAASgC,aAAe9O,KAAKkO,cACtDO,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,sBAnBvBiqC,EAAA,CAAuDh9B,aA2BjDk9B,8MAEJj+B,MAAQ,CACNrG,KAAM,KACNwe,MAAO,KACPmkB,qBAAsB,QAOxB4B,iBAAmB,kBAAMrgC,EAAKsC,SAALlO,OAAA0c,EAAA,EAAA1c,CAAA,GAAkB4L,EAAKgD,MAAMwhB,aAEtD5S,OAAS,WACP5R,EAAKsgC,qBACLtgC,EAAKgD,MAAMyH,aAGb61B,mBAAqB,WAAM,IAAAC,EACmBvgC,EAAKmC,MAA1CrG,EADkBykC,EAClBzkC,KAAMwe,EADYimB,EACZjmB,MAAOmkB,EADK8B,EACL9B,qBACdja,EAAUxkB,EAAKgD,MAAMwhB,QAC3BA,EAAQ1oB,KAAOA,EACf0oB,EAAQlK,MAAQA,EAChBkK,EAAQia,qBAAuBA,EAC/Bz+B,EAAKgD,MAAM01B,mBAGb31B,SAAW,WACT/C,EAAKqgC,mBACLrgC,EAAKgD,MAAMyH,aAGbq1B,aAAe,SAACr2B,GAAD,OAAOzJ,EAAKsC,SAAS,CAACxG,KAAM2N,EAAEC,OAAO/G,WAEpD69B,cAAgB,SAAClmB,GAAD,OAAWta,EAAKsC,SAAS,CAACgY,aAE1CmmB,6BAA+B,SAAChC,GAC9Bz+B,EAAKsC,SAAS,CAACm8B,4BAGjBuB,4BAA8B,kBAAA5rC,OAAA0c,EAAA,EAAA1c,CAAA,GAAW4L,EAAKmC,2FAhC5ChO,KAAKksC,oDAkCE,IAAAx4B,EACqC1T,KAAKgO,MAA1CrG,EADA+L,EACA/L,KAAMwe,EADNzS,EACMyS,MAAOmkB,EADb52B,EACa42B,qBAEpB,OACE77B,EAAA7M,EAAAC,cAACiO,EAAA,EAAD,CAAO7B,KAAMjO,KAAK6O,MAAMZ,KAAMhB,KAAK,MACjCwB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMC,OAAP,gCAIAtB,EAAA7M,EAAAC,cAACiO,EAAA,EAAMG,KAAP,KACExB,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKiB,IAAN,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAG,KAAK4nB,GAAG,KACdltB,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAczN,KAAK,OACL4S,KAAK,OACLE,YAAY,wBACZjM,MAAO7G,EACP0N,SAAUrV,KAAK2rC,iBAGjCl9B,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKC,GAAG,KAAK4nB,GAAG,KACdltB,EAAA7M,EAAAC,cAACiqC,GAAD,CAAmB3lB,MAAOA,EAAO9Q,SAAUrV,KAAKqsC,kBAGpD59B,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,KACEpF,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,KACErF,EAAA7M,EAAAC,cAACynB,EAAA,EAAD,CAAQM,eAAgB5pB,KAAKssC,6BACrBziB,aAAcygB,EACdjgC,KAAM,CAACyf,SAAS,QAK9Brb,EAAA7M,EAAAC,cAACiO,EAAA,EAAMK,OAAP,KACE1B,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtJ,QAAQ,YAAYgG,QAAS9M,KAAK4O,UAA1C,UACAH,EAAA7M,EAAAC,cAACuO,EAAA,EAAD,CAAQtO,UAAU,UACVgL,QAAS9M,KAAKyd,OACd5Q,UAAW09B,GAAuBvqC,KAAK6rC,gCAF/C,iBA9E6B98B,aC5BlBw9B,8MAEnBhd,yBAA2B,kBAAMxvB,EAAK8O,MAAMm2B,WAAWxV,yBAEvDgd,qBAAuB,SAACnc,GACtBtwB,EAAKwvB,2BAA2B6a,WAAW/Z,GAC3CtwB,EAAK8O,MAAM01B,yFAIX,IAAM9d,EAAQzmB,KAAKuvB,2BACZ1iB,EAAY7M,KAAK6O,MAAjBhC,SACP,OACE4B,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cACnB2M,EAAA7M,EAAAC,cAAA,oCAGF4M,EAAA7M,EAAAC,cAAC4qC,GAAD,CAAuBhmB,MAAOA,EACP8d,cAAevkC,KAAK6O,MAAM01B,cAC1B13B,SAAUA,KAG9BA,GACD4B,EAAA7M,EAAAC,cAAC6qC,GAAD,CAAuBzB,MAAOjrC,KAAKwsC,+BAxBKz9B,aAgC5C49B,8MAEJpd,yBAA2B,kBAAM1jB,EAAKgD,MAAM4X,SAE5CyJ,YAAc,kBAAMrkB,EAAK0jB,2BAA2BW,iBAEpDN,WAAa,kBAAM/jB,EAAKgD,MAAMhC,YAW9B+/B,4BAA8B,kBAC5Bn+B,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAArB,wDAKF+qC,YAAc,kBACZp+B,EAAA7M,EAAAC,cAACqV,EAAA,EAAD,CAAOsL,SAAO,EAACC,UAAQ,EAACtL,OAAK,EAAClK,KAAK,KAAKnL,UAAU,2BAChD2M,EAAA7M,EAAAC,cAAA,aACA4M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,WACA4M,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,eAAd,SAIG+J,EAAK+jB,cACNnhB,EAAA7M,EAAAC,cAAA,aAIJ4M,EAAA7M,EAAAC,cAAA,aAGEgK,EAAKqkB,cAAcvvB,IAAI,SAAA0vB,GAAO,OAC5B5hB,EAAA7M,EAAAC,cAACirC,GAAD,CAA0Bv+B,IAAK8hB,EAAQhwB,GACbgwB,QAASA,EACTxjB,SAAUhB,EAAK+jB,aACfC,sBAAuBhkB,EAAK0jB,2BAC5BgV,cAAe14B,EAAKgD,MAAM01B,6FAnC1D,OADiBvkC,KAAKkwB,cACTziB,QAAU,EACdzN,KAAK4sC,8BAGP5sC,KAAK6sC,qBAdoB99B,aAqD9Bg+B,GAA2B,SAAAtrC,GAAA,IAAE4uB,EAAF5uB,EAAE4uB,QAASxjB,EAAXpL,EAAWoL,SAAUgjB,EAArBpuB,EAAqBouB,sBAAuB0U,EAA5C9iC,EAA4C8iC,cAA5C,OAC/B91B,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,uBACZ2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,YAAY6hB,MAAO,CAAC2M,gBAAiBD,EAAQlK,UAE9D1X,EAAA7M,EAAAC,cAAA,UAAKwuB,EAAQ1oB,OAGVkF,GACD4B,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,gBACZ2M,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,WAGb2M,EAAA7M,EAAAC,cAACmrC,GAAD,CAAmC3c,QAASA,EACTkU,cAAeA,IAGlD91B,EAAA7M,EAAAC,cAACorC,GAAD,CAA2Bpd,sBAAuBA,EACvBQ,QAASA,EACTkU,cAAeA,QAS9C2I,8MAGJC,gBAAkB,SAAC9c,GACH5c,EAAK8b,2BACb8a,cAAcha,GACpB5c,EAAK5E,MAAM01B,mBAGbhV,yBAA2B,kBAAM9b,EAAK5E,MAAMghB,+FAEnC,IAAApb,EAAAzU,KACAqwB,EAAWrwB,KAAK6O,MAAhBwhB,QACP,OACE5hB,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,qBAAqBgL,QAAS,kBAAM2H,EAAK04B,gBAAgB9c,KACpE5hB,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,6BAfmBiN,aCtHnBq+B,8MAEnBC,YAAcjV,IAAMC,cAMpBhjB,SAAW,WACT,IAAMwa,EAAwB9vB,EAAKwvB,2BAC/BxvB,EAAKutC,oBAAsBzd,EAAsBka,iCACnDla,EAAsB0d,8CAEtB1d,EAAsBqa,4BAExBnqC,EAAK8O,MAAM01B,mBAGbhV,yBAA2B,kBAAMxvB,EAAK8O,MAAMm2B,WAAWxV,0GAbrDxvB,KAAKwtC,oEAgBL,IAAM3d,EAAwB7vB,KAAKuvB,2BAEnC,OADAvvB,KAAKwtC,mCAEH/+B,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAArB,uKAIA2M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKqL,MAAN,CAAYmU,IAAKpyB,KAAKqtC,YACV9yB,KAAK,WACL4D,MAAM,gBACND,QAAS2R,EAAsBka,iCAC/B10B,SAAUrV,KAAKqV,SACfxI,SAAU7M,KAAK6O,MAAMhC,wEAOvC,IAAM4gC,EAAWztC,KAAKqtC,YAAYtX,QAC9B0X,IACFA,EAASC,cAAgB1tC,KAAKstC,6DAKhC,IAAMzd,EAAwB7vB,KAAKuvB,2BACnC,OAAOM,EAAsBka,mCAC1Bla,EAAsB8Z,sDAnDyB56B,aCevC4+B,GAZkB,SAAAlsC,GAAA,IAAEujC,EAAFvjC,EAAEujC,WAAYT,EAAd9iC,EAAc8iC,cAAe13B,EAA7BpL,EAA6BoL,SAA7B,OAC/B4B,EAAA7M,EAAAC,cAAC+xB,GAAD,CAAwB5P,MAAM,oBAC5BvV,EAAA7M,EAAAC,cAAC+rC,GAAD,CAA0B5I,WAAYA,EACZT,cAAeA,EACf13B,SAAUA,IAEpC4B,EAAA7M,EAAAC,cAACgsC,GAAD,CAAsB7I,WAAYA,EACZT,cAAeA,EACf13B,SAAUA,MCHrBihC,GAAA,SAAArsC,GAAqE,IAAnE+mC,EAAmE/mC,EAAnE+mC,iBAAkB3C,EAAiDpkC,EAAjDokC,OAAQtB,EAAyC9iC,EAAzC8iC,cAAeS,EAA0BvjC,EAA1BujC,WAAY/Y,EAAcxqB,EAAdwqB,SAC9DzjB,EAAWggC,EAAiBlgC,cAC5BuE,EAAWof,EACjB,OACExd,EAAA7M,EAAAC,cAACinC,GAAD,CACE9kB,MAAM,sBACN+kB,OACEt6B,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,WACA4M,EAAA7M,EAAAC,cAACksC,GAAD,CAA0BlI,OAAQA,EACRr9B,SAAUA,EACVqE,SAAUA,IAEpC4B,EAAA7M,EAAAC,cAACmsC,GAAD,CAA0BhJ,WAAYA,EACZT,cAAeA,EACf13B,SAAUA,IAEpC4B,EAAA7M,EAAAC,cAACosC,GAAD,CAAsBzF,iBAAkBA,EAClBvc,SAAUA,QCzB7BiiB,WAAb,SAAA7gC,GAEE,SAAA6gC,EAAYr/B,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAkuC,IACjBnuC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAiuC,GAAAngC,KAAA/N,KAAM6O,KAMRs/B,mBAAqB,SAACzwB,GAChBA,EAAUwJ,aAAennB,EAAK2xB,iBAChC3xB,EAAKoO,SAAS,CACZgQ,MAAOpe,EAAKw8B,cAVCx8B,EAenB2xB,cAAgB,kBAAM3xB,EAAK8O,MAAMqY,YAfdnnB,EAiBnBw8B,SAAW,kBAAMx8B,EAAK2xB,gBAAgB6K,YAjBnBx8B,EAmBnBquC,cAAgB,kBAAMruC,EAAK8O,MAAMm2B,YAnBdjlC,EAqBnBsV,SAAW,SAACsL,GAAD,OAAW5gB,EAAKoO,SAAS,CAClCgQ,MAAOwC,EAAMpL,OAAO/G,OACnB,WACGzO,EAAKsuC,mBACPtuC,EAAKuuC,kBAzBUvuC,EA6BnBsuC,gBAAkB,kBAAMtuC,EAAKquC,gBAAgBC,gBAAgBtuC,EAAK2xB,gBAAiB3xB,EAAKiO,MAAMmQ,QA7B3Epe,EA+BnBuuC,aAAe,WACCvuC,EAAK2xB,gBACb+K,SAAS18B,EAAKiO,MAAMmQ,QA/B1Bpe,EAAKiO,MAAQ,CACXmQ,MAAOpe,EAAKw8B,YAHGx8B,EAFrB,OAAAE,OAAAoO,EAAA,EAAApO,CAAAiuC,EAAA7gC,GAAApN,OAAAqO,EAAA,EAAArO,CAAAiuC,EAAA,EAAA3/B,IAAA,SAAAC,MAAA,WAuCI,OACEC,EAAA7M,EAAAC,cAAC+xB,GAAD,CAAwB5P,MAAM,SAC5BvV,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKC,MAAN,KACEpE,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKsV,KAAN,CAAWpmB,UAAU,cAArB,sBAGA2M,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAN,CAAcmF,KAAK,OACL/L,MAAOxO,KAAKgO,MAAMmQ,MAClB9I,SAAUrV,KAAKqV,SACfgF,WAAYra,KAAKquC,kBACjBxhC,SAAU7M,KAAK6O,MAAMhC,WACnC4B,EAAA7M,EAAAC,cAAC+Q,EAAA,EAAKwC,QAAQsF,SAAd,CAAuBH,KAAK,WAA5B,6FAlDV2zB,EAAA,CAAgCn/B,cCD1Bw/B,GAAS,GAAA9qC,OAAM8C,IAAN,UAEAioC,GAAA,SAEGC,EAAS9H,GACvB,SAAAljC,OAAU8qC,GAAV,KAAA9qC,OAAuBgrC,EAAvB,YAAAhrC,OAAyCkjC,ICHxB+H,oLACV,IACAxnB,EAAclnB,KAAK6O,MAAnBqY,WAKP,OAAOzY,EAAA7M,EAAAC,cAACylC,GAAD,CAAcnB,SAAUjf,EACVkf,oBAAqB,SAAC7lC,EAAKomC,GAAN,OAAiB6H,GAA6BjuC,EAAIk/B,aAAckH,IACrFiB,UAAU,cACVF,QAAS,kBAAM5+B,QAAQ1G,MAAM,wBAC7BulC,YAAY,EACZ1b,SAAUjsB,KAAK6O,MAAMod,kBAZCld,aCGhC4/B,GAAA,SAAAltC,GAAA,IAAEsL,EAAFtL,EAAEsL,MAAOi4B,EAATvjC,EAASujC,WAAYT,EAArB9iC,EAAqB8iC,cAAeiE,EAApC/mC,EAAoC+mC,iBAAkB37B,EAAtDpL,EAAsDoL,SAAUof,EAAhExqB,EAAgEwqB,SAAhE,OAEbxd,EAAA7M,EAAAC,cAACinC,GAAD,CACE9kB,MAAM,mBACN+kB,OACEt6B,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,8BACV8sC,QAAS,SAAAt5B,GAEPA,EAAEu5B,oBAEPpgC,EAAA7M,EAAAC,cAAA,WACA4M,EAAA7M,EAAAC,cAACitC,GAAD,CAAY5nB,WAAYna,EACZi4B,WAAYA,EACZn4B,SAAUA,IAEtB4B,EAAA7M,EAAAC,cAACgxB,GAAD,CAAkBC,kBAAmB/lB,EACnBgmB,uBAAwBwR,EACxB13B,SAAUA,EACVmmB,kBAAgB,IAElCvkB,EAAA7M,EAAAC,cAACktC,GAAD,CAAmB7nB,WAAYna,EACZy7B,iBAAkBA,EAClB37B,SAAUA,EACVof,SAAUA,QC5BhB+iB,8MAEnBC,iBAAmB,IAAI3F,GAAJrpC,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,OAenBqa,QAAU,kBAC4B,MADtBra,EAAK8pC,iBAClBvpC,KAAK,SAAAyM,GAAK,OAAKA,EAAMqN,eAExB+d,UAAY,kBAAMp4B,EAAKqjC,cAEvByG,eAAiB,kBAAM5pC,OAAOkZ,OAAOpZ,EAAKo4B,gBAE1CkW,gBAAkB,SAACnnB,EAAY/I,GAC7B,GAAIA,EAAM1Q,QAAU,EAClB,OAAO,EAET,IAAMyhC,EAAqBnvC,EAAKovC,sBAAsBhxB,GACtD,OAAO+wB,IAAuBhoB,GAAoC,MAAtBgoB,KAG9CC,sBAAwB,SAAChxB,GAAD,OAAWpe,EAAK8pC,iBAAiBvpC,KAAK,SAAAyM,GAAK,OAAIA,EAAMwvB,aAAepe,OAE5F0f,kBAAoB,0BAAAp6B,OAAe1D,EAAK8pC,iBAAiBp8B,WAEzD2hC,QAAU,SAACtvC,GAAD,OAAUC,EAAK8pC,iBAAiBn+B,QAAQ,SAAAqB,GAAK,OAAIA,EAAMqiC,QAAQtvC,iFAhC7D0E,EAAMk5B,GAChBz9B,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAA+uC,EAAAlV,WAAA,cAAA95B,MAAA+N,KAAA/N,KAAkBwE,EAAMk5B,GACxB19B,KAAKivC,iBAAiB9nB,YAAY3iB,EAAKyqC,kBAAoB,wCAK3D,OAAOhvC,OAAA0c,EAAA,EAAA1c,CAAA,GAAAA,OAAA0L,EAAA,EAAA1L,QAAA6N,EAAA,EAAA7N,CAAA+uC,EAAAlV,WAAA,YAAA95B,MAAA+N,KAAA/N,MAAA,CAELivC,iBAAkBjvC,KAAKivC,iBAAiBxV,4DA0B1C,OAAOz5B,KAAKivC,wBAvCgCI,qDCI3BC,8MAEnBthC,MAAQ,CACNuhC,YAAa,QAGfz5B,kBAAoB,kBAAM/V,EAAKyvC,sBAE/BA,sCAAmB,SAAAxtC,IAAA,IAAAuF,EAAAG,EAAAlD,EAAA,OAAAiL,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACV8E,EAAaxH,EAAK8O,MAAMrG,SAAxBjB,UADUhF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMwV,KAAgBxB,WAAWlP,GAHjC,OAAAG,EAAAnF,EAAAK,KAGR4B,EAHQkD,EAGRlD,KACPzE,EAAKoO,SAAS,CACZohC,YAAa/qC,EAAKmD,OALLpF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,kCAAAA,EAAAW,SAAAlB,EAAA,yFAYV,IAAAytC,EACmBzvC,KAAK6O,MAAMrG,SAA9Bb,EADA8nC,EACA9nC,KAAMJ,EADNkoC,EACMloC,UACb,OACEkH,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,uBACb2M,EAAA7M,EAAAC,cAAC6W,GAAA,EAAD,KACEjK,EAAA7M,EAAAC,cAAC8W,GAAA,EAAD,CAAgBjX,GAAI6V,MAApB,YACA9I,EAAA7M,EAAAC,cAAC8W,GAAA,EAAD,CAAgBjX,GAAE,GAAA+B,OAAK8T,KAAL,KAAA9T,OAAsB8D,IAEpCvH,KAAKgO,MAAMuhC,aACX9gC,EAAA7M,EAAAC,cAAC28B,GAAA,EAAD,CAAS33B,UAAU,OAAOoG,KAAK,QAGnCwB,EAAA7M,EAAAC,cAAC8W,GAAA,EAAD,CAAgBjX,GAAE,GAAA+B,OAAK8T,KAAL,KAAA9T,OAAsB8D,IAAxC,aACAkH,EAAA7M,EAAAC,cAAC8W,GAAA,EAAD,KAAmBhR,YAjCmBoH,iCCCnC2gC,WAAkB,SAAAjuC,GAAkF,IAAhF+mC,EAAgF/mC,EAAhF+mC,iBAAkBxD,EAA8DvjC,EAA9DujC,WAAY7nB,EAAkD1b,EAAlD0b,SAAUwyB,EAAwCluC,EAAxCkuC,cAAevyB,EAAyB3b,EAAzB2b,UAAWvQ,EAAcpL,EAAdoL,SAC3FuN,EAAU4qB,EAAW5qB,UACrB5R,EAAWggC,EAAiBlgC,cAClC,OACEmG,EAAA7M,EAAAC,cAAC+tC,GAAA,EAAD,CAAQ9tC,UAAU,mEAChB2M,EAAA7M,EAAAC,cAACgZ,GAAA,EAAD,CAAYlZ,KAAK,oBAAoBD,GAAE,GAAA+B,OAAK8T,KAAL,KAAA9T,OAAsB+E,EAASjB,aAEtEkH,EAAA7M,EAAAC,cAAA,YAEKuY,GACD3L,EAAA7M,EAAAC,cAAA,QAAMC,UAAU,WACd2M,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,gCADf,kCAMA+K,GACA4B,EAAA7M,EAAAC,cAAA,+DAMCgL,GAAYuQ,GACb3O,EAAA7M,EAAAC,cAAA,QAAMC,UAAU,WACd2M,EAAA7M,EAAAC,cAAA,KAAGC,UAAU,gCADf,qCAMJ2M,EAAA7M,EAAAC,cAAC8K,GAAA,EAAD,CAAeE,UAAWuN,GAAW+C,GAAYtQ,EAClCD,UAAWuQ,EAAUrQ,QAAS6iC,GAD7C,WCzBeE,eAQnB,SAAAA,EAAYhhC,GAAO,IAAA9O,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA6vC,IACjB9vC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAA4vC,GAAA9hC,KAAA/N,KAAM6O,KAPRm2B,WAAa,IAAIgK,GAMEjvC,EAJnBiO,MAAQ,CACN8hC,cAAe,MAGE/vC,EAYnBgwC,aAAe,SAACvH,GACdzoC,EAAKilC,WAAWgL,UAAUjwC,EAAKkwC,kBAC/BlwC,EAAKilC,WAAWoK,QAAQ5G,EAAiBE,WACzC3oC,EAAKuoB,kBAfYvoB,EAkBnBuoB,eAAiB,WACfxf,QAAQC,IAAI,qCACZhJ,EAAKmwC,mBACLnwC,EAAK83B,eArBY93B,EA4BnB+kC,gBAAkB,SAACgL,GAAD,OAAmB/vC,EAAKoO,SAAS,CAAC2hC,mBA5BjC/vC,EA8BnB4vC,cAAgB,WACd5vC,EAAKuoB,iBACLvoB,EAAK8O,MAAM4O,UAhCM1d,EAmCnBmwC,iBAAmB,SAAC1nC,GACbA,IACHA,EAAWzI,EAAKuI,eAElBE,EAASX,MAAQ9H,EAAKilC,WAAWmL,mBACjCpwC,EAAK8O,MAAMqhC,iBAAiB1nC,IAxCXzI,EA2CnBuI,YAAc,kBAAMvI,EAAK8O,MAAM25B,iBAAiBlgC,eA3C7BvI,EA6CnBqwC,WAAa,kBAAMrwC,EAAK8O,MAAMod,UA7CXlsB,EA+CnBkwC,eAAiB,kBAAMlwC,EAAKqwC,eAAiBrwC,EAAK8O,MAAM25B,iBAAiBrL,eA/CtD,IAEVqL,EAAoBzoC,EAAK8O,MAAzB25B,iBAFU,OAGjBzoC,EAAKilC,WAAW/6B,WAAau+B,EAAiBlgC,cAAcjI,GAH3CN,mFAMC,IACXyoC,EAAoBxoC,KAAK6O,MAAzB25B,iBACPxoC,KAAK+vC,aAAavH,GAClBA,EAAiBC,gBAAgBzoC,KAAK+vC,6DAgBtC/vC,KAAK6O,MAAM25B,iBAAiBG,mBAAmB3oC,KAAK+vC,+CAwB7C,IAAAp8B,EAC0C3T,KAAK6O,MAA/C25B,EADA70B,EACA60B,iBAAkBtG,EADlBvuB,EACkBuuB,qBACnB15B,EAAWggC,EAAiBlgC,cAC5B28B,EAAez8B,EAASX,MAE9B,OACE4G,EAAA7M,EAAAC,cAAC4W,EAAA,EAAD,CAAW3W,UAAU,uCAAuCzB,GAAG,mBAC7DoO,EAAA7M,EAAAC,cAACgS,EAAA,EAAD,CAAK/R,UAAU,gBAIV9B,KAAKiwC,kBACNxhC,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,wCACb2M,EAAA7M,EAAAC,cAACwuC,GAAD,CAA+BnO,qBAAsBA,KAMzDzzB,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,wCACb2M,EAAA7M,EAAAC,cAACyuC,GAAD,CACErL,aAAcA,EACdD,WAAYhlC,KAAKglC,WACjB9C,qBAAsBA,EACtB4C,gBAAiB9kC,KAAK8kC,gBACtBP,cAAevkC,KAAKsoB,iBAEtB7Z,EAAA7M,EAAAC,cAAC0uC,GAAD,CAAoB/nC,SAAUA,KAG3BxI,KAAKowC,cACN3hC,EAAA7M,EAAAC,cAAC2uC,GAAD,CAAiBhI,iBAAkBA,EAClBxD,WAAYhlC,KAAKglC,WACjB2K,cAAe3vC,KAAK2vC,cACpBxyB,SAAUnd,KAAK6O,MAAMsO,SACrBC,UAAWpd,KAAK6O,MAAMuO,UACtBvQ,SAAU7M,KAAKiwC,oBAKpCxhC,EAAA7M,EAAAC,cAACiS,EAAA,EAAD,CAAKhS,UAAU,yCAEX9B,KAAKgO,MAAM8hC,cACTrhC,EAAA7M,EAAAC,cAAC8sC,GAAD,CAA0B5hC,MAAO/M,KAAKgO,MAAM8hC,cAClB9K,WAAYhlC,KAAKglC,WACjBT,cAAevkC,KAAKsoB,eACpBkgB,iBAAkBA,EAClBvc,SAAUjsB,KAAKowC,aACfvjC,SAAU7M,KAAKiwC,mBAEzCxhC,EAAA7M,EAAAC,cAACisC,GAAD,CAAiBtF,iBAAkBA,EAClB3C,OAAQ7lC,KAAKkwC,iBACblL,WAAYhlC,KAAKglC,WACjBT,cAAevkC,KAAKsoB,eACpB2D,SAAUjsB,KAAKowC,aACfvjC,SAAU7M,KAAKiwC,6BAjHJlhC,+BCLvB0hC,8MAInBziC,MAAQ,CACNk0B,qBAAsB,KACtBwO,8BAA8B,EAC9BC,sBAAsB,KAGxB76B,kBAAoB,kBAAM/V,EAAK6wC,qBAE/Bt4B,qBAAuB,kBAAMvY,EAAK8wC,kBAAkBzqC,gNAGlDpG,KAAKmO,SAAS,CAACuiC,8BAA8B,aAE3C1wC,KAAK6wC,kBAAoBnrC,YAAgBorC,EAA4BxqB,oCAClCtmB,KAAK6wC,kBAAkBhrC,cAApDq8B,SACNliC,KAAKmO,SAAS,CACZ+zB,uBACAwO,8BAA8B,EAC9BC,sBAAsB,oDAGxB3wC,KAAKmO,SAAS,CACZuiC,8BAA8B,EAC9BC,sBAAsB,gJAO1B,OACEliC,EAAA7M,EAAAC,cAAC6E,GAAA,EAAD,CAAkBC,QAAS3G,KAAKgO,MAAM0iC,+BAAiC1wC,KAAK6O,MAAM25B,kBAChF/5B,EAAA7M,EAAAC,cAACkvC,GAAD9wC,OAAA0O,OAAA,GAAqB3O,KAAK6O,MAA1B,CAAiCqzB,qBAAsBliC,KAAKgO,MAAMk0B,gCApCrBnzB,uBCRhCiiC,GAMnB,SAAAA,EAAYxoC,EAAU1I,GAAM,IAAAC,EAAAC,KAAAC,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAgxC,GAAAhxC,KAF5BixC,cAAgB,GAEYjxC,KAK5BsI,YAAc,kBAAMvI,EAAKyI,UALGxI,KAO5BkxC,YAAc,SAAC1oC,GAAD,OAAczI,EAAKyI,SAAWA,GAPhBxI,KAS5B0oC,QAAU,kBAAM3oC,EAAKD,MATOE,KAW5BovC,QAAU,SAACtvC,GACTC,EAAKD,KAAOA,EACZC,EAAKoxC,uBAbqBnxC,KAgB5BmxC,oBAAsB,kBAAMpxC,EAAKkxC,cAAcvlC,QAAQ,SAAAT,GAAQ,OAAIA,EAASlL,MAhBhDC,KAkB5ByoC,gBAAkB,SAACx9B,GAAD,OAAclL,EAAKkxC,cAAc/lC,KAAKD,IAlB5BjL,KAoB5B2oC,mBAAqB,SAAC19B,GACpB,IAAM0L,EAAQ5W,EAAKkxC,cAAc/tB,QAAQjY,GACzC,GAAI0L,EAAQ,EACV,MAAM,IAAI7T,MAAM,kDAElB/C,EAAKkxC,cAAcp6B,OAAOF,EAAO,IAzBP3W,KA+B5B48B,WAAa,mBAAQ78B,EAAK2oC,UAAUvoC,gBA/BRH,KAkC5BkB,UAAY,kBAAMnB,EAAK68B,cAAgB78B,EAAK2oC,UAAUvoC,eAAee,aAlCzClB,KAoC5B68B,SAAW,kBAAM98B,EAAK68B,cAAgB78B,EAAK2oC,UAAUvoC,eAAe08B,YApCxC78B,KAsC5BgB,WAAa,kBAAMjB,EAAK68B,cAAgB78B,EAAK2oC,UAAUvoC,eAAea,cAtC1ChB,KA2C5B88B,uBAAyB,kBAAM/8B,EAAKuI,cAAcT,MAAMupC,MAAM3jC,QA3ClCzN,KAiD5Bg9B,sBAAwB,kBAAMj9B,EAAK68B,aAAe78B,EAAK2oC,UAAUvoC,eAAekxC,sBAAsB5jC,OAAS,GAjDnFzN,KAuD5Bi9B,uBAAyB,kBAAMl9B,EAAK68B,aAAe78B,EAAK2oC,UAAUvoC,eAAemxC,uBAAuB7jC,OAAS,GAvDrFzN,KAyD5Bk9B,SAAW,kBAAOn9B,EAAKmB,aAzDKlB,KA2D5Bm9B,YAAc,kBAAOp9B,EAAKmB,aA3DElB,KAgE5BG,aAAe,kBAAMJ,EAAK2oC,UAAUvoC,gBAhERH,KAiE5Be,gBAAgB,kBAAIhB,EAAK2oC,UAAU3nC,mBAhEjCf,KAAKwI,SAAWA,EAChBxI,KAAKF,KAAOA,GCFDyxC,GAAA,CAEbC,aAAc,KAERC,oBAJO,eAAAC,EAAAzxC,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,EAIaiI,GAJb,IAAAxI,EAAAiG,EAAAc,EAAA1I,EAAA,OAAA2P,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAKoBqD,QAAQ6rC,IAAI,CACzCj1B,IAAiBpU,YAAY2B,GAC7B2+B,KAAYgJ,kBAAkB3nC,KAPrB,cAAAxI,EAAAc,EAAAK,KAAA8E,EAAAzH,OAAA4xC,GAAA,EAAA5xC,CAAAwB,EAAA,GAKJ+G,EALId,EAAA,GAKM5H,EALN4H,EAAA,GAAAnF,EAAAU,OAAA,SASJ,IAAI+tC,GAAiBxoC,EAAU1I,IAT3B,wBAAAyC,EAAAW,SAAAlB,MAAA,gBAAAqG,GAAA,OAAAqpC,EAAA3tC,MAAA/D,KAAAgE,YAAA,GAab8tC,wBAba,SAaWtJ,GAAwD,IAAtCgJ,EAAsCxtC,UAAAyJ,OAAA,QAAA+Z,IAAAxjB,UAAA,GAAAA,UAAA,GAfpD,IAgB1B,GAAyB,MAArBhE,KAAKwxC,aACP,MAAM,IAAI1uC,MAAM,yCAElB,IAAMmH,EAAau+B,EAAiBlgC,cAAcjI,GAClDL,KAAKwxC,aAAe7mC,YAAW1K,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAC,SAAAjE,IAAA,IAAAnE,EAAA,OAAA2P,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACXmmC,KAAYgJ,kBAAkB3nC,GADnB,OACxBnK,EADwBoE,EAAAtB,KAE9B4lC,EAAiB4G,QAAQtvC,GAFK,wBAAAoE,EAAAhB,SAAAe,MAG7ButC,IAILO,oBAzBa,WA0BXjnC,cAAc9K,KAAKwxC,cACnBxxC,KAAKwxC,aAAe,gBC1BHQ,8MAInBhkC,MAAQ,CACNw6B,iBAAkB,QAGpB1yB,uCAAoB,SAAA9T,IAAA,IAAAwmC,EAAA,OAAA/4B,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEe1C,EAAKkyC,wBAFpB,OAEVzJ,EAFUjmC,EAAAK,KAGhB2uC,GAAwBO,wBAAwBtJ,GAHhCjmC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAKhBgZ,aAAuBtb,OAAAmkB,EAAA,EAAAnkB,QAAAmkB,EAAA,EAAAnkB,CAAAF,KALP,yBAAAwC,EAAAW,SAAAlB,EAAA,mBAyBpBkwC,qBAAuB,kBAAMnyC,EAAKoyC,gCAAgCpyC,EAAK8O,UAEvEsjC,gCAAkC,SAACtjC,GAAD,OAAWA,EAAM2U,MAAMC,OAAOpjB,MAEhEiY,qBAAuB,WACrBvY,EAAKqyC,wBAAwBhsC,SAC7BmrC,GAAwBQ,yBAG1B7B,iBAAmB,SAAC1nC,GAClBzI,EAAKmxC,YAAY1oC,GACjBzI,EAAK83B,iBAGPqZ,YAAc,SAAC1oC,GAAD,OAAczI,EAAKiO,MAAMw6B,iBAAiB0I,YAAY1oC,MAEpEF,YAAc,kBAAMvI,EAAKiO,MAAMw6B,iBAAiBlgC,iGAhC7BoV,EAAWC,EAAWC,GACnC5d,KAAKkyC,yBAA2BlyC,KAAKmyC,gCAAgCz0B,KACvE1d,KAAKsY,uBACLtY,KAAK8V,4LAKDzV,EAAKL,KAAKkyC,uBAChBlyC,KAAKmO,SAAS,CAACq6B,iBAAkB,OACjCxoC,KAAKoyC,wBAA0B1sC,YAAgB6rC,GAAwBE,oBAAoBpxC,aAC5DL,KAAKoyC,wBAAwBvsC,qBAAtD2iC,SACNxoC,KAAKmO,SAAS,CAACq6B,uCACRA,sIAqBA,IACAA,EAAoBxoC,KAAKgO,MAAzBw6B,iBACP,OAAO/5B,EAAA7M,EAAAC,cAACwwC,GAAD,CACL7J,iBAAkBA,EAClB0H,iBAAkBlwC,KAAKkwC,iBACvBjkB,UAAQ,WAxDyCld,aCElCujC,eAEnB,SAAAA,EAAYzjC,GAAO,IAAA9O,EAAA,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAsyC,IACjBvyC,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAqyC,GAAAvkC,KAAA/N,KAAM6O,KAKR4O,OANmBxd,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAMV,SAAAlG,IAAA,IAAAwG,EAAA,OAAAiH,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP1C,EAAKoO,SAAS,CAACgP,UAAU,IADlB5a,EAAAC,KAAA,EAGCgG,EAAWzI,EAAKuI,cAHjB/F,EAAAE,KAAA,EAICia,IAAiB9T,eAAeJ,GAJjC,OAAAjG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0G,GAAA1G,EAAA,SAMLxC,EAAKoO,SAAS,CAACiP,WAAW,IANrB,QAQPrd,EAAKoO,SAAS,CAACgP,UAAU,IARlB,yBAAA5a,EAAAW,SAAAlB,EAAA,iBAJPjC,EAAKiO,MAAMmP,UAAW,EACtBpd,EAAKiO,MAAMoP,WAAY,EAHNrd,wEAiBV,IAAA2T,EACyC1T,KAAKgO,MAA9Cw6B,EADA90B,EACA80B,iBAAkBrrB,EADlBzJ,EACkByJ,SAAUC,EAD5B1J,EAC4B0J,UACnC,OAAO3O,EAAA7M,EAAAC,cAACwwC,GAAD,CACL7J,iBAAkBA,EAClB0H,iBAAkBlwC,KAAKkwC,iBACvBzyB,OAAQzd,KAAKyd,OACbN,SAAUA,EACVC,UAAWA,WA1BsC40B,ICTvD5wC,EAAAiF,EAAA7E,EAAA,sBAAAsd,KAAA1d,EAAAiF,EAAA7E,EAAA,sBAAA8c,KAAAld,EAAAiF,EAAA7E,EAAA,sBAAA+wC,KAAAnxC,EAAAiF,EAAA7E,EAAA,sBAAAgxC,KAMO,IAAM1zB,GAAiB,aACjBR,GAAwB,oBAGxBm0B,GAAY,kBACvBhkC,EAAA7M,EAAAC,cAACijB,EAAA,EAAD,KACErW,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAKqb,GAAL,QAA2BmG,OAAK,EAACC,UAAWotB,OAI9CI,GAAkB,kBAC7BjkC,EAAA7M,EAAAC,cAACijB,EAAA,EAAD,KACErW,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAI,GAAAvhB,OAAK6a,GAAL,QAAkC2G,OAAK,EAACC,UAAW8sB,gQCV7CW,6MAEnB3kC,MAAQ,CACNlO,KAAM,QAGRgW,kBAAoB,kBAAM/V,EAAK6yC,+NAIRhK,IAAYF,iBAAzB5oC,SACNE,KAAKmO,SAAS,CAACrO,mMAOjB,OACE2O,EAAA7M,EAAAC,cAAA,OAAKxB,GAAG,UAAUyB,UAAW9B,KAAK6O,MAAMgkC,YAAc,OAAS,IAC7DpkC,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,aAAd,WAEA2M,EAAA7M,EAAAC,cAAA,MAAIC,UAAU,gBACZ2M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAACixC,EAAA,EAAD,CAASpxC,GAAG,aAAZ,aAKF+M,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAACkxC,EAAD,CAAwBjzC,KAAME,KAAKgO,MAAMlO,QAG3C2O,EAAA7M,EAAAC,cAAA,UACE4M,EAAA7M,EAAAC,cAACmxC,EAAD,CAAiBlzC,KAAME,KAAKgO,MAAMlO,iBAlCTiP,aA2C/BkkC,EAAyB,SAAAxxC,GAAY,IAAV3B,EAAU2B,EAAV3B,KAC/B,OAAKA,EAIH2O,EAAA7M,EAAAC,cAAA,kCAEE4M,EAAA7M,EAAAC,cAACqxC,EAAD,CAAUpzC,KAAMA,EAAKiB,kBAAkB0tB,MAAM,EApD1B,MA+CdhgB,EAAA7M,EAAAC,cAAA,+CAWLsxC,EAAkB,SAAAzrC,GAAY,IAAV5H,EAAU4H,EAAV5H,KACxB,OAAKA,EAIH2O,EAAA7M,EAAAC,cAAA,0BAEE4M,EAAA7M,EAAAC,cAACqxC,EAAD,CAAUpzC,KAAMA,EAAKmB,iBAAiBwtB,MAAM,EAjEzB,MA4DdhgB,EAAA7M,EAAAC,cAAA,uCAWLuxC,EAAW,SAAAv7B,GAAA,IAAE/X,EAAF+X,EAAE/X,KAAF,OACf2O,EAAA7M,EAAAC,cAAA,UAEI/B,EAAKa,IAAI,SAAAJ,GAAG,OACVkO,EAAA7M,EAAAC,cAAA,MAAI0M,IAAKhO,EAAIF,IACXoO,EAAA7M,EAAAC,cAACixC,EAAA,EAAD,CAASpxC,GAAE,GAAA+B,OAAKqb,IAAL,KAAArb,OAAuBlD,EAAI+c,kBAAtC,IACI/c,EAAIF,+EC/EZgzC,EAAmB,GAAA5vC,OAAM8C,IAAN,oBAGZ+sC,EAAiB,SAAAtwC,GAAI,OAAIA,GAEvBuwC,EAAA,CAEbC,eAAgB,KAEVC,YAJO,eAAAC,EAAAzzC,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,IAAA,IAAAgB,EAAA2wC,EAAA,OAAAlkC,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAKPzC,KAAK4zC,oBALE,CAAArxC,EAAAE,KAAA,eAAAF,EAAAU,OAAA,SAMFjD,KAAK6zC,qBANH,cAAAtxC,EAAAE,KAAA,EAQQkB,YAAQ0vC,GARhB,cAQLrwC,EARKT,EAAAK,KASL+wC,EAAWL,EAAetwC,GAChChD,KAAK8zC,eAAeH,GAVTpxC,EAAAU,OAAA,SAWJ0wC,GAXI,wBAAApxC,EAAAW,SAAAlB,EAAAhC,SAAA,yBAAA0zC,EAAA3vC,MAAA/D,KAAAgE,YAAA,GAcb4vC,kBAda,WAeX,QAAS5zC,KAAK6zC,qBAGhBA,kBAlBa,WAmBX,OAAO7zC,KAAKwzC,gBAGdM,eAtBa,SAsBEH,GACb3zC,KAAKwzC,eAAiBG,6CCrBLI,mLAEjB,OACEtlC,EAAA7M,EAAAC,cAACmyC,EAAA,EAAD,CACE1I,UAAU,SACV2I,QAAQ,QACRC,QACEzlC,EAAA7M,EAAAC,cAAC2pC,EAAA,EAAD,CAASnrC,GAAG,8BACH2jB,MAAM,uBACbvV,EAAA7M,EAAAC,cAACsyC,EAAD,QAIJ1lC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACuyC,EAAD,eAdsCrlC,aAqB1CslC,mLAEF,IAAMC,EAAWnxC,IAAY8I,cAC7B,OACEwC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,YAAOyyC,EAAS/sB,WAChB9Y,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,cAAcoS,IAAKogC,EAASC,cAAevgC,IAAI,wBAN9BjF,aAa3BylC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAv0C,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAw0C,GAAAv0C,OAAA4N,EAAA,EAAA5N,CAAAD,KAAAC,OAAA6N,EAAA,EAAA7N,CAAAu0C,GAAAzwC,MAAA/D,KAAAgE,YAAA,OAAA/D,OAAAoO,EAAA,EAAApO,CAAAu0C,EAAAC,GAAAx0C,OAAAqO,EAAA,EAAArO,CAAAu0C,EAAA,EAAAjmC,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAC6yC,EAAD,MAEAjmC,EAAA7M,EAAAC,cAAA,WAEA4M,EAAA7M,EAAAC,cAAC8yC,EAAD,WARRH,EAAA,CAAsDzlC,aAezC6lC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAtnC,EAAAvN,EAAAE,OAAAsN,EAAA,EAAAtN,CAAAD,KAAA40C,GAAA,QAAApnC,EAAAxJ,UAAAyJ,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5J,UAAA4J,GAAA,OAAA7N,EAAAE,OAAA4N,EAAA,EAAA5N,CAAAD,MAAAsN,EAAArN,OAAA6N,EAAA,EAAA7N,CAAA20C,IAAA7mC,KAAAhK,MAAAuJ,EAAA,CAAAtN,MAAAyD,OAAAiK,MAIEM,MAAQ,CACN2lC,SAAU,KACVx+B,YAAY,GANhBpV,EASE+V,kBATF7V,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KASsB,SAAAlG,IAAA,OAAAyN,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkB1C,EAAK+0C,gBAAvB,cAAAvyC,EAAAU,OAAA,SAAAV,EAAAK,MAAA,wBAAAL,EAAAW,SAAAlB,MATtBjC,EAWEuY,qBAAuB,kBAAMvY,EAAKg1C,uBAAuB3uC,UAX3DrG,EAaE+0C,cAbF70C,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAakB,SAAAjE,IAAA,IAAA0vC,EAAA,OAAAlkC,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACd1C,EAAKoO,SAAS,CAACwlC,SAAU,KAAMx+B,YAAY,IAD7BjR,EAAA1B,KAAA,EAGZzC,EAAKg1C,uBAAyBrvC,YAAgB6tC,EAAsBE,eAHxDvvC,EAAAzB,KAAA,EAIW1C,EAAKg1C,uBAAuBlvC,OAJvC,OAIN8tC,EAJMzvC,EAAAtB,KAKZ7C,EAAKoO,SAAS,CAACwlC,WAAUx+B,YAAY,IALzBjR,EAAAzB,KAAA,gBAAAyB,EAAA1B,KAAA,EAAA0B,EAAA+E,GAAA/E,EAAA,SAOZnE,EAAKoO,SAAS,CAACwlC,SAAU,KAAMx+B,YAAY,IAP/B,yBAAAjR,EAAAhB,SAAAe,EAAA,iBAblBlE,EA8CEi1C,eAAiB,WAAM,IAAAC,EACqBl1C,EAAKiO,MAAM2lC,SAA9CuB,EADcD,EACdC,cAAeC,EADDF,EACCE,aAAcC,EADfH,EACeG,GACpC,OACE3mC,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAAA,gCADF,KACoC+yC,EAAiBS,cAAcH,GADnE,IACmFzmC,EAAA7M,EAAAC,cAAA,WACjF4M,EAAA7M,EAAAC,cAAA,wBAFF,KAE4B+yC,EAAiBS,cAAcF,GAF3D,IAE0E1mC,EAAA7M,EAAAC,cAAA,WACxE4M,EAAA7M,EAAAC,cAAA,wBAHF,KAG4B+yC,EAAiBS,cAAcD,GAH3D,IAGgE3mC,EAAA7M,EAAAC,cAAA,aApDtE9B,EAAA,OAAAE,OAAAoO,EAAA,EAAApO,CAAA20C,EAAAC,GAAA50C,OAAAqO,EAAA,EAAArO,CAAA20C,EAAA,EAAArmC,IAAA,SAAAC,MAAA,WAyBI,OACEC,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,sBACb2M,EAAA7M,EAAAC,cAAA,sBAEA4M,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAU3G,KAAKgO,MAAM2lC,WAAa3zC,KAAKgO,MAAMmH,aAE1DnV,KAAKgO,MAAM2lC,UAAY3zC,KAAKgO,MAAMmH,YACnC1G,EAAA7M,EAAAC,cAAA,kBAIA7B,KAAKgO,MAAM2lC,WAAa3zC,KAAKgO,MAAMmH,YACnCnV,KAAKg1C,uBArCjBJ,EAAA,CAAsC7lC,aAAzB6lC,EA4CJS,cAAgB,SAACC,GAAD,MAAgC,kBAAZA,EAAuBA,EAAQtjB,QAAQ,GAAK,qBAgBnFujB,6MAEJvnC,MAAQ,CACNwnC,YAAY,EACZC,WAAW,KAGbC,8BAAW,SAAAnxC,IAAA,OAAAkL,EAAA7N,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACToJ,EAAKsC,SAAS,CAACqnC,YAAY,IADlB/wC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAGDU,IAAYyI,UAHX,OAIPC,EAAKsC,SAAS,CAACsnC,WAAW,IAJnBhxC,EAAAhC,KAAA,gBAAAgC,EAAAjC,KAAA,EAAAiC,EAAAwE,GAAAxE,EAAA,SAMPqE,QAAQ1G,MAARqC,EAAAwE,IANO,QAST4C,EAAKsC,SAAS,CAACqnC,YAAY,IATlB,yBAAA/wC,EAAAvB,SAAAqB,EAAA,mBAqBXoxC,eAAiB,kBACflnC,EAAA7M,EAAAC,cAAC+zC,EAAA,EAAD,CAAUl0C,GAAIm0C,+EATd,OAAI71C,KAAKgO,MAAMynC,UACNz1C,KAAK21C,iBAGZlnC,EAAA7M,EAAAC,cAAC8K,EAAA,EAAD,CAAeC,UAAW5M,KAAKgO,MAAMwnC,WAAY1oC,QAAS9M,KAAK01C,SAAU3oC,OAAK,GAA9E,iBAxBqBgC,aClHN+mC,mLAEjB,OACErnC,EAAA7M,EAAAC,cAAC+tC,EAAA,EAAD,CAAQ9tC,UAAU,mBAAmBi0C,OAAO,MAC1CtnC,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,WACb2M,EAAA7M,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgL,QAAS9M,KAAK6O,MAAMmnC,iBAChEvnC,EAAA7M,EAAAC,cAAA,OAAKqS,IAAK+hC,IAAMn0C,UAAU,YAAYkS,IAAI,qBAI9CvF,EAAA7M,EAAAC,cAAA,WACE4M,EAAA7M,EAAAC,cAACq0C,EAAD,eAX0BnnC,uCCIfonC,6MAEnBnoC,MAAQ,CACNooC,wBAAwB,KAG1BtgC,kBAAoB,kBAAM/V,EAAKs2C,qBAE/BA,qCAAkB,SAAAr0C,IAAA,OAAAyN,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVU,IAAYkH,OADF,OAEhBtK,EAAKoO,SAAS,CAACioC,wBAAwB,IAFvB,wBAAA7zC,EAAAW,SAAAlB,8EAMhB,OAAKhC,KAAKgO,MAAMooC,uBAGTp2C,KAAKs2C,eAFHt2C,KAAKu2C,wFAMd,OACE9nC,EAAA7M,EAAAC,cAAA,OAAK8hB,MAAO,CAACuI,OAAQ,UACnBzd,EAAA7M,EAAAC,cAAC6E,EAAA,EAAD,CAAkBC,SAAO,4CAM7B,OACE8H,EAAA7M,EAAAC,cAAC20C,EAAD,aA9B8CznC,aAmC9C0nC,EAAY,kBAChBhoC,EAAA7M,EAAAC,cAACijB,EAAA,EAAD,KAEErW,EAAA7M,EAAAC,cAAC60C,EAAD,CAAc1xB,KAAMzN,IAAe2N,UAAWL,MAC9CpW,EAAA7M,EAAAC,cAAC60C,EAAD,CAAc1xB,KAAMlG,IAAgBoG,UAAWutB,MAG/ChkC,EAAA7M,EAAAC,cAAC80C,EAAD,CAAkB3xB,KAAM6wB,IAAY3wB,UAAW0xB,MAG/CnoC,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAM1G,IAAuB4G,UAAWwtB,MAG/CjkC,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOvZ,OAAQ,kBAAOiD,EAAA7M,EAAAC,cAAC+zC,EAAA,EAAD,CAAUl0C,GAAI6V,WAIlCs/B,EAAe,SAAAnvC,GAAA,IAAEsd,EAAFtd,EAAEsd,KAAiBjW,EAAnBrH,EAAQwd,UAAR,OACnBzW,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAMA,EACNxZ,OAAQ,kBAAMrI,IAAYE,aACxBoL,EAAA7M,EAAAC,cAACkN,EAAD,MACAN,EAAA7M,EAAAC,cAAC+zC,EAAA,EAAD,CAAUl0C,GAAIm0C,UAKnBiB,EAAmB,SAAAj/B,GAAA,IAAEmN,EAAFnN,EAAEmN,KAAiBjW,EAAnB8I,EAAQqN,UAAR,OACvBzW,EAAA7M,EAAAC,cAACkjB,EAAA,EAAD,CAAOC,KAAMA,EACNxZ,OAAQ,kBAAMrI,IAAYE,aACxBoL,EAAA7M,EAAAC,cAAC+zC,EAAA,EAAD,CAAUl0C,GAAI6V,MACd9I,EAAA7M,EAAAC,cAACkN,EAAD,UChEUgoC,6MAEnB/oC,MAAQ,CACN6kC,aAAa,KAgCfmD,gBAAkB,kBAAMj2C,EAAKoO,SAAS,SAAA6oC,GACpC,MAAO,CAACnE,aAAcmE,EAAcnE,mGA9BlB,IAAAhnC,EAAA7L,KAClBmD,IAAY6H,wBAAwB,kBAAMa,EAAKgsB,iDAI/C,IAAMof,EAAuB9zC,IAAYC,iBAAmBD,IAAYE,aACxE,OACEoL,EAAA7M,EAAAC,cAACq1C,EAAA,EAAD,KACEzoC,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,WAGXm1C,GACAxoC,EAAA7M,EAAAC,cAACs1C,EAAD,CAAStE,YAAa7yC,KAAKgO,MAAM6kC,cAInCpkC,EAAA7M,EAAAC,cAAA,OAAKC,UAAU,UAAU6hB,MAAO,CAACmI,QAAW,OAAQsrB,cAAiB,WAEjEH,GACAxoC,EAAA7M,EAAAC,cAACw1C,EAAD,CAAQrB,gBAAiBh2C,KAAKg2C,kBAGhCvnC,EAAA7M,EAAAC,cAACy1C,EAAD,gBA5BwBvoC,6DCEpCwoC,IAAQltC,KAAK,CACXmtC,SAAU,QACVC,QAAS,CAAC,QAAS,cAUNC,oLAJX,OAAQjpC,EAAA7M,EAAAC,cAAC81C,EAAD,aAFM5oC,aCPE6Z,QACW,cAA7Bhe,OAAOgtC,SAASC,UAEe,UAA7BjtC,OAAOgtC,SAASC,UAEhBjtC,OAAOgtC,SAASC,SAASr0B,MACvB,2DCZNs0B,IAAStsC,OAAOiD,EAAA7M,EAAAC,cAACk2C,GAAD,MAAS5M,SAASI,eAAe,SD2H3C,kBAAmByM,WACrBA,UAAUC,cAAcC,MAAMjyC,KAAK,SAAAkyC,GACjCA,EAAaC,gDEnInBh3C,EAAAiF,EAAA7E,EAAA,sBAAAsN,IAAO,IAAMA,EAAiB,SAACupC,GAAD,OAAc,SAAC/iC,GAC3CA,EAAEu5B,kBAEFwJ,0FCHmBC,EAOnB,SAAAA,EAAYj4C,EAAIg8B,EAAWkc,EAAWtuC,GAAY,IAAAlK,EAAAC,KAAAC,OAAAsN,EAAA,EAAAtN,CAAAD,KAAAs4C,GAAAt4C,KAOlDQ,MAAQ,kBAAMT,EAAKM,IAP+BL,KASlDu/B,SAAW,kBAAMx/B,EAAKS,SAT4BR,KAWlDS,aAAe,kBAAMV,EAAKs8B,WAXwBr8B,KAalDY,YAAc,SAACF,GAAD,OAAaX,EAAKU,eAAeH,KAAK,SAAAQ,GAAQ,OAAIA,EAASywB,eAAiB7wB,KAbxCV,KAelDw4C,aAAe,kBAAMz4C,EAAKw4C,WAfwBv4C,KAiBlDsd,cAAgB,kBAAMvd,EAAKkK,YAjBuBjK,KAmBlDkB,UAAY,kBAAMnB,EAAKsxC,sBAAsB5jC,OAAS,GAnBJzN,KAqBlDqxC,oBAAsB,kBAAMtxC,EAAKU,eAAeI,OAAO,SAAAC,GAAQ,OAAIA,EAASI,eArB1BlB,KAuBlD68B,SAAW,kBAAM98B,EAAK04C,qBAAqBhrC,OAAS,GAvBFzN,KAyBlDy4C,mBAAqB,kBAAM14C,EAAKU,eAAeI,OAAO,SAAAC,GAAQ,OAAIA,EAAS+7B,cAzBzB78B,KA2BlDgB,WAAa,kBAAMjB,EAAKuxC,uBAAuB7jC,SAAW1N,EAAKU,eAAegN,QA3B5BzN,KA6BlDsxC,qBAAuB,kBAAMvxC,EAAKU,eAAeI,OAAO,SAAAC,GAAQ,OAAIA,EAASE,gBA5B3EhB,KAAKK,GAAKA,EACVL,KAAKq8B,UAAYA,EACjBr8B,KAAKu4C,UAAYA,EACjBv4C,KAAKiK,WAAaA,oBCLhByuC,EAAQ,GAAAj1C,OAAM8C,IAAN,SAEDoyC,EAAY,SAAAl3C,GAAyC,IAAvCpB,EAAuCoB,EAAvCpB,GAAImE,EAAmC/C,EAAnC+C,KAAMob,EAA6Bne,EAA7Bme,WAAYg5B,EAAiBn3C,EAAjBm3C,YACzCvc,EAAY,GAYlB,OAXAp8B,OAAO2iB,KAAKpe,GAAMkH,QAAQ,SAAAhL,GACxB,IAAMI,EAAW0D,EAAK9D,GAEtB27B,EAAUnxB,KAAK,IAAI2tC,IACjB/3C,EAASkN,MACT3N,EACAS,EAASg4C,SACTp4C,MAIG,IAAI43C,EAAIj4C,EAAIg8B,EAAW,IAAIxc,KAAKD,GAAag5B,IAGhDG,EAAiB,SAACn3C,EAAGwsB,GAAJ,OAAUA,EAAEoqB,eAAiB52C,EAAE42C,gBAEvCh3C,EAAA,GAEPknC,QAFO,eAAAsQ,EAAA/4C,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAlG,IAAA,OAAAyN,EAAA7N,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGEzC,KAAKg5C,SAAL,GAAAv1C,OAAiBi1C,IAHnB,cAAAn2C,EAAAU,OAAA,SAAAV,EAAAK,MAAA,wBAAAL,EAAAW,SAAAlB,EAAAhC,SAAA,yBAAAg5C,EAAAj1C,MAAA/D,KAAAgE,YAAA,GAMP4tC,kBANO,eAAAqH,EAAAh5C,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAAjE,EAMWgG,GANX,OAAAwF,EAAA7N,EAAAU,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAOEzC,KAAKg5C,SAAL,GAAAv1C,OAAiBi1C,EAAjB,gBAAAj1C,OAAwCwG,IAP1C,cAAA/F,EAAAjB,OAAA,SAAAiB,EAAAtB,MAAA,wBAAAsB,EAAAhB,SAAAe,EAAAjE,SAAA,gBAAAqI,GAAA,OAAA4wC,EAAAl1C,MAAA/D,KAAAgE,YAAA,GAUPg1C,SAVO,eAAAE,EAAAj5C,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAA7N,EAAAsG,KAAA,SAAA3D,EAUEtC,GAVF,IAAAmG,EAAAtI,EAAA,OAAA2P,EAAA7N,EAAAU,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EAWYkB,YAAQ1B,GAXpB,cAWLmG,EAXK3D,EAAA7B,MAYL9C,EAAOsI,EAASzH,IAAIg4C,IACrBQ,KAAKJ,GAbCt0C,EAAAxB,OAAA,SAcJ,IAAIpD,IAAKC,IAdL,wBAAA2E,EAAAvB,SAAAqB,MAAA,gBAAAkE,GAAA,OAAAywC,EAAAn1C,MAAA/D,KAAAgE,YAAA,GAiBb6kC,gBAjBa,SAiBGtoC,EAAKomC,GACnB,SAAAljC,OAAUi1C,EAAV,KAAAj1C,OAAsBlD,EAAIF,GAA1B,mBAAAoD,OAA8CkjC,iHC5CrCzH,EAAYj/B,OAAOm5C,OAAO,CACrCna,OAAQ,eACRE,QAAS,UACTC,SAAU,WACVC,YAAa,gBAERJ,EAA6BC,EAA7BD,OAAQE,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,SAEHyZ,EAOnB,SAAAA,EAAY7qC,EAAOqrC,EAAO5K,EAAS/tC,GAAS,IAAAX,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAA64C,GAAA74C,KAO5CuxB,WAAa,kBAAMxxB,EAAKW,SAPoBV,KAS5C0/B,SAAW,kBAAM3/B,EAAKiO,OATsBhO,KAW5Cu/B,SAAW,kBAAMx/B,EAAKs5C,OAXsBr5C,KAa5Cy/B,WAAa,kBAAM1/B,EAAK0uC,SAboBzuC,KAe5CkB,UAAY,kBAAMnB,EAAK2/B,aAAeP,GAfMn/B,KAiB5C68B,SAAW,kBAAM98B,EAAK2/B,aAAeT,GAjBOj/B,KAmB5CgB,WAAa,kBAAMjB,EAAK2/B,aAAeN,GAlBrCp/B,KAAKU,QAAUA,EACfV,KAAKgO,MAAQA,EACbhO,KAAKq5C,MAAQA,EACbr5C,KAAKyuC,QAAUA,oCCnBnBrtC,EAAAiF,EAAA7E,EAAA,sBAAA+Z,IAAA,IAAA+9B,EAAAl4C,EAAA,IAEama,EAAyB,SAAA2J,GAAS,OAAIA,EAAUrW,MAAM4M,QAAQvQ,KAAxB,GAAAzH,OAAgC8T,uNCMtEs+B,UAAa,UAELe,6MAEnB2C,sBAAuB,IAEvBvrC,MAAQ,CACNwrC,UAAU,KAUZ7D,eAAiB,kBACf8D,EAAA73C,EAAAC,cAAC63C,EAAA,EAAD,CAAUh4C,GAAI6V,SAGhBoiC,YAAc,WAEZ,OADA55C,EAAK65C,6BAEHH,EAAA73C,EAAAC,cAACg4C,EAAA,EAAD,KACEJ,EAAA73C,EAAAC,cAACi4C,EAAA,EAAD,CAAWn2B,MAAO,CAACo2B,UAAW,MAAOC,UAAW,WAC9CP,EAAA73C,EAAAC,cAAA,gCACA43C,EAAA73C,EAAAC,cAAA,8DAGA43C,EAAA73C,EAAAC,cAAA,OAAKxB,GAAG,8BAMhBu5C,2BAA6B,WACtB75C,EAAKw5C,uBACRx5C,EAAKoL,qBACLpL,EAAKw5C,sBAAuB,MAIhCpuC,mBAAqB,kBAAM8uC,EAAa,WACtC92C,IAAYgI,mBAAmB,uBAAwBpL,EAAKsL,iBAG9DA,WAAa,kBAAMtL,EAAKoO,SAAS,CAACqrC,UAAU,6EApC1C,OAAIx5C,KAAKgO,MAAMwrC,SACNx5C,KAAK21C,iBAEP31C,KAAK25C,qBAZmB5qC","file":"static/js/main.f5f1c86d.chunk.js","sourcesContent":["export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n\n  getRunningRuns = () => this.runs.filter(run => run.isRunning());\n}\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import AuthService from \"../AuthService\";\n\nasync function sendAndParseJSON(url, options) {\n  options = getOptionsWithAuthorizationHeadersIfSignedIn(options);\n  const res = await fetch(url, options);\n\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nconst getOptionsWithAuthorizationHeadersIfSignedIn = (options) => {\n  if (!AuthService.isInitialized() || !AuthService.isSignedIn()) {\n    return options;\n  }\n  return getOptionsWithAuthorizationHeaders(options);\n};\n\nconst getOptionsWithAuthorizationHeaders = (options) => {\n  options = options || {};\n  options.headers = options.headers || {};\n  options.headers.Authorization = `Bearer ${AuthService.getBearerToken()}`\n  return options;\n};\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, options) {\n  return await sendAndParseJSON(url, options);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","export const WEBAPP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingContainer = ({loading, children}) => {\n  if (loading) {\n    return (\n      <div className=\"loading-spinner-container\">\n        <Spinner animation=\"border\" variant=\"primary\"/>\n      </div>\n    );\n  }\n  return children;\n};\n\n\nexport default LoadingContainer;\n","module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph, shared}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph,\n    shared\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] updateWorkflow()\");\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async saveAndStartWorkflow (workflow) {\n    console.log(\"[WorkflowsSerivice] saveAndStartWorkflow()\");\n    await this.updateWorkflow(workflow);\n    await this.startWorkflow(workflow);\n  },\n\n  async startWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] startWorkflow()\");\n    const startedRunId = await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n    return startedRunId;\n  },\n\n  async estimateDoBlockCost (workflowId, blockId) {\n    return await postJSON(`${WORKFLOWS_URL}/${workflowId}/${blockId}/estimated-cost`);\n  }\n}\n","/* global gapi */\n\n/**\n * AuthService uses the Google Platform Library to authenticate users. This library is loaded from a script specified in\n * the index.html, where you can also find the client id.\n * Since the script exposes a global object gapi at an unknown time, this Service need to be initialized.\n * The initialization process will periodically check if the library is loaded until it can find the gapi global object\n */\nconst AuthService = {\n\n  _authChangeListeners: [],\n  auth2: null,\n\n  async init() {\n    await this._waitForGapiToLoad();\n    this.auth2 = await this._loadAuth2Api();\n    this._notifyListeners();\n  },\n\n  /**\n   * Wait until the Google Platform Library exposes the gapi global object\n   * @returns {Promise<any>}\n   * @private\n   */\n  _waitForGapiToLoad() {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (window.gapi) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n  },\n\n  /**\n   * Request to the Google Platform Library to load the auth2 module\n   * @returns {Promise<any>}\n   * @private\n   */\n  _loadAuth2Api() {\n    return new Promise(resolve => {\n      gapi.load('auth2', function () {\n        const auth2 = gapi.auth2.init();\n        resolve(auth2);\n      });\n    });\n  },\n\n  addOnAuthChangeListener(listener) {\n    this._authChangeListeners.push(listener);\n  },\n\n  renderSignInButton(containerId, onSignedIn) {\n    this.assertInitialized();\n    gapi.signin2.render(containerId, {\n      onSuccess: () => {\n        onSignedIn();\n        this._notifyListeners();\n      }\n    });\n  },\n\n  _notifyListeners() {\n    this._authChangeListeners.forEach(listener => listener())\n  },\n\n  isInitialized() {\n    return !!this.auth2;\n  },\n\n  isSignedIn() {\n    this.assertInitialized();\n    return this.auth2.isSignedIn.get();\n  },\n\n  signOut() {\n    this.assertInitialized();\n    return new Promise(resolve => this.auth2.signOut().then(() => {\n      resolve();\n      this._notifyListeners();\n    }));\n  },\n\n  getBearerToken () {\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getAuthResponse().id_token;\n  },\n\n  getUserInfo(){\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getBasicProfile();\n  },\n\n  assertInitialized () {\n    if(!this.isInitialized()) {\n      throw new Error('AuthService not initialized');\n    }\n  }\n\n};\n\nexport default AuthService;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isLoading, disabled, onClick, children, block, variant}) => (\n  <Button disabled={disabled || isLoading}\n          onClick={onClick}\n          className={block ? 'btn-block' : ''}\n          variant={variant || 'primary'}>\n    {\n      isLoading &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\nimport LoadingButton from \"./LoadingButton\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <LoadingButton variant=\"danger\"\n                         className=\"confirm\"\n                         onClick={this.onConfirmDeletion}\n                         isLoading={this.state.deleting}>Delete</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst USERS_URL = `${API_URL}/users`;\n\nconst JSONtoUser = ({id, data}) => ({\n  id,\n  email: data.email,\n  imageUrl: data.picture\n});\n\nexport const USER_SUGGETION_MIN_EMAIL_LENGTH = 4;\n\nexport default {\n  async findUsersByEmail(email) {\n    const jsonList = await getJSON(`${USERS_URL}?email=${email}`);\n    return jsonList.map(JSONtoUser);\n  },\n\n  async getById(id) {\n    const json = await getJSON(`${USERS_URL}/${id}`);\n    return JSONtoUser(json);\n  }\n};\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst PROJECT_COLLABORATIONS_URL = `${API_URL}/project-collaborations`;\n\nconst JSONToProjectCollaboration = ({id, id_project, id_user}) => ({\n  id,\n  projectId: id_project,\n  userId: id_user\n});\n\nexport const ProjectCollaborationToJSON = ({id, projectId, userId}) => ({\n  id,\n  projectId,\n  userId\n});\n\nexport default {\n  async getCollaborationsOfProject(projectId) {\n    const jsonList = await getJSON(`${PROJECT_COLLABORATIONS_URL}?projectId=${projectId}`);\n    return jsonList.map(JSONToProjectCollaboration);\n  },\n\n  async createCollaboration(projectId, userId) {\n    const jsonToSend = ProjectCollaborationToJSON({projectId, userId});\n    const receivedJSON = await postJSON(PROJECT_COLLABORATIONS_URL, jsonToSend);\n    return JSONToProjectCollaboration(receivedJSON);\n  },\n\n  async deleteCollaboration(collaborationId) {\n    await sendDelete(`${PROJECT_COLLABORATIONS_URL}/${collaborationId}`);\n  }\n};\n\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\nimport UsersService, {USER_SUGGETION_MIN_EMAIL_LENGTH} from \"../../../../Services/rest/UsersService\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\n\nexport default class AddNewCollaboration extends Component {\n\n  state = {};\n\n  fetchSuggestions = async (input) => {\n    if (input.length >= USER_SUGGETION_MIN_EMAIL_LENGTH) {\n      return await this.fetchSuggestionsFromService(input);\n    }\n    return [];\n  };\n\n  fetchSuggestionsFromService = async (input) => {\n    const users = await UsersService.findUsersByEmail(input);\n    return this.filterUserAlreadyCollaborating(users);\n  };\n\n  filterUserAlreadyCollaborating = (users) => {\n    const collaboratorIds = this.getUserIdsOfCollaborators();\n    return users\n      .filter(user => this.props.project.ownerId !== user.id)\n      .filter(user => collaboratorIds.find(collaboratorId => collaboratorId === user.id) == null);\n  };\n\n  getUserIdsOfCollaborators = () => this.getCollaborations().map(collaboration => collaboration.userId);\n\n  getCollaborations = () => this.props.collaborations;\n\n  render() {\n    const {project} = this.props;\n    return (\n      <div>\n        <h4>Add a new collaboration</h4>\n        <Form.Group>\n          <Form.Label>User email</Form.Label>\n          <AutocompleteField\n            fetchSuggestions={this.fetchSuggestions}\n            renderSuggestion={user => <SuggestedUser key={user.id}\n                                                     {...user}\n                                                     projectId={project.id}\n                                                     onCollaborationAdded={this.props.onCollaborationAdded}/>}\n            onSuggestionSelected={this.onAddUser}\n          />\n        </Form.Group>\n      </div>\n    );\n  }\n}\n\nclass SuggestedUser extends Component {\n\n  state = {\n    isAdding: false,\n    added: false\n  };\n\n  onAddUser = async () => {\n    const {projectId, id: userId} = this.props;\n    this.setState({isAdding: true});\n    try {\n      const collaboration = await ProjectCollaborationsService.createCollaboration(projectId, userId);\n      this.props.onCollaborationAdded(collaboration);\n      this.setState({added: true});\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isAdding: false});\n  };\n\n  render() {\n    const {isAdding, added} = this.state;\n    const {email, imageUrl} = this.props;\n    return (\n      <ListGroupItem className=\"collaborator-row\">\n        <Row>\n          <Col xs={2}>\n            <img alt=\"user avatar\" width=\"100%\" src={imageUrl}/>\n          </Col>\n          <Col xs={7}>{email}</Col>\n          <Col xs={3} className=\"action\">\n            {\n              added ?\n                <Button className=\"btn-block\" disabled variant=\"success\">Added</Button> :\n                <LoadingButton block isLoading={isAdding} onClick={this.onAddUser}>Add</LoadingButton>\n            }\n          </Col>\n        </Row>\n      </ListGroupItem>\n    )\n  }\n}\n\nclass AutocompleteField extends Component {\n\n  DEFAULT_TIMEOUT = 300;\n\n  timeout = null;\n\n  state = {\n    suggestions: [],\n    isFetching: false,\n\n    value: '',\n  };\n\n  onInputChange = (input) => {\n    this.setState({value: input});\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.startTimeout(input);\n  };\n\n  isTimeoutRunning = () => this.timeout !== null;\n\n  cancelTimeout = () => {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n  };\n\n  startTimeout = (input) => this.timeout = setTimeout(\n    () => this.onTimeoutElapsed(input),\n    this.DEFAULT_TIMEOUT\n  );\n\n  onTimeoutElapsed = async (input) => {\n    this.setState({isFetching: true});\n    try {\n      const suggestions = await this.props.fetchSuggestions(input);\n      this.setState({suggestions, isFetching: false});\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  onSuggestionSelected = (suggestion) => {\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.setState({\n      value: '',\n      suggestions: [],\n      isFetching: false\n    });\n    this.props.onSuggestionSelected(suggestion);\n  };\n\n  render() {\n    const {value, suggestions, isFetching, fetchError} = this.state;\n    const {renderSuggestion} = this.props;\n    return (\n      <div>\n        <Form.Control\n          className=\"mb-2\"\n          value={value}\n          onChange={(e) => this.onInputChange(e.target.value)}/>\n\n\n        <LoadingContainer loading={isFetching}>\n          {\n            fetchError &&\n            <span>Can't suggest users</span>\n          }\n\n          <ListGroup>\n            {\n              !fetchError &&\n              suggestions.map(renderSuggestion)\n            }\n          </ListGroup>\n        </LoadingContainer>\n      </div>\n    );\n  }\n}\n\n","import React, {Component} from \"react\";\nimport {Col, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\n\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport UsersService from \"../../../../Services/rest/UsersService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\n\n\nexport default ({collaborations, onCollaborationDeleted}) => (\n  <div>\n    <h4>Collaborations</h4>\n    <ListGroup>\n      {\n        collaborations.length <= 0 &&\n        <span>No collaborations</span>\n      }\n      {\n        collaborations.length > 0 && collaborations.map(collaboration => (\n          <Collaboration key={collaboration.id} {...collaboration} onCollaborationDeleted={onCollaborationDeleted}/>\n        ))\n      }\n    </ListGroup>\n  </div>\n);\n\nclass Collaboration extends Component {\n\n  state = {\n    isFetching: false,\n    user: null,\n\n    isRemoving: false\n  };\n\n  componentDidMount = () => this.fetchUser();\n\n  fetchUser = async () => {\n    this.setState({isFetching: true});\n    try {\n      const user = await UsersService.getById(this.getUserId());\n      this.setState({user});\n    } catch (e) {\n      console.log(e);\n      // TODO: Handle error\n    }\n    this.setState({isFetching: false});\n  };\n\n  getUserId = () => this.props.userId;\n\n  onRemoveUser = async () => {\n    this.setState({isRemoving: true});\n    try {\n      const id = this.getCollaborationId();\n      await ProjectCollaborationsService.deleteCollaboration(id);\n      this.props.onCollaborationDeleted(id);\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isRemoving: false})\n  };\n\n  getCollaborationId = () => this.props.id;\n\n  render() {\n    const {isRemoving, isFetching, user} = this.state;\n    const {email, imageUrl} = user || {};\n    return (\n      (\n        <ListGroupItem className=\"collaborator-row\">\n          <LoadingContainer loading={isFetching}>\n            <Row>\n              <Col xs={2}>\n                <img alt=\"user avatar\" width=\"100%\" src={imageUrl}/>\n              </Col>\n              <Col xs={7}>{email}</Col>\n              <Col xs={3} className=\"action\">\n                <LoadingButton isLoading={isRemoving} onClick={this.onRemoveUser}\n                               variant=\"danger\">Remove</LoadingButton>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </ListGroupItem>\n      )\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../../utils/events\";\nimport AddNewCollaboration from \"./AddNewCollaboration\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport CollaborationsList from \"./CollaborationsList\";\nimport \"./ShareProjectButtonAndModal.css\";\n\nexport default class ShareProjectButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareProjectModal show={this.state.show}\n                           onClose={this.onCloseModal}\n                           {...this.props}/>\n\n          <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass ShareProjectModal extends Component {\n\n  state = {\n    collaborations: null,\n    isFetching: false,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchCollaborations();\n\n  fetchCollaborations = async () => {\n    this.setState({collaborations: null, isFetching: true, fetchError: false});\n    try {\n      const collaborations = await ProjectCollaborationsService.getCollaborationsOfProject(this.getProject().id);\n      this.setState({collaborations});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n    this.setState({isFetching: false});\n  };\n\n  getProject = () => this.props.project;\n\n  onClose = () => this.props.onClose();\n\n  onCollaborationAdded = (collaboration) => this.setState({collaborations: [...this.state.collaborations, collaboration]});\n\n  onCollaborationDeleted = (id) => {\n    const {collaborations} = this.state;\n    const index = collaborations.findIndex(collaboration => collaboration.id === id);\n    if(index >= 0) {\n      collaborations.splice(index, 1);\n      this.setState({collaborations});\n    }\n  };\n\n  render() {\n    const {fetchError, collaborations, isFetching} = this.state;\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>Sharing preferences of project ...</Modal.Header>\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            <AddNewCollaboration collaborations={collaborations}\n                                 project={this.getProject()}\n                                 onCollaborationAdded={this.onCollaborationAdded}/>\n            <CollaborationsList collaborations={collaborations}\n                                onCollaborationDeleted={this.onCollaborationDeleted}/>\n          </LoadingContainer>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ShareProjectButtonAndModal from \"./ShareProjectButtonAndModal/ShareProjectButtonAndModal\";\nimport \"./ProjectsTable.css\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td className=\"actions-cell\">\n        <ShareProjectButtonAndModal project={project}/>\n        <EditButton project={project}/>\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst EditButton = ({project}) => {\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n  return (\n    <Link to={editProjectLink} className=\"icon-button\">\n      <i className=\"fas fa-edit\"/>\n    </Link>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.projects && !this.state.fetchError}>\n          <Row>\n            {\n              !this.state.projects && this.state.fetchError &&\n              <FetchProjectsError/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length === 0 &&\n              <NoProjects/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length > 0 &&\n              <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n            }\n          </Row>\n        </LoadingContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Alert, Button, Form, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport LoadingButton from \"../../common/LoadingButton\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport \"./ShareWorkflowButtonAndModal.css\";\nimport {PUBLIC_WORKFLOWS_PATH} from \"../Workflows\";\nimport {WEBAPP_URL} from \"../../../config\";\n\nexport class ShareWorkflowButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareWorkflowModal show={this.state.show}\n                            onClose={this.onCloseModal}\n                            {...this.props}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class ShareWorkflowModal extends Component {\n\n  state = {\n    workflow: null,\n\n    isFetching: false,\n    fetchError: false,\n\n    isSaving: false,\n    saveError: false\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.show && !prevProps.show) {\n      this.fetchWorkflow();\n    }\n  }\n\n  fetchWorkflow = async () => {\n    try {\n      this.setState({isFetching: true, fetchError: false});\n      const workflow = await WorkflowsService.getWorkflow(this.getWorkflowId());\n      this.setState({isFetching: false, fetchError: false, workflow});\n    } catch (e) {\n      this.setState({isFetching: false, fetchError: true});\n    }\n  };\n\n  getWorkflowId = () => this.props.workflow.id;\n\n  shareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: true}});\n\n  unshareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: false}});\n\n  onCancel = () => this.props.onClose();\n\n  onSave = async () => {\n    try {\n      this.setState({isSaving: true, saveError: false});\n      await WorkflowsService.updateWorkflow(this.state.workflow);\n      this.setState({isSaving: false, saveError: false});\n      this.props.onClose();\n    } catch (e) {\n      this.setState({isSaving: false, saveError: true});\n    }\n  };\n\n  render() {\n    const {isFetching, fetchError, isSaving, saveError, workflow} = this.state;\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          Sharing preferences of workflow #{this.getWorkflowId()}\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            {\n              saveError &&\n              <Alert variant=\"danger\">\n                An error occurred while saving the sharing preferences.\n              </Alert>\n            }\n\n            {\n              workflow &&\n              <SharingPreferenceControl workflowId={workflow.id}\n                                        shared={!!workflow.shared}\n                                        shareWorkflow={this.shareWorkflow}\n                                        unshareWorkflow={this.unshareWorkflow}/>\n            }\n          </LoadingContainer>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={isSaving}>Cancel</Button>\n          <LoadingButton onClick={this.onSave} disabled={isFetching} isLoading={isSaving}>Save</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nconst SharingPreferenceControl = ({shared, workflowId, shareWorkflow, unshareWorkflow}) => {\n  const publicLink = getPublicLink(workflowId);\n  return (\n    <div>\n      <Form.Group>\n        <Form.Check\n          checked={!shared}\n          type=\"radio\"\n          label=\"Private Workflow\"\n          onChange={unshareWorkflow}\n        />\n        <p className=\"description-of-radio\">Workflow visible and editable only by the owner and collaborators</p>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Check\n          checked={shared}\n          type=\"radio\"\n          label=\"Public Workflow\"\n          onChange={shareWorkflow}\n        />\n        <p className=\"description-of-radio\">\n          Workflow visible by anyone and editable only by the owner and collaborators.\n          Public Link: <a href={publicLink} target=\"_blank\" rel=\"noopener noreferrer\">{publicLink}</a>\n        </p>\n      </Form.Group>\n    </div>\n  );\n};\n\nconst getPublicLink = (workflowId) => `${WEBAPP_URL}/#${PUBLIC_WORKFLOWS_PATH}/${workflowId}`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {ShareWorkflowButtonAndModal} from \"./ShareWorkflowButtonAndModal\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowUpdated, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <ShareWorkflowButtonAndModal workflow={workflow}/>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.workflows && !this.state.fetchError}>\n          <Row>\n            <Col>\n              {\n                this.state.fetchError &&\n                <FetchingWorkflowsError/>\n              }\n\n              {\n                this.state.workflows &&\n                <WorkflowsTable workflows={this.state.workflows}\n                                onWorkflowDeleted={this.fetchWorkflows}/>\n              }\n            </Col>\n          </Row>\n        </LoadingContainer>\n      </Container>\n    );\n  }\n}\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <LoadingContainer loading={!this.state.items}>\n          <Container className=\"items-table-container\">\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          </Container>\n        </LoadingContainer>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <LoadingContainer loading={!this.state.project}>\n            <Row>\n              <ProjectData project={this.state.project}/>\n\n              <div style={{width: '100%'}}>\n                <hr/>\n\n                <Tabs defaultActiveKey=\"workflow\">\n                  <Tab eventKey=\"workflow\" title=\"Workflows\">\n                    <EmbeddableWorkflowsList project={this.state.project}/>\n                  </Tab>\n\n                  <Tab eventKey=\"items\" title=\"Items\">\n                    <ItemsView project={this.state.project}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Row>\n        </LoadingContainer>\n\n      </Container>\n    );\n  }\n}\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n  json.ownerId = json.id_user;\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nexport default class HtmlModalEditor extends Component {\n\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <div>\n        <Button disabled={this.props.disabled} className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n\n        <Modal show={this.state.show} size=\"lg\">\n          <Modal.Header>{this.props.title}</Modal.Header>\n\n          <Modal.Body>\n            <Editor {...this.props}/>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button onClick={this.hideModal}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport HtmlModalEditor from \"./HtmlModalEditor\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const EditorComponent = this.getEditor();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <EditorComponent onEditorChange={this.handleEditorChange}\n                         initialValue={model.getValue()}\n                         init={{menubar: false}}\n                         disabled={this.props.disabled}\n                         title={definition.displayName}/>\n      </Form.Group>\n    );\n  }\n\n  getEditor() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    if (definition.editorInModal) {\n      return HtmlModalEditor;\n    }\n    return Editor;\n  }\n\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle disabled={this.isDisabled()} className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle disabled={this.isDisabled()}\n                       className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html/Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\nimport DoBlockCost from \"./DoBlockCost\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext,\n  DoBlockCost\n]);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\n\nclass DoBlockCostWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimatedCost: this.getModel().getEstimatedCost(),\n      estimationError: false,\n      estimating: false\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  estimateCost = async () => {\n    this.setState({estimatedCost: null, estimationError: false, estimating: true});\n    try {\n      const estimatedCost = await WorkflowsService.estimateDoBlockCost(\n        this.getWorkflowId(), this.getBlockId()\n      );\n      this.onCostEstimated(estimatedCost);\n    } catch (e) {\n      this.setState({estimatedCost: null, estimationError: true, estimating: false});\n    }\n  };\n\n  getWorkflowId() { // TODO: Clear\n    const blockModel = this.getBlockModel();\n    const workflowModel = blockModel.parent;\n    return workflowModel.workflowId;\n  }\n\n  getBlockModel() {\n    return this.getModel().blockModel;\n  }\n\n  getBlockId() {\n    const blockModel = this.getBlockModel();\n    return blockModel.id;\n  }\n\n  onCostEstimated(estimatedCost) {\n    this.setState({estimatedCost, estimationError: false, estimating: false});\n    this.getModel().setEstimatedCost(estimatedCost);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderEstimatedCost()}\n\n        <LoadingButton block onClick={this.estimateCost}\n                       isLoading={this.state.estimating}\n                       disabled={this.props.disabled}>\n          Estimate cost\n        </LoadingButton>\n      </div>\n    );\n  }\n\n  renderEstimatedCost() {\n    if (this.state.estimatedCost === null) {\n      return this.renderCostNeverEstimated();\n    }\n    return this.renderLatestEstimatedCost();\n  }\n\n  renderCostNeverEstimated() {\n    return (\n      <Form.Text className=\"text-muted\">\n        The cost of this block has never been estimated. Click the button below to estimate it.\n      </Form.Text>\n    );\n  }\n\n  renderLatestEstimatedCost() {\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          The latest estimated cost is: <strong>{this.state.estimatedCost}$</strong>.\n          Click the button below to estimate it again.\n        </Form.Text>\n      </div>\n    );\n  }\n}\n\nclass DoBlockCostModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n\n  setEstimatedCost(estimatedCost) {\n    if (estimatedCost) {\n      estimatedCost = estimatedCost.toFixed(2);\n    }\n    this.setValue(estimatedCost);\n  }\n\n  getEstimatedCost() {\n    return this.getValue();\n  }\n}\n\nexport default {\n  type: 'doBlockCost',\n  Widget: DoBlockCostWidget,\n  Model: DoBlockCostModel\n}\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../Services/RunnableWorkflowService/models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getPortsAsList () {\n    return Object.values(this.getPorts());\n  }\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED, NOT_STARTED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, blockId);\n    this.waitRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, `${blockId}_wait`);\n  }\n\n  static _getBlockRunOrNotStarted = (run, blockId) => run.getBlockRun(blockId) || {getState: () => NOT_STARTED};\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../Services/RunnableWorkflowService/adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DefaultPortModel} from \"storm-react-diagrams\";\n\nexport default class BlockPortModel extends DefaultPortModel {\n\n  canLinkToPort(port) {\n    if (!super.canLinkToPort(port)) {\n      return false;\n    }\n    const linkWouldCreateRecursiveDependence = BlockPortModel.blockDependsOnItself(this.getBlock());\n    if (linkWouldCreateRecursiveDependence) {\n      console.info(\"Link prevented to avoid recursive dependencies\");\n    }\n    return !linkWouldCreateRecursiveDependence;\n  }\n\n  getBlock() {\n    return this.parent;\n  }\n\n  getConnectedBlocks() {\n    return this.getLinksAsList()\n      .map(link => link.sourcePort === this ? link.targetPort : link.sourcePort)\n      .map(port => port.getBlock());\n  }\n\n  getLinksAsList() {\n    return Object.values(this.getLinks());\n  }\n\n  static blockDependsOnItself(block, visitedBlockIds = {}) {\n    visitedBlockIds[block.getId()] = true;\n    const outPort = block.getPort('out');\n    const connectedBlocks = outPort.getConnectedBlocks();\n    for (let connectedBlock of connectedBlocks) {\n      if (visitedBlockIds[connectedBlock.getId()]) {\n        return true;\n      }\n      if (BlockPortModel.blockDependsOnItself(connectedBlock, visitedBlockIds)) {\n        return true;\n      }\n    }\n    visitedBlockIds[block.getId()] = false;\n    return false;\n  }\n\n}\n","import {DefaultPortFactory} from \"storm-react-diagrams\";\nimport BlockPortModel from \"../models/BlockPortModel\";\n\nexport default class BlockPortFactory extends DefaultPortFactory{\n\n  getNewInstance(initialConfig) {\n    return new BlockPortModel();\n  }\n}\n","import {DefaultLabelFactory, DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\nimport BlockPortFactory from \"./factories/BlockPortFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.registerFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  registerFactories() {\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.registerPortFactory(new BlockPortFactory());\n    this.registerLabelFactory(new DefaultLabelFactory());\n    this.registerNodeFactories();\n  }\n\n  registerNodeFactories () {\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.props.onModelUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadLinkFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, isLatest, id}) => (\n  <Dropdown.Item href={link} target=\"_blank\">\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default (props) => (\n  <div>\n    {\n      !props.readOnly &&\n      <ExecutionCard {...props}/>\n    }\n\n    <ResultsCard {...props}/>\n  </div>\n);\n\nconst ExecutionCard = ({runnable, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <Card>\n    <Card.Header>Execution</Card.Header>\n\n    <Card.Body>\n      {\n        runnable.isRunning() &&\n        <div>\n          Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n          Progress:<br/>\n          <RunsProgressBar runnable={runnable}/>\n        </div>\n      }\n\n      <LoadingButton block onClick={onStart}\n                     disabled={!runnable.canStart()}\n                     isLoading={isStarting}>{startText}</LoadingButton>\n\n    </Card.Body>\n  </Card>\n);\n\nconst ResultsCard = ({runnable, downloadLinkFactory}) => (\n  <Card className=\"mt-2\">\n    <Card.Header>Results</Card.Header>\n    <Card.Body>\n      <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                        runnable={runnable}/>\n    </Card.Body>\n  </Card>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.saveAndStartWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow, readOnly} = this.props;\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}\n                      readOnly={readOnly}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    borderColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import {DoBlockNodeModel} from \"./DoBlockNodeModel\";\n\nexport const DEFAULT_WORKER_BLOCKED_MESSAGE = \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\";\n\nexport default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById(id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableContextForAllDoBlocks(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    id: 'default-blocking-context',\n    name: 'Default',\n    color: '#ffaff3',\n    workerBlockedMessage: \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\"\n  });\n\n  _enableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(context.id));\n\n  getBlockingContextModelsOfDoBlocks = () => this.getDoBlockModels()\n    .map(block => block.getBlockingContextModelParameter());\n\n  getDoBlockModels() {\n    return this.graphModel.getBlocksArray().filter(block => block instanceof DoBlockNodeModel);\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => {\n      this._disableContextForAllDoBlocks(context);\n      this.removeContext(context)\n    });\n  }\n\n  _disableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => blockingContextModel.getBlockingContextId() === context.id)\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(null));\n\n\n  isSingleBlockingContextEnabledForAllDoBlocks = () => {\n    const onlyOneContext = this.getContexts().length === 1;\n    const blocks = this.graphModel.getBlocksArray();\n    const blocksWithEnabledBlockingContext = this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId());\n    return onlyOneContext && blocks.length === blocksWithEnabledBlockingContext.length;\n  };\n\n\n  areSomeBlockingContextsEnabled = () =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId())\n      .length > 0;\n\n}\n\n\nexport const isBlockingContextValid = ({name, workerBlockedMessage}) =>\n  name && name.length >= 0 && workerBlockedMessage\n  && workerBlockedMessage.length >= 0;\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport \"./CreateBlockingContext.css\";\nimport {\n  DEFAULT_WORKER_BLOCKED_MESSAGE,\n  isBlockingContextValid\n} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport default class CreateBlockingContext extends Component {\n\n  togglePopoverButton = React.createRef();\n  popoverContent = React.createRef();\n\n  state = {\n    show: false\n  };\n\n  showPopover = () => {\n    this.setState({show: true});\n    this.registerListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  registerListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.addEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  clickListenerToClosePopoverWhenUserClicksOutside = (e) => {\n    const popoverContent = this.popoverContent.current;\n    const clickInPopover = e.composedPath().indexOf(popoverContent) >= 0;\n    if (!clickInPopover) {\n      this.hidePopover();\n    }\n  };\n\n  onCreated = (context) => {\n    this.hidePopover();\n    this.props.onAdd(context);\n  };\n\n  hidePopover = () => {\n    this.setState({show: false});\n    this.unregisterListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  unregisterListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.removeEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\"\n                onClick={this.showPopover}\n                ref={this.togglePopoverButton}>Add blocking context</Button>\n        <Overlay\n          id=\"create-blocking-context-popover-container\"\n          show={this.state.show}\n          placement=\"left\"\n          target={this.togglePopoverButton.current}\n          container={document.getElementById('workflow-editor')}>\n\n          <Popover title=\"Create blocking context\"\n                   id=\"create-blocking-context-popover\"\n                   placement=\"left\">\n            <div ref={this.popoverContent}>\n              <CreateBlockingContextPopover onCreated={this.onCreated}/>\n            </div>\n          </Popover>\n        </Overlay>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n  state = {\n    name: '',\n    color: null,\n    workerBlockedMessage: DEFAULT_WORKER_BLOCKED_MESSAGE\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      ...this.getBlockingContextFromState()\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Form.Row>\n        <Col xs=\"12\">\n          <Form.Group>\n            <Form.Control name=\"name\"\n                          type=\"text\"\n                          placeholder=\"Blocking context name\"\n                          value={name}\n                          onChange={this.onNameChange}/>\n          </Form.Group>\n        </Col>\n        <Col xs=\"8\">\n          <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n        </Col>\n        <Col xs=\"4\">\n          <Button className=\"btn-block\"\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}\n                  onClick={this.onAdd}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nimport {ignoreEventAnd} from \"../../../../../../utils/events\";\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport {isBlockingContextValid} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport class EditBlockingContextModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <EditBlockingContextModal show={this.state.show}\n                                  onClose={this.onCloseModal}\n                                  context={this.props.context}\n                                  onModelUpdate={this.props.onModelUpdate}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-edit\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass EditBlockingContextModal extends Component {\n\n  state = {\n    name: null,\n    color: null,\n    workerBlockedMessage: null\n  };\n\n  componentDidMount() {\n    this.resetInputFields();\n  }\n\n  resetInputFields = () => this.setState({...this.props.context});\n\n  onSave = () => {\n    this.updatePropsContext();\n    this.props.onClose();\n  };\n\n  updatePropsContext = () => {\n    const {name, color, workerBlockedMessage} = this.state;\n    const context = this.props.context;\n    context.name = name;\n    context.color = color;\n    context.workerBlockedMessage = workerBlockedMessage;\n    this.props.onModelUpdate();\n  };\n\n  onCancel = () => {\n    this.resetInputFields();\n    this.props.onClose();\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onColorChange = (color) => this.setState({color});\n\n  onWorkerBlockedMessageChange = (workerBlockedMessage) => {\n    this.setState({workerBlockedMessage});\n  };\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  render() {\n    const {name, color, workerBlockedMessage} = this.state;\n    // TODO: Handle disabled state\n    return (\n      <Modal show={this.props.show} size=\"xl\">\n        <Modal.Header>\n          Blocking context editor\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Row>\n            <Col xs=\"12\" sm=\"9\">\n              <Form.Group>\n                <Form.Control name=\"name\"\n                              type=\"text\"\n                              placeholder=\"Blocking context name\"\n                              value={name}\n                              onChange={this.onNameChange}/>\n              </Form.Group>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <RandomColorPicker color={color} onChange={this.onColorChange}/>\n            </Col>\n          </Form.Row>\n          <Row>\n            <Col>\n              <Editor onEditorChange={this.onWorkerBlockedMessageChange}\n                      initialValue={workerBlockedMessage}\n                      init={{menubar: false}}/>\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n          <Button className=\"confirm\"\n                  onClick={this.onSave}\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\nimport {EditBlockingContextModalAndButton} from \"./EditBlockingContextModalAndButton\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.props.onModelUpdate();\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const {disabled} = this.props;\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Blocking contexts</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}\n                               onModelUpdate={this.props.onModelUpdate}\n                               disabled={disabled}/>\n\n        {\n          !disabled &&\n          <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n        }\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n\n  getBlockingContextsModel = () => this.props.model;\n\n  getContexts = () => this.getBlockingContextsModel().getContexts();\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const contexts = this.getContexts();\n    if (contexts.length <= 0) {\n      return this.renderNoBlockingContextsYet();\n    }\n\n    return this.renderTable();\n  }\n\n  renderNoBlockingContextsYet = () => (\n    <Form.Text className=\"text-muted\">\n      No blocking contexts created yet in this workflow\n    </Form.Text>\n  );\n\n  renderTable = () => (\n    <Table striped bordered hover size=\"sm\" className=\"blocking-contexts-table\">\n      <thead>\n      <tr>\n        <th/>\n        <th className=\"name-column\">Name</th>\n\n        {\n          /* actions column */\n          !this.isDisabled() &&\n          <th/>\n        }\n      </tr>\n      </thead>\n      <tbody>\n\n      {\n        this.getContexts().map(context => (\n          <BlockingContextsTableRow key={context.id}\n                                    context={context}\n                                    disabled={this.isDisabled()}\n                                    blockingContextsModel={this.getBlockingContextsModel()}\n                                    onModelUpdate={this.props.onModelUpdate}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nconst BlockingContextsTableRow = ({context, disabled, blockingContextsModel, onModelUpdate}) => (\n  <tr>\n    <td className=\"color-box-container\">\n      <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n    </td>\n    <td>{context.name}</td>\n    {\n      /* actions cell */\n      !disabled &&\n      <td className=\"actions-cell\">\n        <div className=\"actions\">\n\n          {/* edit */}\n          <EditBlockingContextModalAndButton context={context}\n                                             onModelUpdate={onModelUpdate}/>\n\n          {/* delete */}\n          <DeleteBlockingContextCell blockingContextsModel={blockingContextsModel}\n                                     context={context}\n                                     onModelUpdate={onModelUpdate}/>\n        </div>\n\n      </td>\n    }\n  </tr>\n);\n\n\nclass DeleteBlockingContextCell extends Component {\n\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.blockingContextsModel;\n\n  render() {\n    const {context} = this.props;\n    return (\n      <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            If checked, one worker will be able to work only on one job of this workflow. When indeterminate, workers\n            won't be able to work on job of the same blocking context\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Block workers\"\n                      checked={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}\n                      disabled={this.props.disabled}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSingleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\nimport WorkflowBlockingCheckbox from \"./WorkflowBlockingCheckbox\";\n\nconst WorkflowBlockingSettings = ({graphModel, onModelUpdate, disabled}) => (\n  <ParameterContainerCard title=\"Blocking workers\">\n    <WorkflowBlockingCheckbox graphModel={graphModel}\n                              onModelUpdate={onModelUpdate}\n                              disabled={disabled}/>\n\n    <BlockingContextsCRUD graphModel={graphModel}\n                          onModelUpdate={onModelUpdate}\n                          disabled={disabled}/>\n  </ParameterContainerCard>\n);\n\nexport default WorkflowBlockingSettings;\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel, readOnly}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  const disabled = readOnly;\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={disabled}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}\n                                    disabled={disabled}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}\n                                readOnly={readOnly}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n\n    /**\n     * NOTE: When you'll implement the start block feature, take a look at how the start workflow is implemented\n     */\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}\n                         readOnly={this.props.readOnly}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow, disabled, readOnly}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={disabled}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={disabled}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block}\n                           runnableWorkflow={runnableWorkflow}\n                           disabled={disabled}\n                           readOnly={readOnly}/>\n      </div>\n    }\n  />\n);\n\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel(this);\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\nimport \"./WorkflowSaveBar.css\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed, saveError, disabled}) => {\n  const isValid = graphModel.isValid();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          disabled &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n\n        {\n          !disabled && saveError &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Error while saving the workflow\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || disabled}\n                     isLoading={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  constructor(props) {\n    super(props);\n    const {runnableWorkflow} = this.props;\n    this.graphModel.workflowId = runnableWorkflow.getWorkflow().id;\n  }\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    this.graphModel.setLocked(this.isEditDisabled());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.onModelUpdated();\n  };\n\n  onModelUpdated = () => {\n    console.log(\"[WorkflowEditor] onModelUpdated()\");\n    this.onWorkflowEdited();\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onModelUpdated();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  isReadOnly = () => this.props.readOnly;\n\n  isEditDisabled = () => this.isReadOnly() || !this.props.runnableWorkflow.canBeEdited();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\" id=\"workflow-editor\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            !this.isEditDisabled() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}\n              onModelUpdate={this.onModelUpdated}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n\n            {\n              !this.isReadOnly() &&\n              <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                               graphModel={this.graphModel}\n                               onSavePressed={this.onSavePressed}\n                               isSaving={this.props.isSaving}\n                               saveError={this.props.saveError}\n                               disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={this.onModelUpdated}\n                                          runnableWorkflow={runnableWorkflow}\n                                          readOnly={this.isReadOnly()}\n                                          disabled={this.isEditDisabled()}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={this.onModelUpdated}\n                                 readOnly={this.isReadOnly()}\n                                 disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <LoadingContainer loading={this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow}>\n        <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n      </LoadingContainer>\n    )\n  }\n}\n\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"../rest/WorkflowsService\";\nimport RunnableWorkflow from \"./models/RunnableWorkflow\";\nimport RunsService from \"../rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\n\nexport default class ReadOnlyWorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.getWorkflowIdFromUrl() !== this.getWorkflowIdFromSpecifiedProps(prevProps)) {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    }\n  }\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n    this.setState({runnableWorkflow: null});\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.getWorkflowIdFromSpecifiedProps(this.props);\n\n  getWorkflowIdFromSpecifiedProps = (props) => props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      readOnly/>;\n  }\n}\n","import React from 'react';\n\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport ReadOnlyWorkflowDashboard from \"./ReadOnlyWorkflowDashboard\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditableWorkflowDashboard extends ReadOnlyWorkflowDashboard {\n\n  constructor(props) {\n    super(props);\n    this.state.isSaving = false;\n    this.state.saveError = false;\n  }\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditableWorkflowDashboard from \"./WorkflowDashboard/EditableWorkflowDashboard\";\nimport ReadOnlyWorkflowDashboard from \"./WorkflowDashboard/ReadOnlyWorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\nexport const PUBLIC_WORKFLOWS_PATH = \"/public-workflows\";\n\n\nexport const Workflows = () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditableWorkflowDashboard}/>\n  </Switch>\n);\n\nexport const PublicWorkflows = () => (\n  <Switch>\n    <Route path={`${PUBLIC_WORKFLOWS_PATH}/:id`} exact component={ReadOnlyWorkflowDashboard}/>\n  </Switch>\n);\n\n","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Sidebar.css';\nimport RunsService from \"../../Services/rest/RunsService\";\nimport {WORKFLOWS_PATH} from \"../Workflows/Workflows\";\n\nconst MAX_RUNS_IN_LIST = 5;\n\nexport default class Sidebar extends Component {\n\n  state = {\n    runs: null\n  };\n\n  componentDidMount = () => this.fetchRuns();\n\n  async fetchRuns() {\n    try {\n      const runs = await RunsService.getRuns();\n      this.setState({runs});\n    } catch (e) {\n      // TODO: Handle error\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ul className=\"sidebar-list\">\n          <li>\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </li>\n\n          <li>\n            <LatestFinishedRunsList runs={this.state.runs}/>\n          </li>\n\n          <li>\n            <RunningRunsList runs={this.state.runs}/>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\nconst LatestFinishedRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching latest finished runs ...</p>;\n  }\n  return (\n    <div>\n      Latest finished runs\n      <JobsList runs={runs.getFinishedRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst RunningRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching running runs ...</p>;\n  }\n  return (\n    <div>\n      Running runs\n      <JobsList runs={runs.getRunningRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst JobsList = ({runs}) => (\n  <ul>\n    {\n      runs.map(run => (\n        <li key={run.id}>\n          <NavLink to={`${WORKFLOWS_PATH}/${run.getWorkflowId()}`}>\n            #{run.id}\n          </NavLink>\n        </li>\n      ))\n    }\n  </ul>\n);\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ACCOUNT_BALANCE_URL = `${API_URL}/account-balance`;\n\n\nexport const JSONtoBalances = json => json;\n\nexport default {\n\n  _cachedBalance: null,\n\n  async getBalances() {\n    if (this._isBalancesCached()) {\n      return this._getCachedBalance();\n    }\n    const json = await getJSON(ACCOUNT_BALANCE_URL);\n    const balances = JSONtoBalances(json);\n    this._cacheBalances(balances);\n    return balances;\n  },\n\n  _isBalancesCached() {\n    return !!this._getCachedBalance();\n  },\n\n  _getCachedBalance() {\n    return this._cachedBalance;\n  },\n\n  _cacheBalances(balances) {\n    this._cachedBalance = balances;\n  }\n}\n\n","import React, {Component} from 'react';\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\nimport \"./AccountInformation.css\";\nimport {makeCancellable} from \"../../Services/rest/utils\";\nimport AccountBalanceService from \"../../Services/rest/AccountBalanceService\";\nimport LoadingContainer from \"../common/LoadingContainer\";\nimport AuthService from \"../../Services/AuthService\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport {LOGIN_PATH} from \"../Login/Login\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class AccountInformation extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        overlay={\n          <Popover id=\"account-information-popover\"\n                   title=\"Account information\">\n            <AccountInformationPopoverContent/>\n          </Popover>\n        }>\n\n        <div>\n          <AccountInformationPreview/>\n        </div>\n      </OverlayTrigger>\n    );\n  }\n}\n\nclass AccountInformationPreview extends Component {\n  render() {\n    const userInfo = AuthService.getUserInfo();\n    return (\n      <div>\n        <span>{userInfo.getName()}</span>\n        <img className=\"user-avatar\" src={userInfo.getImageUrl()} alt=\"user avatar\"/>\n      </div>\n    );\n  }\n}\n\n\nexport class AccountInformationPopoverContent extends Component {\n  render() {\n    return (\n      <div>\n        <PlatformBalances/>\n\n        <hr/>\n\n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n\n\nexport class PlatformBalances extends Component {\n\n  pendingBalancesRequest;\n\n  state = {\n    balances: null,\n    fetchError: false\n  };\n\n  componentDidMount = async () => await this.fetchBalances();\n\n  componentWillUnmount = () => this.pendingBalancesRequest.cancel();\n\n  fetchBalances = async () => {\n    this.setState({balances: null, fetchError: false});\n    try {\n      this.pendingBalancesRequest = makeCancellable(AccountBalanceService.getBalances());\n      const balances = await this.pendingBalancesRequest.result;\n      this.setState({balances, fetchError: false});\n    } catch (e) {\n      this.setState({balances: null, fetchError: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"balances-container\">\n        <h6>Balances</h6>\n\n        <LoadingContainer loading={!this.state.balances && !this.state.fetchError}>\n          {\n            !this.state.balances && this.state.fetchError &&\n            <p>Error</p>\n          }\n\n          {\n            this.state.balances && !this.state.fetchError &&\n            this.renderBalances()\n          }\n        </LoadingContainer>\n      </div>\n    );\n  }\n\n  static prepareNumber = (balance) => typeof balance === \"number\" ? balance.toFixed(2) : \"not available\";\n\n  renderBalances = () => {\n    const {tolokaSandbox, tolokaNormal, f8} = this.state.balances;\n    return (\n      <div>\n        <strong>Toloka Sandbox</strong>: {PlatformBalances.prepareNumber(tolokaSandbox)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(tolokaNormal)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(f8)}$<br/>\n      </div>\n    );\n  };\n\n}\n\n\nclass LogoutButton extends Component {\n\n  state = {\n    loggingOut: false,\n    loggedOut: false\n  };\n\n  onLogout = async () => {\n    this.setState({loggingOut: true});\n    try {\n      await AuthService.signOut();\n      this.setState({loggedOut: true});\n    } catch (e) {\n      console.error(e);\n      // TODO: Handle error\n    }\n    this.setState({loggingOut: false});\n  };\n\n  render() {\n    if (this.state.loggedOut) {\n      return this.renderRedirect();\n    }\n    return (\n      <LoadingButton isLoading={this.state.loggingOut} onClick={this.onLogout} block>Logout</LoadingButton>\n    );\n  }\n\n  renderRedirect = () => (\n    <Redirect to={LOGIN_PATH}/>\n  );\n}\n","import React, {Component} from 'react';\nimport menu from \"../../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\nimport AccountInformation from \"./AccountInformation\";\n\n\nexport default class AppBar extends Component {\n  render() {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <div className=\"mr-auto\">\n          <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n            <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n          </button>\n        </div>\n\n        <div>\n          <AccountInformation/>\n        </div>\n      </Navbar>\n    )\n  }\n\n\n}\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport {PUBLIC_WORKFLOWS_PATH, PublicWorkflows, Workflows, WORKFLOWS_PATH} from \"./Workflows/Workflows\";\nimport AuthService from '../Services/AuthService';\nimport Login, {LOGIN_PATH} from \"./Login/Login\";\nimport LoadingContainer from \"./common/LoadingContainer\";\n\n\nexport default class AuthenticatedAppRouter extends Component {\n\n  state = {\n    authServiceInitialized: false\n  };\n\n  componentDidMount = () => this.initAuthService();\n\n  initAuthService = async () => {\n    await AuthService.init();\n    this.setState({authServiceInitialized: true});\n  };\n\n  render() {\n    if (!this.state.authServiceInitialized) {\n      return this.renderInitializingAuthService();\n    }\n    return this.renderRouter();\n  }\n\n  renderInitializingAuthService() {\n    return (\n      <div style={{height: '100vh'}}>\n        <LoadingContainer loading/>\n      </div>\n    );\n  }\n\n  renderRouter() {\n    return (\n      <AppRouter/>\n    );\n  }\n}\n\nconst AppRouter = () => (\n  <Switch>\n    {/* private routes */}\n    <PrivateRoute path={PROJECTS_PATH} component={Projects}/>\n    <PrivateRoute path={WORKFLOWS_PATH} component={Workflows}/>\n\n    {/* only public routes */}\n    <NotLoggedInRoute path={LOGIN_PATH} component={Login}/>\n\n    {/* private or public routes */}\n    <Route path={PUBLIC_WORKFLOWS_PATH} component={PublicWorkflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={PROJECTS_PATH}/>)}/>\n  </Switch>\n);\n\nconst PrivateRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Component/> :\n           <Redirect to={LOGIN_PATH}/>\n         }/>\n);\n\n\nconst NotLoggedInRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Redirect to={PROJECTS_PATH}/> :\n           <Component/>\n         }/>\n);\n\n\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./Appbar/AppBar\";\nimport AuthenticatedAppRouter from \"./AppRouter\";\nimport AuthService from \"../Services/AuthService\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  componentDidMount() {\n    AuthService.addOnAuthChangeListener(() => this.forceUpdate());\n  }\n\n  render() {\n    const showSidebarAndAppBar = AuthService.isInitialized() && AuthService.isSignedIn();\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {\n            /* Left collapsable sidebar */\n            showSidebarAndAppBar &&\n            <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n          }\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            {\n              showSidebarAndAppBar &&\n              <AppBar onToggleSidebar={this.onToggleSidebar}/>\n            }\n\n            <AuthenticatedAppRouter/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n  workflowId;\n\n  constructor(id, blockRuns, createdAt, workflowId) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n    this.workflowId = workflowId;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  getWorkflowId = () => this.workflowId;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../RunnableWorkflowService/models/Run\";\nimport BlockRun from \"../RunnableWorkflowService/models/BlockRun\";\nimport Runs from \"../RunnableWorkflowService/models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at, id_workflow}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at), id_workflow);\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRuns () {\n    return await this._getRuns(`${RUNS_URL}`);\n  },\n\n  async getRunsOfWorkflow(workflowId) {\n    return await this._getRuns(`${RUNS_URL}?workflowId=${workflowId}`);\n  },\n\n  async _getRuns(url) {\n    const jsonList = await getJSON(url);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\n\nimport AuthService from \"../../Services/AuthService\";\nimport {PROJECTS_PATH} from \"../Projects/Projects\";\nimport \"./Login.css\";\n\nexport const LOGIN_PATH = \"/login\";\n\nexport default class Login extends Component {\n\n  signInButtonRendered = false;\n\n  state = {\n    loggedIn: false\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return this.renderRedirect();\n    }\n    return this.renderLogin();\n  }\n\n  renderRedirect = () => (\n    <Redirect to={PROJECTS_PATH}/>\n  );\n\n  renderLogin = () => {\n    this.renderSignInButtonIfNeeded();\n    return (\n      <Container>\n        <Jumbotron style={{marginTop: '3em', textAlign: 'center'}}>\n          <h1>Welcome to Servant</h1>\n          <p>\n            Please login with your Google account to continue\n          </p>\n          <div id=\"google-signin-button\"/>\n        </Jumbotron>\n      </Container>\n    );\n  };\n\n  renderSignInButtonIfNeeded = () => {\n    if (!this.signInButtonRendered) {\n      this.renderSignInButton();\n      this.signInButtonRendered = true;\n    }\n  };\n\n  renderSignInButton = () => setImmediate(() => {\n    AuthService.renderSignInButton('google-signin-button', this.onSignedIn)\n  });\n\n  onSignedIn = () => this.setState({loggedIn: true});\n}\n\n\n"],"sourceRoot":""}