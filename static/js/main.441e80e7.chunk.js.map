{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/utils.js","config.js","Services/ProjectsService.js","Components/common/Breadcrumbs.js","Components/common/DeleteButtonAndModal.js","Components/utils/events.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Services/WorkflowsService.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Services/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/BlockNode.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/DraggableBlockTypeListSidebar.js","Components/common/LoadingButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowPropertiesSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/BlockConfiguratorSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditorWithFetchedBlockTypes.js","Components/Workflows/WorkflowDashboard/EditWorkflowPage.js","Components/Workflows/Workflows.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","APP_URL","process","PROJECTS_URL","concat","Errors","INVALID_WORKFLOW_DATA","JSONtoProject","parseInt","created_at","Date","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","Object","asyncToGenerator","mark","jsonList","map","getProject","_getProject","jsonJob","_x","createProject","_createProject","project","_x2","updateProject","_updateProject","t0","response","INVALID_PROJECT_DATA","deleteProject","_deleteProject","LinkBreadcrumb","_ref","children","Link","SimpleBreadcrumb","_ref2","DeleteButtonAndModal","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","DeleteButtonAndModal_DeleteModal","assign","onCancel","callback","e","stopPropagation","DeleteModal","_Component2","_getPrototypeOf3","_this2","_len2","_key2","deleting","deleteError","onConfirmDeletion","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","variant","Footer","Button","disabled","ProjectsTable","projects","onProjectDeleted","Col","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","editProjectLink","name","description","ProjectsTable_DeleteProjectButton","DeleteProjectButton","_ref3","DeleteButtonAndModal_DeleteButtonAndModal","Title","ProjectsList","componentDidMount","fetchProjects","componentWillUnmount","pendingProjectsRequest","fetchError","Container","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","Row","ProjectsList_FetchingProjects","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","FetchingProjects","NoProjects","FetchProjectsError","common_BackButton","text","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","Form","noValidate","Group","Label","Control","type","onChange","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","push","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WORKFLOWS_URL","JSONtoWorkflow","id_project","workflow","objectSpread","projectId","graph","nodes","forEach","node","nodeType","workflowToJSON","jsonNode","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","getWorkflow","_getWorkflow","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","info","deleteWorkflow","_deleteWorkflow","startWorkflow","_startWorkflow","_callee6","_context6","log","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","event","target","getModel","onModelUpdated","model","onKeyUp","Model","parameters_Number","isRequired","isNaN","NumberWidget","parameters_Boolean","BooleanWidget","checked","Check","label","TextFromDropdownModel","getChoices","find","choice","choices","TextFromDropdown","onChangeValue","HtmlModel","Html","handleEditorChange","es2015","onEditorChange","initialValue","init","menubar","ChoiceBuilderModel","index","splice","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","striped","bordered","AddChoice","isNewChoiceValid","_this3","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onImport","onFilePicked","InputGroup","Prepend","style","display","accept","multiple","FormControl","readOnly","Append","height","boxSizing","CodeEditorModalAndButton","hideModal","onSave","code","onUpdateCode","CodeEditorModal_CodeEditorModal","onClose","CodeEditorModal","onCodeEdited","size","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","react_ace_lib_default","width","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","Boolean","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","title","Collapse","in","ParametersEngine","parametrizedBlock","onParameterModelUpdate","getId","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_UnsupportedParameter","UnsupportedParameter","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","block","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","findIndex","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","prevProps","prevState","snapshot","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","_this$props","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","b","temp","DoDesignModel","_AbstractParameterMod","get","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","setTimeout","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","xs","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","keys","BlockNodeModel","_DefaultNodeModel","engine","initializeBlockWithIds","blockTypeDefinition","getBlockTypeDefinition","port","DefaultNodeModel","BlockNodeWidget","_DefaultNodeWidget","main","DefaultNodeWidget","BlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","BlackLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","WorkflowGraphEngine","blockTypeDefinitions","setBlockTypeDefinitions","installFactories","installDefaultFactories","registerLinkFactory","registerNodeFactory","DiagramEngine","WorkflowGraphEditor","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","x","y","addNode","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onNodeSelected","getSelectedItems","graphModel","initialGraph","onDragOver","preventDefault","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","LoadingButton","isSaving","Spinner","animation","role","aria-hidden","WorkflowPropertiesSidebar","onChangeName","onChangeDescription","onEdit","runWorkflow","startingWorkflow","startWorkflowError","_props$workflow","common_LoadingButton","WorkflowEditor_BlockConfiguratorSidebar","onModelUpdate","WorkflowGraphModel","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","LoadingWorkflowEditor","LoadedWorkflowEditor","selectedNode","onSavePressed","onWorkflowEdited","serializeDiagram","WorkflowEditor_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowEditor_WorkflowSaveBar","WorkflowPropertiesSidebar_WorkflowPropertiesSidebar","WorkflowSaveBar","WorkflowEditor","WorkflowEditor_LoadedWorkflowEditor","WorkflowEditor_LoadingWorkflowEditor","WorkflowEditorWithFetchedBlockTypes","fetchBlockTypesError","fetchBlockTypes","pendingBlockTypesRequest","BlockTypesDefinitionService","WorkflowDashboard_WorkflowEditor_WorkflowEditor","EditWorkflowPage","saveError","fetchWorkflow","pendingWorkflowRequest","match","WorkflowEditorWithFetchedBlockTypes_WorkflowEditorWithFetchedBlockTypes","Workflows","Switch","Route","exact","WorkflowsTable","workflows","onWorkflowDeleted","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflows","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflows","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","onInputChange","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","aria-label","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","ItemsTable_DeleteItemButton","onItemDeleted","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsView_FetchingItems","ItemsTable_ItemsTable","FetchingItems","ProjectView","fetchProject","pendingProjectRequest","ProjectView_FetchingProject","ProjectData","Tabs","defaultActiveKey","Tab","eventKey","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","FetchingProject","EditProject","assertThisInitialized","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","EditProject_FetchingProject","UpdateProjectError","_ref4","Projects","AppRouter","render","Redirect","Layout","previousState","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","tinymce","selector","plugins","App","Layout_Layout","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mhBCKnBC,2LAGjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUC,UAAWC,KAAKC,MAAMC,YAAc,OAAS,IAC7DP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,WAEAJ,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAWQ,GAAG,MACZT,EAAAC,EAAAC,cAACM,EAAAP,EAAUS,KAAX,CAAgBD,GAAG,KAAKL,UAAU,gBAChCJ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,aAAZ,sBATyBC,yCCAhBC,mLAEjB,OACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQX,UAAU,mBAAmBY,OAAO,MAC1ChB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4Ba,QAASZ,KAAKC,MAAMY,iBAChElB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,IAAMhB,UAAU,YAAYiB,IAAI,4BALhBR,+HCLrBS,iFAAf,SAAAC,EAAgCC,EAAKC,GAArC,IAAAC,EAAAC,EAAA,OAAAC,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBC,MAAMT,EAAKC,GAD/B,UACQC,EADRI,EAAAI,KAGOC,EAAaT,GAHpB,CAAAI,EAAAE,KAAA,cAIUL,EAAQ,IAAIS,MAAM,+BAClBC,OAASX,EAAIW,OACbV,EANV,cAAAG,EAAAE,KAAA,EASeN,EAAIY,OATnB,cAAAR,EAAAS,OAAA,SAAAT,EAAAI,MAAA,yBAAAJ,EAAAU,SAAAjB,6BAYO,IAAMY,EAAe,SAACT,GAAD,OAASA,EAAIW,QAAU,KAAOX,EAAIW,QAAU,KAEjE,SAAeI,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAAxC,KAAAyC,sDAAO,SAAAC,EAAuBvB,EAAKC,GAA5B,OAAAG,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACQV,EAAiBE,EAAKC,GAD9B,cAAAuB,EAAAT,OAAA,SAAAS,EAAAd,MAAA,wBAAAc,EAAAR,SAAAO,6BAIA,SAAeE,EAAtBC,EAAAC,GAAA,OAAAC,EAAAP,MAAAxC,KAAAyC,sDAAO,SAAAO,EAAwB7B,EAAK8B,GAA7B,OAAA1B,EAAA3B,EAAA4B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACQV,EAAiBE,EAAK,CACjCgC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KANlB,cAAAC,EAAAhB,OAAA,SAAAgB,EAAArB,MAAA,wBAAAqB,EAAAf,SAAAa,6BAUA,SAAeS,EAAtBC,EAAAC,GAAA,OAAAC,EAAApB,MAAAxC,KAAAyC,sDAAO,SAAAoB,EAAuB1C,EAAK8B,GAA5B,OAAA1B,EAAA3B,EAAA4B,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACQV,EAAiBE,EAAK,CACjCgC,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KANlB,cAAAa,EAAA5B,OAAA,SAAA4B,EAAAjC,MAAA,wBAAAiC,EAAA3B,SAAA0B,6BAUA,SAAeE,EAAtBC,GAAA,OAAAC,EAAAzB,MAAAxC,KAAAyC,sDAAO,SAAAyB,EAA0B/C,GAA1B,OAAAI,EAAA3B,EAAA4B,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EACQV,EAAiBE,EAAK,CACjCgC,OAAQ,WAFL,cAAAgB,EAAAjC,OAAA,SAAAiC,EAAAtC,MAAA,wBAAAsC,EAAAhC,SAAA+B,6BAQA,SAASE,EAAgBC,GAC9B,IAAIC,GAAY,EAChB,MAAO,CACLC,OAAQ,IAAIC,QAAQ,SAACC,EAASC,GAC5BL,EACGM,KAAK,SAAAtD,GACCiD,GACHG,EAAQpD,KAGXuD,MAAM,SAAAC,GACAP,GACHI,EAAOG,OAIfC,OAAQ,kBAAMR,GAAY,IC7DvB,IAAMS,EAAUC,gDCGjBC,EAAY,GAAAC,OAAMH,EAAN,aAELI,EAAS,CAClBC,sBAAuB,wBAG3B,SAASC,EAAcpD,GAMrB,OALAA,EAAKnC,GAAKwF,SAASrD,EAAKnC,IACxBmC,EAAKsD,WAAa,IAAIC,KAAKvD,EAAKsD,YAChCtD,EAAKwD,WAAa,IAAID,KAAKvD,EAAKwD,YAChCxD,EAAKyD,WAAa,IAAIF,KAAKvD,EAAKyD,YAEzBzD,EAGT,SAAS0D,EAAcC,GACrB,OAAOA,EAGM,IAAAC,EAAA,CACPC,YADO,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhF,IAAA,IAAAiF,EAAA,OAAA5E,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYS,EAAQ6C,GAFpB,cAELkB,EAFK1E,EAAAI,KAAAJ,EAAAS,OAAA,SAGJiE,EAASC,IAAIf,IAHT,wBAAA5D,EAAAU,SAAAjB,MAAA,yBAAA6E,EAAAvD,MAAAxC,KAAAyC,YAAA,GAMP4D,WANO,eAAAC,EAAAN,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAxD,EAMI5C,GANJ,IAAAyG,EAAA,OAAAhF,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAOWS,EAAO,GAAA8C,OAAID,EAAJ,KAAAC,OAAoBpF,IAPtC,cAOLyG,EAPK5D,EAAAd,KAAAc,EAAAT,OAAA,SAQJmD,EAAckB,IARV,wBAAA5D,EAAAR,SAAAO,MAAA,gBAAA8D,GAAA,OAAAF,EAAA9D,MAAAxC,KAAAyC,YAAA,GAWPgE,cAXO,eAAAC,EAAAV,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAlD,EAWO2D,GAXP,IAAA1E,EAAA,OAAAV,EAAA3B,EAAA4B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAYLM,EAAO0D,EAAcgB,GAZhBzD,EAAAvB,KAAA,EAaEiB,EAAQ,GAAAsC,OAAID,GAAgBhD,GAb9B,cAAAiB,EAAAhB,OAAA,SAAAgB,EAAArB,MAAA,wBAAAqB,EAAAf,SAAAa,MAAA,gBAAA4D,GAAA,OAAAF,EAAAlE,MAAAxC,KAAAyC,YAAA,GAgBPoE,cAhBO,eAAAC,EAAAd,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAArC,EAgBO8C,GAhBP,IAAA1E,EAAA,OAAAV,EAAA3B,EAAA4B,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAkBHO,EAAO0D,EAAcgB,GAlBlB7C,EAAAnC,KAAA,EAmBI8B,EAAO,GAAAyB,OAAID,EAAJ,KAAAC,OAAoByB,EAAQ7G,IAAMmC,GAnB7C,cAAA6B,EAAA5B,OAAA,SAAA4B,EAAAjC,MAAA,UAAAiC,EAAApC,KAAA,EAAAoC,EAAAiD,GAAAjD,EAAA,SAqBU,MAAfA,EAAAiD,GAAEC,SArBG,CAAAlD,EAAAnC,KAAA,eAsBD,IAAII,MAAMoD,EAAO8B,sBAtBhB,cAAAnD,EAAAiD,GAAA,yBAAAjD,EAAA3B,SAAA0B,EAAA,iCAAAxB,GAAA,OAAAyE,EAAAtE,MAAAxC,KAAAyC,YAAA,GA6BPyE,cA7BO,eAAAC,EAAAnB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhC,EA6BOyC,GA7BP,OAAApF,EAAA3B,EAAA4B,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EA8BEoC,EAAU,GAAAmB,OAAID,EAAJ,KAAAC,OAAoByB,EAAQ7G,KA9BxC,cAAAqE,EAAAjC,OAAA,SAAAiC,EAAAtC,MAAA,wBAAAsC,EAAAhC,SAAA+B,MAAA,gBAAA5B,GAAA,OAAA6E,EAAA3E,MAAAxC,KAAAyC,YAAA,ICpBF2E,EAAiB,SAAAC,GAAA,IAAE9G,EAAF8G,EAAE9G,GAAI+G,EAAND,EAAMC,SAAN,OAC5B3H,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBACZJ,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAIA,GAAK+G,KAINE,EAAmB,SAAAC,GAAA,IAAEH,EAAFG,EAAEH,SAAF,OAAiB3H,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAoBuH,iCCHtEI,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA0H,GAAA,QAAAK,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAA0B,IAAAY,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNC,MAAM,GAHVX,EAMEY,YAAc,kBAAMZ,EAAKa,SAAS,CAACF,MAAM,KAN3CX,EAQEc,aAAe,kBAAMd,EAAKa,SAAS,CAACF,MAAM,KAR5CX,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAA0B,EAAAC,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAA0B,EAAA,EAAAoB,IAAA,SAAAC,MAAA,WAWI,OACEpJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACmJ,GAADhD,OAAAiD,OAAA,CAAaT,KAAMxI,KAAKuI,MAAMC,KAAMU,SAAUlJ,KAAK2I,cAAkB3I,KAAKC,QAE1EN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qBAAqBa,SCrBXuI,EDqBmCnJ,KAAKyI,YCrB3B,SAACW,GAC3CA,EAAEC,kBAEFF,ODmBQxJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBCtBO,IAACoJ,MDM/BzB,EAAA,CAA0ClH,aAuB7B8I,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAzD,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAsJ,GAAA,QAAAI,EAAAjH,UAAAuF,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAAlH,UAAAkH,GAAA,OAAAF,EAAAzD,OAAAoC,EAAA,EAAApC,CAAAhG,MAAAwJ,EAAAxD,OAAAqC,EAAA,EAAArC,CAAAsD,IAAAhB,KAAA9F,MAAAgH,EAAA,CAAAxJ,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNqB,UAAU,EACVC,aAAa,GAJjBJ,EAOEP,SAAW,kBAAMO,EAAKxJ,MAAMiJ,YAP9BO,EASEK,kBATF9D,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KASsB,SAAAhF,IAAA,OAAAK,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClB8H,EAAKM,aADatI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGV8H,EAAKxJ,MAAM+J,cAHD,OAIhBP,EAAKQ,YAJWxI,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAMhBgI,EAAKS,gBANW,yBAAAzI,EAAAU,SAAAjB,EAAA,iBATtBuI,EAmBEM,WAAa,kBAAMN,EAAKf,SAAS,CAC/BkB,UAAU,EACVC,aAAa,KArBjBJ,EAwBES,cAAgB,kBAAMT,EAAKf,SAAS,CAClCkB,UAAU,EACVC,aAAa,KA1BjBJ,EA6BEQ,UAAY,WACVR,EAAKf,SAAS,CACZkB,UAAU,EACVC,aAAa,IAEfJ,EAAKxJ,MAAMgK,aAlCfR,EAAA,OAAAzD,OAAA4C,EAAA,EAAA5C,CAAAsD,EAAAC,GAAAvD,OAAA6C,EAAA,EAAA7C,CAAAsD,EAAA,EAAAR,IAAA,SAAAC,MAAA,WAsCI,OACEpJ,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAO3B,KAAMxI,KAAKC,MAAMuI,MACtB7I,EAAAC,EAAAC,cAACsK,GAAA,EAAMC,OAAP,KACGpK,KAAKC,MAAMoK,QAGd1K,EAAAC,EAAAC,cAACsK,GAAA,EAAMG,KAAP,KAGItK,KAAKuI,MAAMsB,aACXlK,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,oDAKDxK,KAAKC,MAAMqD,MAGd3D,EAAAC,EAAAC,cAACsK,GAAA,EAAMM,OAAP,KACE9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,YAAY5J,QAASZ,KAAKkJ,SAAUyB,SAAU3K,KAAKuI,MAAMqB,UAAzE,UACAjK,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,SAASzK,UAAU,UAAUa,QAASZ,KAAK8J,kBAAmBa,SAAU3K,KAAKuI,MAAMqB,UAAnG,gBA1DVN,EAAA,CAAiC9I,aErBpBoK,GAAgB,SAAAvD,GAAA,IAAEwD,EAAFxD,EAAEwD,SAAUC,EAAZzD,EAAYyD,iBAAZ,OAC3BnL,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,OAAK,GACVtL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,uBAGFF,EAAAC,EAAAC,cAAA,aAEEgL,EAASzE,IAAI,SAAAO,GAAO,OAClBhH,EAAAC,EAAAC,cAACqL,GAAD,CAAkBvE,QAASA,EAASmC,IAAKnC,EAAQ7G,GAAIgL,iBAAkBA,UAQpEK,GAAmB,SAAA1D,GAAiC,IAA/Bd,EAA+Bc,EAA/Bd,QAASmE,EAAsBrD,EAAtBqD,iBACnCM,EAAe,GAAAlG,OAAMmG,GAAN,KAAAnG,OAAuByB,EAAQ7G,IAC9CwL,EAAe,GAAApG,OAAMmG,GAAN,KAAAnG,OAAuByB,EAAQ7G,GAA/B,SAErB,OACEH,EAAAC,EAAAC,cAAA,UAEEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAI6K,GAAkBzE,EAAQ7G,KAEtCH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAI6K,GAAkBzE,EAAQ1D,KAAKsI,OAE3C5L,EAAAC,EAAAC,cAAA,UAAK8G,EAAQ1D,KAAKuI,aAClB7L,EAAAC,EAAAC,cAAA,UAEEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAI+K,EAAiBvL,UAAU,eACnCJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAGfJ,EAAAC,EAAAC,cAAC4L,GAAD,CAAqB9E,QAASA,EAASmE,iBAAkBA,OAM3DY,GAAsB,SAAAC,GAAA,IAAEhF,EAAFgF,EAAEhF,QAASmE,EAAXa,EAAWb,iBAAX,OAC1BnL,EAAAC,EAAAC,cAAC+L,GAAD,CACE3B,UAAWa,EACXd,YAAa,kBAAMnE,EAAgBqB,cAAcP,IAEjD0D,OACE1K,EAAAC,EAAAC,cAACsK,GAAA,EAAM0B,MAAP,uBAA4BlM,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAhB,IAA+B4G,EAAQ7G,KAGrEwD,KACE3D,EAAAC,EAAAC,cAAA,0DAC8CF,EAAAC,EAAAC,cAAA,cAAS8G,EAAQ1D,KAAKsI,MADpE,QCvDOO,GAAb,SAAAnE,GAAA,SAAAmE,IAAA,IAAAlE,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA8L,GAAA,QAAA/D,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAA8F,IAAAxD,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,GAFVV,EAIEkE,kBAAoB,kBAAMlE,EAAKmE,iBAJjCnE,EAMEoE,qBAAuB,kBAAMpE,EAAKqE,uBAAuBpH,UAN3D+C,EAQEmE,cARFhG,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAQkB,SAAAhF,IAAA,IAAA2J,EAAA,OAAAtJ,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEZmG,EAAKqE,uBAAyB9H,EAAgByB,EAAgBC,eAFlDrE,EAAAE,KAAA,EAGWkG,EAAKqE,uBAAuB3H,OAHvC,OAGNsG,EAHMpJ,EAAAI,KAKZgG,EAAKa,SAAS,CAACmC,aALHpJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAOZoG,EAAKa,SAAS,CACZmC,SAAU,KACVsB,YAAY,IATF,yBAAA1K,EAAAU,SAAAjB,EAAA,iBARlB2G,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAA8F,EAAAnE,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAA8F,EAAA,EAAAhD,IAAA,SAAAC,MAAA,WAwBI,OACEpJ,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KAEEzM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACE1M,EAAAC,EAAAC,cAACyM,EAAD,kBAGF3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,cACbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKhL,UAAU,2BACbJ,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMxH,UAAU,kBAAkBQ,GAAE,GAAA2E,OAAKmG,GAAL,SAApC,SAGJ1L,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,MAEKvM,KAAKuI,MAAMsC,WAAa7K,KAAKuI,MAAM4D,YACpCxM,EAAAC,EAAAC,cAAC2M,GAAD,OAICxM,KAAKuI,MAAMsC,UAAY7K,KAAKuI,MAAM4D,YACnCxM,EAAAC,EAAAC,cAAC4M,GAAD,MAIAzM,KAAKuI,MAAMsC,UAA2C,IAA/B7K,KAAKuI,MAAMsC,SAAS7C,QAC3CrI,EAAAC,EAAAC,cAAC6M,GAAD,MAIA1M,KAAKuI,MAAMsC,UAAY7K,KAAKuI,MAAMsC,SAAS7C,OAAS,GACpDrI,EAAAC,EAAAC,cAAC8M,GAAD,CAAe9B,SAAU7K,KAAKuI,MAAMsC,SAAUC,iBAAkB9K,KAAKgM,sBAzDjFF,EAAA,CAAkCtL,aAkErBoM,GAAmB,kBAC9BjN,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,oCAISgN,GAAa,kBACxBlN,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,4FAISiN,GAAqB,kBAChCnN,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,uICvFSuC,WAAA,SAAA1F,GAAA,IAAE9G,EAAF8G,EAAE9G,GAAIyM,EAAN3F,EAAM2F,KAAN,OACbrN,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAIA,EAAIR,UAAU,uCACtBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,sBADf,IACsCiN,KCInBC,8MAEnB1E,MAAQ,KAER2E,aAAe,SAACC,EAAQC,GACtB,IAAMzG,EAAUkB,EAAKwF,oBAAoBF,GACzCtF,EAAK5H,MAAMqN,SAAS3G,EAASyG,MAG/BC,oBAAsB,SAACF,GACrB,MAAO,CACL5B,KAAM4B,EAAO5B,KACbC,YAAa2B,EAAO3B,gBAIxB+B,oBAAsB,SAACC,GACrB,IAAMvK,EAAOuK,GAAwB,GACrC,MAAO,CACLjC,KAAMtI,EAAKsI,MAAQ,GACnBC,YAAavI,EAAKuI,aAAe,OAIrCiC,iBAAmBC,YAAaC,MAAM,CACpCpC,KAAMmC,YACHE,SAAS,oBACZpC,YAAakC,YACVE,SAAS,qGAGL,IAAAnE,EAAAzJ,KAEP,OACEL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAEbJ,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CACEC,cAAe9N,KAAKuN,oBAAoBvN,KAAKC,MAAM8N,aACnDT,SAAUtN,KAAKkN,aACfO,iBAAkBzN,KAAKyN,kBAEtB,SAAApG,GAOO,IANJ6F,EAMI7F,EANJ6F,aACAc,EAKI3G,EALJ2G,aACAC,EAII5G,EAJJ4G,WACAd,EAGI9F,EAHJ8F,OACAe,EAEI7G,EAFJ6G,QACAC,EACI9G,EADJ8G,OAGIC,EAAU,SAAA7C,GAAI,OAAI2C,EAAQ3C,KAAU4C,EAAO5C,IAC3C8C,EAAY,SAAA9C,GAAI,OAAI2C,EAAQ3C,IAAS4C,EAAO5C,IAElD,OACE5L,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAMhB,SAAUJ,EAAcqB,YAAU,GAGtC5O,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,qBACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,OAAOoD,KAAK,OAAO5F,MAAOoE,EAAO5B,KACtCqD,SAAUZ,EAAca,OAAQZ,EAChCa,YAAY,kCACZT,UAAWA,EAAU,QACrBD,QAASA,EAAQ,UAE/BzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBR,EAAO5C,SAOhB5L,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,4BACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,cAAcxC,MAAOoE,EAAO3B,YAAapL,GAAG,WAAW4O,KAAK,IACjEJ,SAAUZ,EAAca,OAAQZ,EAChCI,UAAWA,EAAU,eACrBD,QAASA,EAAQ,iBAC/BzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBR,EAAO3C,gBAMhB7L,EAAAC,EAAAC,cAACoP,GAAArP,EAAD,CAAeG,UAAU,gBACvBJ,EAAAC,EAAAC,cAACkN,GAAD,CAAYxM,GAAIkJ,EAAKxJ,MAAMiP,4BAA8B,IAC7ClC,KAAMvD,EAAKxJ,MAAMkP,aAE7BxP,EAAAC,EAAAC,cAACuP,GAAAxP,EAAD,CAAQ4K,QAAQ,UAAUmE,KAAK,SAAS5O,UAAU,uBAC/C0J,EAAKxJ,MAAMoP,wBA/FS7O,aCHpB8O,8MAEnB/G,MAAQ,CACNgH,eAAe,KA4BjBC,8DAA0B,SAAAtO,EAAO6M,EAAP1G,GAAA,IAAAoI,EAAA,OAAAlO,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAqB8N,EAArBpI,EAAqBoI,gBAC/B,GADUhO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIhBkE,EAAgBY,cAAcsH,GAJd,OAKtBlG,EAAK6H,yBALiBjO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAOtBoG,EAAK8H,0BAPiB,QAUxBF,GAAc,GAVU,yBAAAhO,EAAAU,SAAAjB,EAAA,2EAa1ByO,wBAA0B,kBAAM9H,EAAKa,SAAS,CAAC6G,eAAe,OAE9DG,uBAAyB,kBAAM7H,EAAK5H,MAAM2P,QAAQC,KAAKxE,6EAvCrD,OACE1L,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACE1M,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAI8K,IAApB,YACA1L,EAAAC,EAAAC,cAACyM,EAAD,aAGF3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KAAKpL,EAAAC,EAAAC,cAAA,kCAILG,KAAKuI,MAAMgH,eACX5P,EAAAC,EAAAC,cAACkQ,GAAD,MAGFpQ,EAAAC,EAAAC,cAACmQ,GAAD,CAAad,2BAA4B7D,GAC5B8D,WAAW,mBACX7B,SAAUtN,KAAKwP,wBACfH,WAAW,mBA1BW7O,aAkD9ByP,GAAwB,kBACnCtQ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,0EC1DSkF,GAAyB,SAAAQ,GAAS,OAAIA,EAAUjQ,MAAM2P,QAAQC,KAAxB,GAAA3K,OAAgCmG,eCE7E8E,GAAa,GAAAjL,OAAMH,EAAN,cAENI,GACY,wBAGnBiL,GAAiB,SAAA/I,GAA4B,IAA1BvH,EAA0BuH,EAA1BvH,GAAIuQ,EAAsBhJ,EAAtBgJ,WAAYpN,EAAUoE,EAAVpE,KACjCqN,EAAQtK,OAAAuK,GAAA,EAAAvK,CAAA,CACZlG,KACA0Q,UAAWlL,SAAS+K,IACjBpN,GAUL,OAPIqN,EAASG,OAASH,EAASG,MAAMC,OACnCJ,EAASG,MAAMC,MAAMC,QAAQ,SAAAC,GAG3B,OAFAA,EAAKjC,KAAOiC,EAAKC,gBACVD,EAAKC,SACLD,IAGJN,GAIHQ,GAAiB,SAAArJ,GAA+C,IAA7C3H,EAA6C2H,EAA7C3H,GAAI0Q,EAAyC/I,EAAzC+I,UAAWjF,EAA8B9D,EAA9B8D,KAAMC,EAAwB/D,EAAxB+D,YAAaiF,EAAWhJ,EAAXgJ,MACnDxO,EAAO,CACXnC,KACAuQ,WAAYG,EACZvN,KAAM,CACJsI,OACAC,gBAkBJ,OAdIiF,GAASA,EAAMC,OACjBzO,EAAKgB,KAAKwN,MAAVzK,OAAAuK,GAAA,EAAAvK,CAAA,GAAsByK,GACtBxO,EAAKgB,KAAKwN,MAAMC,MAAQzO,EAAKgB,KAAKwN,MAAMC,MAAMtK,IAAI,SAAAwK,GAChD,IAAMG,EAAQ/K,OAAAuK,GAAA,EAAAvK,CAAA,GACT4K,EADS,CAEZC,SAAUD,EAAKjC,OAGjB,cADOoC,EAASpC,KACToC,KAGT9O,EAAKgB,KAAKwN,MAAQ,GAGbxO,GAIM+O,GAAA,CACPC,sBADO,eAAAC,EAAAlL,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhF,EACeyF,GADf,IAAAR,EAAA,OAAA5E,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYS,EAAO,GAAA8C,OAAIiL,GAAJ,eAAAjL,OAA+ByB,EAAQ7G,KAF1D,cAELqG,EAFK1E,EAAAI,KAAAJ,EAAAS,OAAA,SAGJiE,EAASC,IAAIgK,KAHT,wBAAA3O,EAAAU,SAAAjB,MAAA,gBAAAsF,GAAA,OAAA0K,EAAA1O,MAAAxC,KAAAyC,YAAA,GAMP0O,YANO,eAAAC,EAAApL,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAxD,EAMK5C,GANL,IAAAwQ,EAAA,OAAA/O,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAOYS,EAAO,GAAA8C,OAAIiL,GAAJ,KAAAjL,OAAqBpF,IAPxC,cAOLwQ,EAPK3N,EAAAd,KAAAc,EAAAT,OAAA,SAQJkO,GAAeE,IARX,wBAAA3N,EAAAR,SAAAO,MAAA,gBAAAkE,GAAA,OAAAwK,EAAA5O,MAAAxC,KAAAyC,YAAA,GAWP4O,eAXO,eAAAC,EAAAtL,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAlD,EAWQsN,GAXR,IAAArO,EAAA,OAAAV,EAAA3B,EAAA4B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAYLM,EAAO6O,GAAeR,GAZjBpN,EAAAvB,KAAA,EAaEiB,EAASuN,GAAelO,GAb1B,cAAAiB,EAAAhB,OAAA,SAAAgB,EAAArB,MAAA,wBAAAqB,EAAAf,SAAAa,MAAA,gBAAAX,GAAA,OAAAiP,EAAA9O,MAAAxC,KAAAyC,YAAA,GAgBP8O,eAhBO,eAAAC,EAAAxL,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAArC,EAgBQyM,GAhBR,IAAArO,EAAA,OAAAV,EAAA3B,EAAA4B,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAkBHO,EAAO6O,GAAeR,GAC5BmB,QAAQC,KAAK,mCAAoCzP,GAnBxC6B,EAAAnC,KAAA,EAoBI8B,EAAO,GAAAyB,OAAIiL,GAAJ,KAAAjL,OAAqBoL,EAASxQ,IAAMmC,GApB/C,cAAA6B,EAAA5B,OAAA,SAAA4B,EAAAjC,MAAA,UAAAiC,EAAApC,KAAA,EAAAoC,EAAAiD,GAAAjD,EAAA,SAsBU,MAAfA,EAAAiD,GAAEC,SAtBG,CAAAlD,EAAAnC,KAAA,eAuBD,IAAII,MAAMoD,IAvBT,cAAArB,EAAAiD,GAAA,yBAAAjD,EAAA3B,SAAA0B,EAAA,iCAAAvB,GAAA,OAAAkP,EAAAhP,MAAAxC,KAAAyC,YAAA,GA8BPkP,eA9BO,eAAAC,EAAA5L,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhC,EA8BQoM,GA9BR,OAAA/O,EAAA3B,EAAA4B,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EA+BEoC,EAAU,GAAAmB,OAAIiL,GAAJ,KAAAjL,OAAqBoL,EAASxQ,KA/B1C,cAAAqE,EAAAjC,OAAA,SAAAiC,EAAAtC,MAAA,wBAAAsC,EAAAhC,SAAA+B,MAAA,gBAAArB,GAAA,OAAA+O,EAAApP,MAAAxC,KAAAyC,YAAA,GAkCPoP,cAlCO,eAAAC,EAAA9L,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAA6L,EAkCOzB,GAlCP,IAAAjP,EAAA,OAAAE,EAAA3B,EAAA4B,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,cAAAqQ,EAAArQ,KAAA,EAmCOiB,EAAQ,GAAAsC,OAAIiL,GAAJ,KAAAjL,OAAqBoL,EAASxQ,GAA9B,WAnCf,OAmCLuB,EAnCK2Q,EAAAnQ,KAoCX4P,QAAQQ,IAAI,0CAA2C5Q,GApC5C,wBAAA2Q,EAAA7P,SAAA4P,MAAA,gBAAAjP,GAAA,OAAAgP,EAAAtP,MAAAxC,KAAAyC,YAAA,uBClDMyP,8MAEnBzE,iBAAmBC,YAAaC,MAAM,CACpCpC,KAAMmC,YACHE,SAAS,oBACZpC,YAAakC,YACVE,SAAS,+BAIdV,mDAAe,SAAAhM,EAAOiM,EAAQC,GAAf,IAAAkD,EAAA,OAAA/O,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP2O,EAAWzI,EAAKsK,iBAAiBhF,GAD1B1L,EAAAE,KAAA,EAEPkG,EAAK5H,MAAMqN,SAASgD,EAAUlD,GAFvB,wBAAA3L,EAAAU,SAAAjB,gEAKfkR,iBAAmB,SAACC,GAClB,IAAMpP,EAAOoP,GAAqB,GAClC,MAAO,CACL9G,KAAMtI,EAAKsI,MAAQ,GACnBC,YAAavI,EAAKuI,aAAe,OAIrC2G,iBAAmB,SAAChF,GAClB,MAAO,CACL5B,KAAM4B,EAAO5B,KACbC,YAAa2B,EAAO3B,sFAKf,IAAA/B,EAAAzJ,KACP,OACEL,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CACEC,cAAe9N,KAAKoS,iBAAiBpS,KAAKC,MAAMqQ,UAChDhD,SAAUtN,KAAKkN,aACfO,iBAAkBzN,KAAKyN,kBAEtB,SAAAhG,GAOO,IANJyF,EAMIzF,EANJyF,aACAc,EAKIvG,EALJuG,aACAC,EAIIxG,EAJJwG,WACAd,EAGI1F,EAHJ0F,OACAe,EAEIzG,EAFJyG,QACAC,EACI1G,EADJ0G,OAGIC,EAAU,SAAA7C,GAAI,OAAI2C,EAAQ3C,KAAU4C,EAAO5C,IAC3C8C,EAAY,SAAA9C,GAAI,OAAI2C,EAAQ3C,IAAS4C,EAAO5C,IAElD,OACE5L,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAMhB,SAAUJ,EAAcqB,YAAU,GAItC5O,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,2BACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,OAAOoD,KAAK,OAAO5F,MAAOoE,EAAO5B,KACtCqD,SAAUZ,EAAca,OAAQZ,EAChCI,UAAWA,EAAU,QACrBD,QAASA,EAAQ,UAE/BzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBR,EAAO5C,SAOhB5L,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,6BACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,cAAcxC,MAAOoE,EAAO3B,YAAapL,GAAG,WAAW4O,KAAK,IACjEJ,SAAUZ,EAAca,OAAQZ,EAChCI,UAAWA,EAAU,eACrBD,QAASA,EAAQ,iBAC/BzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBR,EAAO3C,gBAOhB7L,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAevS,UAAU,gBACvBJ,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,YAAY5J,QAAS6I,EAAKxJ,MAAMiJ,UAAhD,UACAvJ,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQiE,KAAK,UAAUlF,EAAKxJ,MAAMoP,uBA1FR7O,aCE7B+R,GAAb,SAAA5K,GAAA,SAAA4K,IAAA,IAAA3K,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAuS,GAAA,QAAAxK,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAAuM,IAAAjK,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,CAACiK,WAAW,GAFtB3K,EAIE4K,wBAA0B,kBAAM5K,EAAKa,SAAS,CAAC8J,WAAW,KAJ5D3K,EAME6K,kBAAoB,WAClB7K,EAAK8K,0BACL9K,EAAK5H,MAAMyS,qBARf7K,EAWE8K,wBAA0B,kBAAM9K,EAAKa,SAAS,CAAC8J,WAAW,KAX5D3K,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAuM,EAAA5K,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAAuM,EAAA,EAAAzJ,IAAA,SAAAC,MAAA,WAcI,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+S,GAAD,CAAqBpK,KAAMxI,KAAKuI,MAAMiK,UAAWtJ,SAAUlJ,KAAK2S,wBAC3CnC,UAAWxQ,KAAKC,MAAMuQ,UAAWkC,kBAAmB1S,KAAK0S,oBAE9E/S,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ9J,QAASZ,KAAKyS,yBAAtB,qBAnBRF,EAAA,CAA0C/R,aA0B7BqS,GAAb,SAAAtJ,GAAA,SAAAsJ,IAAA,IAAArJ,EAAAC,EAAAzD,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA6S,GAAA,QAAAnJ,EAAAjH,UAAAuF,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAAlH,UAAAkH,GAAA,OAAAF,EAAAzD,OAAAoC,EAAA,EAAApC,CAAAhG,MAAAwJ,EAAAxD,OAAAqC,EAAA,EAAArC,CAAA6M,IAAAvK,KAAA9F,MAAAgH,EAAA,CAAAxJ,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNgH,eAAe,GAHnB9F,EAMEqJ,kBANF,eAAArL,EAAAzB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAMsB,SAAAhF,EAAOoP,EAAPjJ,GAAA,IAAAoI,EAAA,OAAAlO,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAkB8N,EAAlBpI,EAAkBoI,gBACtB,GADIhO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIVqP,GAAiBK,eAAjBrL,OAAAuK,GAAA,EAAAvK,CAAA,GACDsK,EADC,CAEJE,UAAW/G,EAAKxJ,MAAMuQ,aANR,OAQhB/G,EAAKiJ,oBARWjR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAUhBgQ,QAAQQ,IAARxQ,EAAAsF,IACA0C,EAAKsJ,0BAXW,QAclBtD,GAAc,GAdI,yBAAAhO,EAAAU,SAAAjB,EAAA,iBANtB,gBAAAsF,EAAAI,GAAA,OAAAa,EAAAjF,MAAAxC,KAAAyC,YAAA,GAAAgH,EAuBEiJ,kBAAoB,kBAAMjJ,EAAKxJ,MAAMyS,qBAvBvCjJ,EAyBEsJ,wBAA0B,kBAAMtJ,EAAKf,SAAS,CAAC6G,eAAe,KAzBhE9F,EAAA,OAAAzD,OAAA4C,EAAA,EAAA5C,CAAA6M,EAAAtJ,GAAAvD,OAAA6C,EAAA,EAAA7C,CAAA6M,EAAA,EAAA/J,IAAA,SAAAC,MAAA,WA4BI,OACEpJ,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAO3B,KAAMxI,KAAKC,MAAMuI,MACtB7I,EAAAC,EAAAC,cAACsK,GAAA,EAAMC,OAAP,KACEzK,EAAAC,EAAAC,cAACsK,GAAA,EAAM0B,MAAP,6BAGFlM,EAAAC,EAAAC,cAACsK,GAAA,EAAMG,KAAP,KAEItK,KAAKuI,MAAMgH,eACX5P,EAAAC,EAAAC,cAACmT,GAAD,MAIFrT,EAAAC,EAAAC,cAACoT,GAAD,CACE/J,SAAUlJ,KAAKC,MAAMiJ,SACrBmG,WAAW,SACX/B,SAAUtN,KAAK8S,0BA5C3BD,EAAA,CAAyCrS,aAoD5B0S,GAAsB,kBACjCvT,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,6DCrFA2I,GAAe,GAAAjO,OAAMH,EAAN,gBAGRqO,GAA4B,SAAA/L,GAAA,IAAEvH,EAAFuH,EAAEvH,GAAImD,EAANoE,EAAMpE,KAAN,MAAiB,CACxDnD,KACAyL,KAAMtI,EAAKsI,KACX8H,YAAapQ,EAAKoQ,YAClBC,MAAOrQ,EAAKqQ,MACZC,MAAOtQ,EAAKsQ,MACZC,qBAAsBvQ,EAAKuQ,uBAGdC,GAAA,CACPC,wBADO,eAAAC,EAAA3N,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhF,IAAA,IAAAiF,EAAA,OAAA5E,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYS,EAAQ+Q,IAFpB,cAELhN,EAFK1E,EAAAI,KAAAJ,EAAAS,OAAA,SAGJiE,EAASC,IAAIgN,KAHT,wBAAA3R,EAAAU,SAAAjB,MAAA,yBAAAyS,EAAAnR,MAAAxC,KAAAyC,YAAA,sFChBMmR,cAMnB,SAAAA,EAAYC,EAAYC,GAAa9N,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA4T,GACnC5T,KAAK+T,YAAYF,EAAYC,2DAGnBD,EAAYC,GACtB9T,KAAK6T,WAAaA,EAClB7T,KAAK8T,WAAaA,EAClB,IAAME,EAAuBF,EAAWG,0BACxCjU,KAAKkU,SAASF,EAAqBhU,KAAKmU,iBAChBC,IAApBpU,KAAKqU,YACPrU,KAAKkU,SAASlU,KAAKsU,gBAAgBC,6CAKrC,OAAOvU,KAAKqU,6CAIZ,OAAO,uCAIP,OAAOrU,KAAKsU,gBAAgB1G,iDAI5B,OAAO5N,KAAK6T,6CAIZ,OAAO7T,KAAKsU,gBAAgB/I,wCAI5B,OAAOvL,KAAK+I,uCAGLA,GACP/I,KAAK+I,MAAQA,0CAIb,OAAI/I,KAAKwU,cACAxU,KAAKyU,sDAMd,QAASzU,KAAK0U,wDAId,IAAMC,EAAY3U,KAAK0U,eAEvB,QAD2B1U,KAAK8T,WAAWc,wBACfD,GAAWN,kDAIvC,OAAOrU,KAAKsU,gBAAgBK,mBC7D1BE,qLAIF,GADmB7U,KAAKsU,gBACT1G,SAAU,CACvB,IAAM7E,EAAQ/I,KAAKqU,WACnB,OAAOtL,GAASA,EAAMf,OAAS,EAE/B,OAAO,SARW4L,IA6DTkB,GAAA,CACbnG,KAAM,OACNoG,mBAhDA,SAAAC,EAAY/U,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAgV,IACjBnN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAgP,GAAA1M,KAAAtI,KAAMC,KAUR2O,SAAW,SAACqG,GAAU,IACblM,EAASkM,EAAMC,OAAfnM,MACPlB,EAAKsN,WAAWjB,SAASnL,GACzBlB,EAAKa,SAAS,CAACK,WAdElB,EAiBnBgH,OAAS,kBAAMhH,EAAK5H,MAAMmV,kBAjBPvN,EAmBnBoE,qBAAuBpE,EAAKgH,OAjB1BhH,EAAKU,MAAQ,CACXQ,MAAOlB,EAAKsN,WAAWd,YAHRxM,0EAQjB,OAAO7H,KAAKC,MAAMoV,uCAclB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAEd7L,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcC,KAAK,OACL5F,MAAO/I,KAAKuI,MAAMQ,MAClB6F,SAAU5O,KAAK4O,SACf0G,QAAS,SAAAlM,GAAC,OAAIA,EAAEC,mBAChBwF,OAAQ7O,KAAK6O,OACbR,WAAYgH,EAAMjH,YAEhCzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBkF,EAAWR,YADd,wBAxCiB7S,aAmDvB+U,MAAOV,ICRMW,GAAA,CACb7G,KA1DW,SA2DX4G,wLAvDE,IAAMxM,EAAQ/I,KAAKqU,WACnB,OAAQrU,KAAKyV,cAAkC,kBAAV1M,IAAuB2M,MAAM3M,UAH5C6K,IA0DxBmB,mBAjDA,SAAAY,EAAY1V,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA2V,IACjB9N,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAA2P,GAAArN,KAAAtI,KAAMC,KAUR2O,SAAW,SAACqG,GAAU,IACblM,EAASkM,EAAMC,OAAfnM,MACPlB,EAAKsN,WAAWjB,SAAS5O,SAASyD,IAClClB,EAAKa,SAAS,CAACK,WAdElB,EAiBnBgH,OAAS,kBAAMhH,EAAK5H,MAAMmV,kBAjBPvN,EAmBnBoE,qBAAuBpE,EAAKgH,OAjB1BhH,EAAKU,MAAQ,CACXQ,MAAOlB,EAAKsN,WAAWd,YAHRxM,0EAQjB,OAAO7H,KAAKC,MAAMoV,uCAclB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAEd7L,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcC,KAAK,SACL5F,MAAK,GAAA7D,OAAKlF,KAAKuI,MAAMQ,OACrB6F,SAAU5O,KAAK4O,SACf0G,QAAS,SAAAlM,GAAC,OAAIA,EAAEC,mBAChBwF,OAAQ7O,KAAK6O,OACbR,WAAYgH,EAAMjH,YAEhCzO,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAQK,SAAd,CAAuBJ,KAAK,WACzBkF,EAAWR,YADd,wBAxCmB7S,cCuCZoV,GAAA,CACbjH,KAjDW,UAkDX4G,wLA9CE,OAAO,SAFgB3B,IAiDzBmB,mBAzCA,SAAAc,EAAY5V,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA6V,IACjBhO,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAA6P,GAAAvN,KAAAtI,KAAMC,KAUR2O,SAAW,SAACqG,GAAU,IACba,EAAWb,EAAMC,OAAjBY,QACPjO,EAAKsN,WAAWjB,SAAS4B,GACzBjO,EAAKa,SAAS,CAACK,MAAO+M,GAAUjO,EAAK5H,MAAMmV,iBAZ3CvN,EAAKU,MAAQ,CACXQ,MAAOlB,EAAKsN,WAAWd,YAHRxM,0EAQjB,OAAO7H,KAAKC,MAAMoV,uCAUlB,IACMxB,EADQ7T,KAAKmV,WACMb,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KACGoF,EAAWR,aAEd1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAEd7L,EAAAC,EAAAC,cAACyO,GAAA,EAAKyH,MAAN,CAAYpH,KAAK,WACLqH,MAAOnC,EAAWR,YAClByC,QAAS9V,KAAKuI,MAAMQ,MACpB6F,SAAU5O,KAAK4O,mBAlCPpO,cCPtByV,qLAGF,IAAMlN,EAAQ/I,KAAKqU,WAEnB,OAA0D,OAD1CrU,KAAKkW,aACNC,KAAK,SAAAC,GAAM,OAAIA,EAAOrN,QAAUA,yCAI/C,OAAO/I,KAAKsU,gBAAgB+B,eATIzC,IAgDrB0C,GAAA,CACb3H,KAAM,mBACNoG,kNA/BAwB,cAAe,SAACtB,GACd,IAAMlM,EAAQkM,EAAMC,OAAOnM,MAC3BlB,EAAKsN,WAAWjB,SAASnL,GACzBlB,EAAK5H,MAAMmV,4FANX,OAAOpV,KAAKC,MAAMoV,uCAUlB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAGd7L,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAActO,GAAG,SAAS2I,MAAOsM,EAAMhB,WAAYzF,SAAU5O,KAAKuW,eAE9DlB,EAAMa,aAAa9P,IAAI,SAAAgQ,GAAM,OAC3BzW,EAAAC,EAAAC,cAAA,UAAQiJ,IAAKsN,EAAOrN,MAAOA,MAAOqN,EAAOrN,OAAQqN,EAAOJ,kBA1BjCxV,aAsCnC+U,MAAOU,cClDHO,qLAEF,OAAO,SAFa5C,IAsCT6C,GAAA,CACb9H,KAAM,OACNoG,kNA/BA2B,mBAAqB,SAAC1J,GACpBnF,EAAKsN,WAAWjB,SAASlH,GACzBnF,EAAK5H,MAAMmV,4FAIX,OAAOpV,KAAKC,MAAMoV,uCAIlB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAId7L,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,CAAQC,eAAgB5W,KAAK0W,mBACrBG,aAAcxB,EAAMhB,WACpByC,KAAM,CAACC,SAAS,aA1BPvW,aAmCvB+U,MAAOiB,ICzCHQ,qLAGF,OAAOhX,KAAKkW,aAAalO,OAAS,uCAIlC,OAAOhI,KAAKqU,8CAGHgC,GACTrW,KAAKkU,SAASmC,+CAGIY,GAClBjX,KAAKkW,aACFgB,OAAOD,EAAO,qCAGTb,GACRpW,KAAKkW,aAAarG,KAAKuG,UApBMxC,IAwB3BuD,8MAMJC,eAAiB,SAACH,GAChBpP,EAAKsN,WAAWkC,oBAAoBJ,GACpCpP,EAAK5H,MAAMmV,oBAGbkC,YAAc,SAAClB,GACbvO,EAAKsN,WAAWoC,UAAUnB,GAC1BvO,EAAK5H,MAAMmV,4FAVX,OAAOpV,KAAKC,MAAMoV,uCAclB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAId7L,EAAAC,EAAAC,cAAC2X,GAAD,CAAcnB,QAAShB,EAAMa,aAAckB,eAAgBpX,KAAKoX,iBAChEzX,EAAAC,EAAAC,cAAC4X,GAAD,CAAWH,YAAatX,KAAKsX,sBA7BH9W,aAqC5BkX,GAAe,SAAArQ,GAAA,IAAEgP,EAAFhP,EAAEgP,QAASe,EAAX/P,EAAW+P,eAAX,OACnBzX,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAO2M,SAAO,EAACC,UAAQ,EAAC3M,OAAK,GAC3BtL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,aAGFF,EAAAC,EAAAC,cAAA,aAEEwW,EAAQjQ,IAAI,SAACgQ,EAAQa,GAAT,OACVtX,EAAAC,EAAAC,cAAA,MAAIiJ,IAAKsN,EAAOrN,OACdpJ,EAAAC,EAAAC,cAAA,UAAKuW,EAAOJ,OACZrW,EAAAC,EAAAC,cAAA,UAAKuW,EAAOrN,OACZpJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0BAA0Ba,QAAS,kBAAMwW,EAAeH,KACxEtX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,6BAUrB8X,8MAEJtP,MAAQ,CACNyN,MAAO,GACPjN,MAAO,MAGT+O,iBAAmB,kBAAMrO,EAAKlB,MAAMyN,MAAMhO,OAAS,GAAKyB,EAAKlB,MAAMQ,MAAMf,OAAS,KAElFsP,YAAc,WACZ7N,EAAKxJ,MAAMqX,YAAY,CACrBtB,MAAOvM,EAAKlB,MAAMyN,MAClBjN,MAAOU,EAAKlB,MAAMQ,QAEpBU,EAAKf,SAAS,CACZsN,MAAO,GACPjN,MAAO,8EAIF,IAAAgP,EAAA/X,KACP,OACEL,EAAAC,EAAAC,cAACyO,GAAA,EAAK/B,IAAN,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKiN,GAAG,KAAKC,GAAG,KACdtY,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,cACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,QAAQoD,KAAK,OAAO5F,MAAO/I,KAAKuI,MAAMyN,MAC3CpH,SAAU,SAACqG,GAAD,OAAW8C,EAAKrP,SAAS,CAACsN,MAAOf,EAAMC,OAAOnM,aAG1EpJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKiN,GAAG,KAAKC,GAAG,KACdtY,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,cACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,QAAQoD,KAAK,OAAO5F,MAAO/I,KAAKuI,MAAMQ,MAC3C6F,SAAU,SAACqG,GAAD,OAAW8C,EAAKrP,SAAS,CAACK,MAAOkM,EAAMC,OAAOnM,aAG1EpJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKiN,GAAG,KAAKjY,UAAU,IACrBJ,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ9J,QAASZ,KAAKsX,YAAa3M,UAAW3K,KAAK8X,oBAAnD,gBAtCctX,aA6CT0X,GAAA,CACbvJ,KAAM,gBACNoG,OAAQoC,GACR5B,MAAOyB,6DC3IImB,GAAb,SAAAxQ,GAAA,SAAAwQ,IAAA,IAAAvQ,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAmY,GAAA,QAAApQ,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAAmS,IAAA7P,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNgD,KAAM,GACN6M,QAAS,MAJbvQ,EAOE+G,SAAW,SAACqG,GACV,IACMoD,EADSpD,EAAMC,OACAmD,MACA,IAAjBA,EAAMrQ,QACRH,EAAKyQ,WAAWD,EAAM,KAX5BxQ,EAeEyQ,WAfF,eAAAjR,EAAArB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAee,SAAAhF,EAAOqX,GAAP,OAAAhX,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAsF,GAAAc,EAAApG,EAAA+W,GAEHD,EAAKhN,KAFF9J,EAAAE,KAAA,EAGMkG,EAAK4Q,gBAAgBF,GAH3B,OAAA9W,EAAAiX,GAAAjX,EAAAI,KAAAJ,EAAAkX,GAAA,CAETpN,KAFS9J,EAAA+W,GAGTJ,QAHS3W,EAAAiX,IAAAjX,EAAAsF,GACN2B,SADMJ,KAAA7G,EAAAsF,GAAAtF,EAAAkX,IAAA,wBAAAlX,EAAAU,SAAAjB,MAff,gBAAAsF,GAAA,OAAAa,EAAA7E,MAAAxC,KAAAyC,YAAA,GAAAoF,EAsBE4Q,gBAtBF,eAAAhR,EAAAzB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAsBoB,SAAAxD,EAAO6V,GAAP,IAAAK,EAAA,OAAArX,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAEViX,EAAS,IAAIC,WAFHlW,EAAAT,OAAA,SAGT,IAAIsC,QAAQ,SAACC,EAASC,GAC3BkU,EAAOE,iBAAiB,OAAQ,SAAC7D,GAAD,OAAWxQ,EAAQwQ,EAAMC,OAAO3Q,UAChEqU,EAAOG,WAAWR,MALJ,wBAAA5V,EAAAR,SAAAO,MAtBpB,gBAAAkE,GAAA,OAAAa,EAAAjF,MAAAxC,KAAAyC,YAAA,GAAAoF,EA+BEmR,SAAW,kBAAMnR,EAAK5H,MAAMgZ,aAAapR,EAAKU,MAAM6P,UA/BtDvQ,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAmS,EAAAxQ,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAAmS,EAAA,EAAArP,IAAA,SAAAC,MAAA,WAkCI,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,KACEvZ,EAAAC,EAAAC,cAACqZ,GAAA,EAAWC,QAAZ,KACExZ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAjB,cAEEJ,EAAAC,EAAAC,cAAA,SAAO8O,KAAK,OAAOyK,MAAO,CAACC,QAAS,QAASC,OAAO,MAAMC,UAAU,EAAO3K,SAAU5O,KAAK4O,aAI9FjP,EAAAC,EAAAC,cAAC2Z,GAAA,EAAD,CAAazQ,MAAO/I,KAAKuI,MAAMgD,KAAMuD,YAAY,uCAAuC2K,UAAQ,IAEhG9Z,EAAAC,EAAAC,cAACqZ,GAAA,EAAWQ,OAAZ,KACE/Z,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ0O,MAAO,CAACO,OAAQ,OAAQC,UAAW,eACnCjP,SAAiC,OAAvB3K,KAAKuI,MAAM6P,QAAkBxX,QAASZ,KAAKgZ,UAD7D,iBAhDZb,EAAA,CAAoC3X,aCIvBqZ,GAAb,SAAAlS,GAAA,SAAAkS,IAAA,IAAAjS,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA6Z,GAAA,QAAA9R,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAA6T,IAAAvR,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MACEM,MAAQ,CACNC,MAAM,GAFVX,EAKE2K,UAAY,kBAAM3K,EAAKa,SAAS,CAACF,MAAM,KALzCX,EAOEiS,UAAY,kBAAMjS,EAAKa,SAAS,CAACF,MAAM,KAPzCX,EASEkS,OAAS,SAACC,GACRnS,EAAK5H,MAAMga,aAAaD,GACxBnS,EAAKiS,aAXTjS,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAA6T,EAAAlS,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAA6T,EAAA,EAAA/Q,IAAA,SAAAC,MAAA,WAeI,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ3K,UAAU,YAAYa,QAASZ,KAAKwS,WAA5C,eACA7S,EAAAC,EAAAC,cAACqa,GAAD,CAAiB1R,KAAMxI,KAAKuI,MAAMC,KACjB2R,QAASna,KAAK8Z,UACdC,OAAQ/Z,KAAK+Z,OACbC,KAAMha,KAAKC,MAAM+Z,YArB1CH,EAAA,CAA8CrZ,aA2BxC4Z,eAEJ,SAAAA,EAAYna,GAAO,IAAAwJ,EAAA,OAAAzD,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAoa,IACjB3Q,EAAAzD,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAoU,GAAA9R,KAAAtI,KAAMC,KAMRoa,aAAe,SAACL,GAAD,OAAUvQ,EAAKf,SAAS,CAACsR,UAPrBvQ,EASnBsQ,OAAS,kBAAMtQ,EAAKxJ,MAAM8Z,OAAOtQ,EAAKlB,MAAMyR,OAP1CvQ,EAAKlB,MAAQ,CACXyR,KAAMvQ,EAAKxJ,MAAM+Z,MAHFvQ,wEAYjB,OACE9J,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAO3B,KAAMxI,KAAKC,MAAMuI,KAAM8R,KAAK,MACjC3a,EAAAC,EAAAC,cAACsK,GAAA,EAAMC,OAAP,iCAEAzK,EAAAC,EAAAC,cAACsK,GAAA,EAAMG,KAAP,KACE3K,EAAAC,EAAAC,cAAC0a,GAAD,CAAgBtB,aAAcjZ,KAAKqa,eAEnC1a,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2a,GAAD,CAAYR,KAAMha,KAAKuI,MAAMyR,KAAMK,aAAcra,KAAKqa,gBAGxD1a,EAAAC,EAAAC,cAACsK,GAAA,EAAMM,OAAP,KACE9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,YAAY5J,QAASZ,KAAKC,MAAMka,SAAhD,UACAxa,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ9J,QAASZ,KAAK+Z,QAAtB,iBA5BoBvZ,aAmCxBia,GAAa,SAAApT,GAAA,IAAEgT,EAAFhT,EAAEgT,aAAcL,EAAhB3S,EAAgB2S,KAAhB,OACjBra,EAAAC,EAAAC,cAAA,OAAKyV,QAAS,SAAAlM,GAEZA,EAAEC,oBAEF1J,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC6a,GAAA9a,EAAD,CACEwZ,MAAO,CAACuB,MAAO,QACf7L,YAAY,oBACZ8L,KAAK,aACLC,MAAM,UACNtP,KAAK,wBACLqD,SAAUyL,EACVS,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBlS,MAAOiR,EACPkB,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,OCtFXC,qLAEF,OAAO,oCAIP,OAAOxb,KAAKqU,2CAGN2F,GACNha,KAAKkU,SAAS8F,UAVMpG,ICWX6H,GATmB,SAACC,GAC/B,IAAMtV,EAAM,GAEZ,OADAsV,EAAW/K,QAAQ,SAAAgL,GAAS,OAAIvV,EAAIuV,EAAUhN,MAAQgN,IAC/CvV,EAM0BwV,CAAwB,CACzD9G,GACA+G,GACAC,GACAxF,GACAG,GACAyB,GD0Ba,CACbvJ,KAAM,OACNoG,kNA5BAkF,aAAe,SAACD,GACdnS,EAAKsN,WAAW4G,QAAQ/B,GACxBnS,EAAK5H,MAAMmV,4FAIX,OAAOpV,KAAKC,MAAMoV,uCAIlB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAGd7L,EAAAC,EAAAC,cAACmc,GAAD,CAA0BhC,KAAM3E,EAAM4G,UAAWhC,aAAcja,KAAKia,uBAvBnDzZ,aAgCvB+U,MAAOiG,8CE7BMU,GApBsB,SAAA7U,GAAA,IAAE8U,EAAF9U,EAAE8U,uBAAwBC,EAA1B/U,EAA0B+U,2BAA1B,OACnCzc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,OAAKwc,IAAKF,GAENC,EAA2BhW,IAAI,SAAAyN,GAC7B,OACElU,EAAAC,EAAAC,cAACyc,GAAA,EAAD,CAAMxT,IAAK+K,EAAWtI,KAChBgR,6BAA4BhZ,KAAKC,UAAUqQ,GAC3C9T,UAAU,QACdJ,EAAAC,EAAAC,cAACyc,GAAA,EAAKlS,OAAN,KAAcyJ,EAAWR,6BCTlBmJ,sNAEnBjU,MAAQ,CACNkU,UAAU,KAGZC,gBAAkB,kBAAM7U,EAAKa,SAAS,SAACH,GAAD,MAAY,CAACkU,UAAWlU,EAAMkU,qFAGlE,OACE9c,EAAAC,EAAAC,cAACyc,GAAA,EAAD,CAAMvc,UAAU,cACdJ,EAAAC,EAAAC,cAACyc,GAAA,EAAKlS,OAAN,KACEzK,EAAAC,EAAAC,cAAA,OAAKe,QAASZ,KAAK0c,iBACjB/c,EAAAC,EAAAC,cAAA,WAEIG,KAAKC,MAAM0c,SACXhd,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gCAGdC,KAAKC,MAAM2c,OAGdjd,EAAAC,EAAAC,cAAA,KAAGE,UAAS,qBAAAmF,OAAuBlF,KAAKuI,MAAMkU,SAAW,WAAa,iBAG1E9c,EAAAC,EAAAC,cAACgd,GAAA,EAAD,CAAUC,GAAI9c,KAAKuI,MAAMkU,UACvB9c,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyc,GAAA,EAAKhS,KAAN,KACGtK,KAAKC,MAAMqH,oBA5BmB9G,cCK9Buc,GAAA,SAAA1V,GAAiD,IAA/C2V,EAA+C3V,EAA/C2V,kBAAmBC,EAA4B5V,EAA5B4V,uBAC5Bnd,EAAKkd,EAAkBE,QACvBC,EAAqBH,EAAkBpI,wBACvCpB,EAAuBwJ,EAAkBI,6BAE/C,OACEzd,EAAAC,EAAAC,cAAA,WAEI2T,EAAqBpN,IAAI,SAACiX,GACxB,IAAMC,EAAqBC,GAAWF,EAAoB1O,MACpD7F,EAAG,GAAA5D,OAAMpF,EAAN,KAAAoF,OAAYmY,EAAoB9R,MACnCiS,EAAiBL,EAAmBE,EAAoB9R,MAE9D,GAAI+R,EAAoB,CACtB,IAAM9c,EAAY8c,EAAmBvI,OACrC,OACEpV,EAAAC,EAAAC,cAAA,OAAKiJ,IAAKA,GAEN0U,EAAeC,iBACf9d,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAD,CAAW6U,MAAOmI,EACPpI,eAAgB6H,IAC3Btd,EAAAC,EAAAC,cAAA,aAMR,OAAOF,EAAAC,EAAAC,cAAC6d,GAAD,CAAsB5U,IAAKA,EAAK6S,UAAW0B,QAQxDM,GAAuB,SAAAlW,GAAA,IAAEkU,EAAFlU,EAAEkU,UAAF,OAC3Bhc,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,6BAC6BmR,EAAUpQ,KADvC,cACwDoQ,EAAUhN,KADlE,OCtBaiP,GArBiB,SAAAvW,GAAyE,IAAvE8U,EAAuE9U,EAAvE8U,uBAAwB0B,EAA+CxW,EAA/CwW,kBAAmBZ,EAA4B5V,EAA5B4V,uBAC3E,OACEtd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKwc,IAAKF,EAAwB/C,MAAO,CAAC0E,UAAW,UAEjDD,EAAkBE,iBAAiB3X,IAAI,SAAA4X,GACrC,OACEre,EAAAC,EAAAC,cAACoe,GAAD,CACE7B,2BAA4ByB,EAAkBK,gCAC9CpV,IAAKkV,EAAiBd,QACtBc,iBAAkBA,EAClBf,uBAAwBA,SAWlCkB,GAA0B,SAAA1W,GAAA,IAAEuW,EAAFvW,EAAEuW,iBAAkBf,EAApBxV,EAAoBwV,uBAApB,OAC9Btd,EAAAC,EAAAC,cAAA,OAAKue,gBAAeJ,EAAiBd,SACnCvd,EAAAC,EAAAC,cAACwe,GAAD,CAAiBzB,MAAOoB,EAAiBM,+BAA+BjL,YACvDsJ,SAAUqB,EAAiB5P,WAC1CzO,EAAAC,EAAAC,cAACkd,GAAD,CACEC,kBAAmBgB,EACnBf,uBAAwBA,OC9BnBsB,GAAb,WAOE,SAAAA,EAAYC,EAA2BC,GAAO,IAAA5W,EAAA7H,KAAAgG,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAue,GAAAve,KAyC9CoO,QAAU,kBAA6F,MAAvFpI,OAAOmH,OAAOtF,EAAK+M,yBAAyBuB,KAAK,SAAAwF,GAAS,OAAKA,EAAUvN,aAxCvFpO,KAAK+T,YAAYyK,EAA2BC,GARhD,OAAAzY,OAAA6C,EAAA,EAAA7C,CAAAuY,EAAA,EAAAzV,IAAA,cAAAC,MAAA,SAWcyV,EAA2BC,GACrCze,KAAK0e,6BAA6BF,GAClCC,EAAQF,EAAiBI,wBAAwBF,EAAOD,GACxDxe,KAAKF,GAAK2e,EAAM3e,GAChBE,KAAK2O,KAAO8P,EAAM9P,KAClB3O,KAAKgU,qBAAuByK,EAAM/C,WAClC1b,KAAK4e,sBAAsBC,GAAsB7e,KAAMwe,EAA0BhL,yBAjBrF,CAAA1K,IAAA,+BAAAC,MAAA,SAoB+ByV,GAC3Bxe,KAAKwe,0BAA4BA,IArBrC,CAAA1V,IAAA,+BAAAC,MAAA,WAiCI,OAAO/I,KAAKwe,4BAjChB,CAAA1V,IAAA,YAAAC,MAAA,WAqCI,MAAO,CACLjJ,GAAIE,KAAKF,GACT6O,KAAM3O,KAAK2O,KACX+M,WAAYoD,GAAoB9e,KAAK4U,4BAxC3C,CAAA9L,IAAA,QAAAC,MAAA,WA6CI,OAAO/I,KAAKF,KA7ChB,CAAAgJ,IAAA,wBAAAC,MAAA,WAmDI,OAAO/I,KAAKmd,qBAnDhB,CAAArU,IAAA,wBAAAC,MAAA,SAsDwBoU,GACpBnd,KAAKmd,mBAAqBA,IAvD9B,CAAArU,IAAA,6BAAAC,MAAA,WA2DI,OAAO/I,KAAKse,+BAA+B9K,uBA3D/C,CAAA1K,IAAA,0BAAAC,MAAA,WAgEI,OAAO/I,KAAKgU,wBAhEhB,EAAAlL,IAAA,0BAAAC,MAAA,SAwBkC0V,EAAOD,GAKrC,OAJAC,EAAQA,GAAS,IACX3e,GAAK2e,EAAM3e,IAAMif,OACvBN,EAAM9P,KAAO8P,EAAM9P,MAAQ6P,EAA0BjT,KACrDkT,EAAM/C,WAAa+C,EAAM/C,YAAc,GAChC+C,MA7BXF,EAAA,GCQMS,GAAmB,SAACC,EAASC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAkB5X,SAASU,OAAQmX,IACrD,GAAID,EAAkB5X,SAAS6X,KAAOF,EACpC,OAAOE,EAIX,OAAQ,GAIWC,eAMnB,SAAAA,EAAYnf,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAof,IACjBvX,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAoZ,GAAA9W,KAAAtI,KAAMC,KALRof,cAAgB,KAIGxX,EAHnByX,UAAY,KAGOzX,EAFnB0X,MAAQ,KAEW1X,EAMnBkE,kBAAoB,kBAAMlE,EAAK2X,gBANZ3X,EAQnB2X,aAAe,WACb,IAAMC,EAAa5X,EAAKwX,cAAcK,QAChCC,EAAS9X,EAAKyX,UAAUI,QACxBE,EAAa,CAACH,EAAYE,GAEhC9X,EAAK0X,MAAQM,KAAQD,EAAY,CAC/BE,KAAM,SAACC,EAAIC,GAAL,OAAgBA,IAAWP,GAGjCQ,QAAS,SAACF,EAAI7K,GAAL,OAAgBA,IAAWyK,GAGpCO,eAAe,IAIjBrY,EAAK0X,MAAMY,GAAG,OAAQ,SAACC,EAASlL,EAAQ8K,EAAQf,GAC9C,GAAI/J,IAAWyK,EAAQ,CACrB,IAAMU,EAAerB,GAAiBC,EAASU,GACzBK,IAAWP,EAG/B5X,EAAKyY,aAAaF,EAASC,GAE3BxY,EAAK0Y,cAAcH,EAASC,MAKlCxY,EAAK0X,MAAMY,GAAG,SAAU,SAACC,EAASI,GAGhCA,EAAUC,YAAYL,GAEtB,IAAMtgB,EAAKsgB,EAAQM,aAAa,iBAChC7Y,EAAKsN,WAAWwL,gBAAgB7gB,GAChC+H,EAAK5H,MAAMmV,oBA5CIvN,EAgDnByY,aAAe,SAACF,EAASQ,GACvB/Y,EAAKgZ,gDAAgDD,GAErD,IAAME,EAAgBjZ,EAAKkZ,sCAAsCH,GAC3DI,EAAWnZ,EAAKoZ,oCAAoCb,GAE1DvY,EAAKqZ,iCAAiCF,EAAUF,GAIhDV,EAAQe,WAAWC,YAAYhB,IA1DdvY,EA6DnBgZ,gDAAkD,SAACD,GACjD,GAAyB,IAArBA,GAA0BA,EAAmB/Y,EAAKkW,iBAAiB/V,OACrE,MAAM,IAAIjG,MAAM,4DA/DD8F,EAmEnBkZ,sCAAwC,SAACM,GAAD,OAAkC,IAAjBA,EAAqBxZ,EAAKkW,iBAAiB/V,OAASqZ,EAAc,GAnExGxZ,EAqEnBoZ,oCAAsC,SAACb,GACrC,IAAM5B,EAA4Bjb,KAAK+d,MAAMlB,EAAQM,aAAa,+BAClE,OAAO,IAAInC,GAAiBC,IAvEX3W,EA0EnBqZ,iCAAmC,SAACF,EAAUF,GAC5CjZ,EAAKsN,WAAWoM,SAASP,EAAUF,GACnCjZ,EAAK2Z,eA5EY3Z,EA+EnB0Y,cAAgB,SAACH,EAASQ,GACxB/Y,EAAKgZ,gDAAgDD,GAErD,IAAMa,EAAc5Z,EAAK6Z,mBAAmBtB,GACtCuB,EAAc9Z,EAAK+Z,mCAAmChB,GAE5D/Y,EAAKsN,WAAW0M,WAAWJ,EAAaE,GACxC9Z,EAAK5H,MAAMmV,kBAtFMvN,EA0FnB6Z,mBAAqB,SAACtB,GACpB,IAAMT,EAAS9X,EAAKsN,WAAW2M,YACzBhiB,EAAKsgB,EAAQM,aAAa,iBAEhC,OAAOf,EAAOoC,UAAU,SAAAtD,GAAK,OAAIA,EAAM3e,KAAOA,KA9F7B+H,EAiGnB+Z,mCAAqC,SAACP,GAAD,OAAkC,IAAjBA,EAAqBxZ,EAAKkW,iBAAiB/V,OAAS,EAAIqZ,EAAc,GA/F1HxZ,EAAKwX,cAAgB2C,IAAMC,YAC3Bpa,EAAKyX,UAAY0C,IAAMC,YAHNpa,0EAoGjB,OAAO7H,KAAKC,MAAM4d,2DAIlB,OAAO7d,KAAKmV,WAAW4I,kDAIvB,OACEpe,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKiN,GAAG,IAAIC,GAAG,KACbtY,EAAAC,EAAAC,cAACqiB,GAAD,CAA8B9F,2BAA4Bpc,KAAKmV,WAAW+I,gCAC5C/B,uBAAwBnc,KAAKqf,iBAG7D1f,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKiN,GAAG,IAAIC,GAAG,KACbtY,EAAAC,EAAAC,cAACsiB,GAAD,CAAyBhG,uBAAwBnc,KAAKsf,UAC7BzB,kBAAmB7d,KAAKmV,WACxB8H,uBAAwBjd,KAAKC,MAAMmV,0BA5H5B5U,aChB7B4hB,GAAb,SAAAza,GAWE,SAAAya,EAAYniB,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAoiB,IACjBva,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAoc,GAAA9Z,KAAAtI,KAAMC,KALRsI,MAAQ,CACNC,MAAM,GAGWX,EA0BnB2K,UAAY,kBAAM3K,EAAKa,SAAS,CAACF,MAAM,KA1BpBX,EA4BnBiS,UAAY,kBAAMjS,EAAKa,SAAS,CAACF,MAAM,KA5BpBX,EAiCnBkS,OAAS,WACPlS,EAAKsN,WAAWkN,eAAexa,EAAKya,yBACpCza,EAAK5H,MAAMmV,iBACXvN,EAAKiS,aAlCLjS,EAAKya,wBAA0Bza,EAAK0a,yBAFnB1a,EAXrB,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAoc,EAAAza,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAAoc,EAAA,EAAAtZ,IAAA,qBAAAC,MAAA,SAsBqByZ,EAAWC,EAAWC,GACpC1iB,KAAKC,MAAM0iB,qBACZ3iB,KAAKsiB,wBAA0BtiB,KAAKuiB,yBACpCviB,KAAKC,MAAMmV,oBAzBjB,CAAAtM,IAAA,WAAAC,MAAA,WA8BI,OAAO/I,KAAKC,MAAM2iB,cA9BtB,CAAA9Z,IAAA,yBAAAC,MAAA,WAkCI,OAAO/I,KAAKmV,WAAW0N,iBAAiBC,UAlC5C,CAAAha,IAAA,SAAAC,MAAA,WAmDI,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkjB,GAAD,CAAyBva,KAAMxI,KAAKuI,MAAMC,KACjBqV,kBAAmB7d,KAAKsiB,wBACxBnI,QAASna,KAAK8Z,UACdC,OAAQ/Z,KAAK+Z,SAEtCpa,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ3K,UAAU,YAAYa,QAASZ,KAAKwS,WAAYxS,KAAKC,MAAM+iB,iBA1D3EZ,EAAA,CAAsD5hB,aAiEhDyiB,oLAGK,IAAAxZ,EAAAzJ,KAAAkjB,EACsCljB,KAAKC,MAA3C4d,EADAqF,EACArF,kBAAmB9D,EADnBmJ,EACmBnJ,OAAQI,EAD3B+I,EAC2B/I,QAElC,OACExa,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAO3B,KAAMxI,KAAKC,MAAMuI,KAAM8R,KAAK,MACjC3a,EAAAC,EAAAC,cAACsK,GAAA,EAAMC,OAAP,+BAEAzK,EAAAC,EAAAC,cAACsK,GAAA,EAAMG,KAAP,KACE3K,EAAAC,EAAAC,cAACsjB,GAAD,CAActF,kBAAmBA,EACnBzI,eAAgB,WAGd3L,EAAK+X,kBAIvB7hB,EAAAC,EAAAC,cAACsK,GAAA,EAAMM,OAAP,KACE9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,YAAY5J,QAASuZ,GAArC,UACAxa,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ9J,QAASmZ,EAAQpP,UAAWkT,EAAkBzP,WAAtD,iBArB4B5N,aCrEzB4iB,GAAb,WAKE,SAAAA,EAAYhH,EAA4BuD,GAAS3Z,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAojB,GAC/CpjB,KAAK+T,YAAYqI,EAA4BuD,GANjD,OAAA3Z,OAAA6C,EAAA,EAAA7C,CAAAod,EAAA,EAAAta,IAAA,cAAAC,MAAA,SAScqT,EAA4BuD,GAAQ,IAAA9X,EAAA7H,KAC9CA,KAAKqjB,8BAA8BjH,GACnCpc,KAAKsjB,eAAe3D,EAAOvZ,IAAI,SAAAqY,GAAK,OAAI,IAAIF,GAC1C1W,EAAKyW,6BAA6BG,EAAM9P,MACxC8P,QAbN,CAAA3V,IAAA,gCAAAC,MAAA,SAiBgCqT,GAC5Bpc,KAAKoc,2BAA6BA,IAlBtC,CAAAtT,IAAA,+BAAAC,MAAA,SAqB+Bwa,GAC3B,OAAOvjB,KAAKke,gCAAgC/H,KAAK,SAAAtC,GAAU,OAAIA,EAAWtI,OAASgY,MAtBvF,CAAAza,IAAA,gCAAAC,MAAA,WA0BI,OAAO/I,KAAKoc,6BA1BhB,CAAAtT,IAAA,iBAAAC,MAAA,WA8BI,OAAO/I,KAAKwjB,cA9BhB,CAAA1a,IAAA,iBAAAC,MAAA,SAiCiBya,GACbxjB,KAAKwjB,YAAcA,IAlCvB,CAAA1a,IAAA,QAAAC,MAAA,WAsCI,OAAO,IAAIqa,EAAkBpjB,KAAKke,gCAAiCle,KAAKyjB,eAtC5E,CAAA3a,IAAA,YAAAC,MAAA,WA0CI,OAAO/I,KAAK+d,iBAAiB3X,IAAI,SAAAsd,GAAW,OAAIA,EAAYD,gBA1ChE,CAAA3a,IAAA,gBAAAC,MAAA,WA8CI,OAAwC,IAAjC/I,KAAK+d,iBAAiB/V,SA9CjC,CAAAc,IAAA,WAAAC,MAAA,SAiDWiY,EAAUF,GACjB9gB,KAAK+d,iBAAiB7G,OAAO4J,EAAe,EAAGE,KAlDnD,CAAAlY,IAAA,aAAAC,MAAA,SAqDanJ,EAAG+jB,GACZ,IAAMhE,EAAS3f,KAAK+d,iBACd6F,EAAOjE,EAAO/f,GACpB+f,EAAO/f,GAAK+f,EAAOgE,GACnBhE,EAAOgE,GAAKC,IAzDhB,CAAA9a,IAAA,kBAAAC,MAAA,SA4DkBjJ,GACd,IAAM6f,EAAS3f,KAAK+d,iBACd9G,EAAQ0I,EAAOoC,UAAU,SAAAtD,GAAK,OAAIA,EAAM3e,KAAOA,IACjDmX,GAAS,GACX0I,EAAOzI,OAAOD,EAAO,KAhE3B,CAAAnO,IAAA,UAAAC,MAAA,WAqEI,OAAgE,MAAzD/I,KAAK+d,iBAAiB5H,KAAK,SAAAsI,GAAK,OAAKA,EAAMrQ,gBArEtDgV,EAAA,GCCaS,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA7d,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA6jB,GAAA7d,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAA6d,GAAArhB,MAAAxC,KAAAyC,YAAA,OAAAuD,OAAA4C,EAAA,EAAA5C,CAAA6d,EAAAC,GAAA9d,OAAA6C,EAAA,EAAA7C,CAAA6d,EAAA,EAAA/a,IAAA,cAAAC,MAAA,SAIc8K,EAAY4K,GACtBzY,OAAA+d,GAAA,EAAA/d,QAAAqC,EAAA,EAAArC,CAAA6d,EAAAG,WAAA,cAAAhkB,MAAAsI,KAAAtI,KAAkB6T,EAAY4K,GAC9Bze,KAAKqiB,eAAe,IAAIe,GACtBvP,EAAWuI,2BACXpc,KAAKikB,YAAYtE,WARvB,CAAA7W,IAAA,YAAAC,MAAA,WAaI,MAAO,CACL4W,OAAQ3f,KAAK6iB,iBAAiBY,eAdpC,CAAA3a,IAAA,YAAAC,MAAA,WAmBI,OAAO/I,KAAKqU,aAnBhB,CAAAvL,IAAA,iBAAAC,MAAA,WAuBI,OAAO/I,KAAKkkB,cAvBhB,CAAApb,IAAA,iBAAAC,MAAA,SA0BiBmb,GACblkB,KAAKkkB,YAAcA,IA3BvB,CAAApb,IAAA,UAAAC,MAAA,WA+BI,OAAO/I,KAAK6iB,iBAAiBzU,YA/BjC,CAAAtF,IAAA,gBAAAC,MAAA,WAmCI,OAAO/I,KAAK6iB,iBAAiBsB,oBAnCjCN,EAAA,CAAmCjQ,ICC7BwQ,GAAsB,GAAAlf,OAAMH,EAAN,gBAEfsf,GAAyB,SAAAhd,GAAA,IAAEvH,EAAFuH,EAAEvH,GAAImD,EAANoE,EAAMpE,KAAN,OAAA+C,OAAAuK,GAAA,EAAAvK,CAAA,CACpClG,MACGmD,IAGUqhB,GAAA,CACPC,qBADO,eAAAC,EAAAxe,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhF,IAAA,IAAAiF,EAAA,OAAA5E,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEYS,EAAQgiB,IAFpB,cAELje,EAFK1E,EAAAI,KAAAJ,EAAAS,OAAA,SAGJiE,EAASC,IAAIie,KAHT,wBAAA5iB,EAAAU,SAAAjB,MAAA,yBAAAsjB,EAAAhiB,MAAAxC,KAAAyC,YAAA,ICJTgiB,GAA0B,IAEnBC,GAAb,SAAA/c,GAAA,SAAA+c,IAAA,IAAA9c,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA0kB,GAAA,QAAA3c,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAA0e,IAAApc,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNC,MAAM,GAHVX,EAME8c,OAAS,kBAAM9c,EAAKa,SAAS,CAACF,MAAM,KANtCX,EAQE+c,OAAS,SAACC,GAAD,OAAgBhd,EAAKa,SAAS,CAACF,MAAM,GAAQ,kBAAMsc,WAAWD,EAAYJ,OARrF5c,EAUEkd,0BAA4B,SAACb,GAAD,OAAiBrc,EAAK+c,OAAO,WACvD/c,EAAKmd,iBAAiB3C,eAAe6B,GACrCrc,EAAK5H,MAAMmV,oBAZfvN,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAA0e,EAAA/c,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAA0e,EAAA,EAAA5b,IAAA,gCAAAC,MAAA,WAiBI,OAAO/I,KAAKglB,iBAAiBnC,iBAAiB3E,kCAjBlD,CAAApV,IAAA,iBAAAC,MAAA,WAqBI,OAAO/I,KAAKC,MAAM2iB,cArBtB,CAAA9Z,IAAA,SAAAC,MAAA,WAyBI,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAColB,GAAD,CAAyBzc,KAAMxI,KAAKuI,MAAMC,KACjBoc,OAAQ5kB,KAAK4kB,OACbG,0BAA2B/kB,KAAK+kB,0BAChC3I,2BAA4Bpc,KAAKke,kCAE1Dve,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,UAAU5J,QAASZ,KAAK2kB,OAAQ5kB,UAAU,kBAA1D,+BAhCR2kB,EAAA,CAAsDlkB,aAsCzC0kB,GAAb,SAAA3b,GAAA,SAAA2b,IAAA,IAAA1b,EAAAC,EAAAzD,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAklB,GAAA,QAAAxb,EAAAjH,UAAAuF,OAAAC,EAAA,IAAAC,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,GAAAlH,UAAAkH,GAAA,OAAAF,EAAAzD,OAAAoC,EAAA,EAAApC,CAAAhG,MAAAwJ,EAAAxD,OAAAqC,EAAA,EAAArC,CAAAkf,IAAA5c,KAAA9F,MAAAgH,EAAA,CAAAxJ,MAAAkF,OAAA+C,MAEEM,MAAQ,CACN4c,UAAW,KACXhZ,YAAY,GAJhB1C,EAOEsC,kBAAoB,kBAAMtC,EAAK2b,kBAPjC3b,EASEwC,qBAAuB,kBAAMxC,EAAK4b,wBAAwBvgB,UAT5D2E,EAWE2b,eAXFpf,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAWmB,SAAAhF,IAAA,IAAAikB,EAAA,OAAA5jB,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf8H,EAAKf,SAAS,CAACyD,YAAY,IADZ1K,EAAAC,KAAA,EAGb+H,EAAK4b,wBAA0BjhB,EAAgBkgB,GAAyBC,wBAH3D9iB,EAAAE,KAAA,EAIW8H,EAAK4b,wBAAwB9gB,OAJxC,OAIP4gB,EAJO1jB,EAAAI,KAKb4H,EAAKf,SAAS,CAACyc,cALF1jB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAObgI,EAAKf,SAAS,CAACyD,YAAY,IAPd,yBAAA1K,EAAAU,SAAAjB,EAAA,iBAXnBuI,EAsBE6b,iBAAmB,SAACC,GAClB,IAAMrB,EAAc,IAAId,GAAkB3Z,EAAKxJ,MAAMmc,2BAA4BmJ,EAAS5F,QAC1FlW,EAAKxJ,MAAM8kB,0BAA0Bb,IAxBzCza,EAAA,OAAAzD,OAAA4C,EAAA,EAAA5C,CAAAkf,EAAA3b,GAAAvD,OAAA6C,EAAA,EAAA7C,CAAAkf,EAAA,EAAApc,IAAA,SAAAC,MAAA,WA4BI,OACEpJ,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAO3B,KAAMxI,KAAKC,MAAMuI,KAAMoc,OAAQ5kB,KAAKC,MAAM2kB,OAAQtK,KAAK,MAC5D3a,EAAAC,EAAAC,cAACsK,GAAA,EAAMC,OAAP,+BAEAzK,EAAAC,EAAAC,cAACsK,GAAA,EAAMG,KAAP,KAEItK,KAAKuI,MAAM4D,YACXxM,EAAAC,EAAAC,cAAC2lB,GAAD,OAICxlB,KAAKuI,MAAM4c,YAAcnlB,KAAKuI,MAAM4D,YACrCxM,EAAAC,EAAAC,cAAC4lB,GAAD,MAIAzlB,KAAKuI,MAAM4c,WACXxlB,EAAAC,EAAAC,cAAC6lB,GAAD,CAAcP,UAAWnlB,KAAKuI,MAAM4c,UAAWG,iBAAkBtlB,KAAKslB,oBAI1E3lB,EAAAC,EAAAC,cAACsK,GAAA,EAAMM,OAAP,KACE9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQF,QAAQ,YAAY5J,QAASZ,KAAKC,MAAM2kB,QAAhD,gBAlDVM,EAAA,CAA6C1kB,aAyDvCmlB,GAAsB,kBAC1BhmB,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,uDAKIob,GAAoB,kBACxBjmB,EAAAC,EAAAC,cAAA,wBAGIgmB,GAAe,SAAApe,GAAA,IAAE0d,EAAF1d,EAAE0d,UAAWG,EAAb7d,EAAa6d,iBAAb,OACnB3lB,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KAEI4Y,EAAU/e,IAAI,SAAAmf,GAAQ,OACpB5lB,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAK+a,GAAI,GAAIC,GAAI,EAAGjd,IAAKyc,EAASzlB,GAAIC,UAAU,QAC9CJ,EAAAC,EAAAC,cAACyc,GAAA,EAAD,KACE3c,EAAAC,EAAAC,cAACyc,GAAA,EAAKlS,OAAN,KAAcmb,EAASha,MACvB5L,EAAAC,EAAAC,cAACyc,GAAA,EAAKhS,KAAN,KAAYib,EAAS/Z,aACrB7L,EAAAC,EAAAC,cAACyc,GAAA,EAAK7R,OAAN,KACE9K,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQ9J,QAAS,kBAAM0kB,EAAiBC,KAAxC,kBCrEDS,GAAA,CACbrX,KAAM,WACN4G,MAAOsO,GACP9O,kNAhDAxM,MAAQ,CACNoa,oBAAoB,KAOtBsD,2BAA6B,WAC3Bpe,EAAK5H,MAAMmV,iBACXvN,EAAKa,SAAS,CAACia,oBAAoB,OAGrCuD,yBAA2B,WACzBre,EAAK5H,MAAMmV,iBACXvN,EAAKa,SAAS,CAACia,oBAAoB,+EAVnC,OAAO3iB,KAAKC,MAAMoV,uCAclB,IAAMA,EAAQrV,KAAKmV,WACbtB,EAAawB,EAAMf,gBAEzB,OACE3U,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,KAAaoF,EAAWR,aACxB1T,EAAAC,EAAAC,cAACyO,GAAA,EAAKwG,KAAN,CAAW/U,UAAU,cAClB8T,EAAWrI,aAIZ6J,EAAM8O,iBACNxkB,EAAAC,EAAAC,cAACsmB,GAAD,CAAkCvD,YAAavN,EACbD,eAAgBpV,KAAKimB,6BAGzDtmB,EAAAC,EAAAC,cAACumB,GAAD,CAAkCxD,YAAavN,EACbD,eAAgBpV,KAAKkmB,yBACrBlD,WAAY3N,EAAM8O,gBAAkB,sBAAwB,qBAC5DxB,mBAAoB3iB,KAAKuI,MAAMoa,6BAxC5CniB,cCLhB+c,GAAUvX,OAAAuK,GAAA,EAAAvK,CAAA,GAClByV,GADkBzV,OAAAqgB,GAAA,EAAArgB,CAAA,GAKpBggB,GAASrX,KAAOqX,KCDNnH,GAAwB,SAAC/K,EAAYN,GAChD,IAAM2J,EAAqB,GAM3B,OALA3J,EAAqB7C,QAAQ,SAAAkD,GAC3B,IAAMtI,EAAOsI,EAAWtI,KAClBgK,EDAoB,SAAC5G,GAC7B,IAAMgN,EAAY4B,GAAW5O,GAC7B,IAAKgN,EACH,MAAM,IAAI5Z,MAAJ,8BAAAmD,OAAwCyJ,EAAxC,MAER,OAAOgN,EAAUpG,MCLD+Q,CAAezS,EAAWlF,MACxCwO,EAAmB5R,GAAQ,IAAIgK,EAAM1B,EAAYC,KAE5CqJ,GAOI2B,GAAsB,SAAC3B,GAClC,IAAMzB,EAAa,GAEnB,OADA1V,OAAOugB,KAAKpJ,GAAoBxM,QAAQ,SAAApF,GAAI,OAAImQ,EAAWnQ,GAAQ4R,EAAmB5R,GAAMkY,cACrF/H,GChBI8K,WAAb,SAAAC,GAAA,SAAAD,IAAA,IAAA5e,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAwmB,GAAA,QAAAze,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAAwgB,IAAAle,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAgCEmG,QAAU,kBAA6F,MAAvFpI,OAAOmH,OAAOtF,EAAK+M,yBAAyBuB,KAAK,SAAAwF,GAAS,OAAKA,EAAUvN,aAhC3FvG,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAwgB,EAAAC,GAAAzgB,OAAA6C,EAAA,EAAA7C,CAAAwgB,EAAA,EAAA1d,IAAA,cAAAC,MAAA,SAMc0V,EAAOiI,GACZjI,EAAM3e,IACTE,KAAK2mB,uBAAuBlI,GAE9BzY,OAAA+d,GAAA,EAAA/d,QAAAqC,EAAA,EAAArC,CAAAwgB,EAAAxC,WAAA,cAAAhkB,MAAAsI,KAAAtI,KAAkBye,EAAOiI,GACzB1mB,KAAK4mB,oBAAsBF,EAAOG,uBAAuBpI,EAAM9P,MAC/D3O,KAAKgU,qBAAuByK,EAAM/C,YAAc,GAChD1b,KAAK4e,sBAAsBC,GAAsB7e,KAAMA,KAAKod,iCAbhE,CAAAtU,IAAA,yBAAAC,MAAA,SAgByB0V,GACrBA,EAAM3e,GAAKif,OACXN,EAAMnL,MAAQmL,EAAMnL,MAAMlN,IAAI,SAAA0gB,GAAI,OAAA9gB,OAAAuK,GAAA,EAAAvK,CAAA,GAC7B8gB,EAD6B,CAEhChnB,GAAIif,aApBV,CAAAjW,IAAA,YAAAC,MAAA,WAyBI,OAAO/C,OAAAuK,GAAA,EAAAvK,CAAA,GAAAA,OAAA+d,GAAA,EAAA/d,QAAAqC,EAAA,EAAArC,CAAAwgB,EAAAxC,WAAA,YAAAhkB,MAAAsI,KAAAtI,MAAA,CAEL2O,KAAM3O,KAAK4mB,oBAAoBrb,KAC/BmQ,WAAYoD,GAAoB9e,KAAK4U,6BA5B3C,CAAA9L,IAAA,QAAAC,MAAA,WAmCI,OAAO/I,KAAKF,KAnChB,CAAAgJ,IAAA,wBAAAC,MAAA,WAuCI,OAAO/I,KAAKmd,qBAvChB,CAAArU,IAAA,wBAAAC,MAAA,SA0CwBoU,GACpBnd,KAAKmd,mBAAqBA,IA3C9B,CAAArU,IAAA,6BAAAC,MAAA,WA+CI,OAAO/I,KAAK4mB,oBAAoBpT,uBA/CpC,CAAA1K,IAAA,0BAAAC,MAAA,WAmDI,OAAO/I,KAAKgU,yBAnDhBwS,EAAA,CAAoCO,sBAuDvBC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAhhB,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAgnB,GAAAhhB,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAghB,GAAAxkB,MAAAxC,KAAAyC,YAAA,OAAAuD,OAAA4C,EAAA,EAAA5C,CAAAghB,EAAAC,GAAAjhB,OAAA6C,EAAA,EAAA7C,CAAAghB,EAAA,EAAAle,IAAA,SAAAC,MAAA,WAGI,OACEpJ,EAAAC,EAAAC,cAACyc,GAAA,EAAD,CAAMvc,UAAU,SACdJ,EAAAC,EAAAC,cAACyc,GAAA,EAAKlS,OAAN,KACEzK,EAAAC,EAAAC,cAACqnB,GAAA,WAAD,CAAY3b,KAAK,KAAKqF,KAAM5Q,KAAKC,MAAM2Q,OAEvCjR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZC,KAAKC,MAAM2Q,KAAKrF,MAGnB5L,EAAAC,EAAAC,cAACqnB,GAAA,WAAD,CAAY3b,KAAK,MAAMqF,KAAM5Q,KAAKC,MAAM2Q,QAIrC5Q,KAAKC,MAAM2Q,KAAKxC,WACjBzO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uCAlB3BinB,EAAA,CAAqCG,sBA2BxBC,GAAb,SAAAC,GAIE,SAAAD,EAAYE,GAAW,IAAA7d,EAAA,OAAAzD,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAonB,IACrB3d,EAAAzD,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAohB,GAAA9e,KAAAtI,KAAA,GAAAkF,OAASoiB,EAAT,cACKC,aAAaD,GAFG7d,EAJzB,OAAAzD,OAAA4C,EAAA,EAAA5C,CAAAohB,EAAAC,GAAArhB,OAAA6C,EAAA,EAAA7C,CAAAohB,EAAA,EAAAte,IAAA,eAAAC,MAAA,SASeue,GACXtnB,KAAKsnB,UAAYA,IAVrB,CAAAxe,IAAA,UAAAC,MAAA,WAcI,OAAO/I,KAAKwnB,iBAdhB,CAAA1e,IAAA,eAAAC,MAAA,WAkBI,OAAO/I,KAAKsnB,YAlBhB,CAAAxe,IAAA,iBAAAC,MAAA,WAsBI,OAAO,IAAIyd,KAtBf,CAAA1d,IAAA,sBAAAC,MAAA,SAyBsB0e,EAAe7W,GACjC,OAAOoR,IAAMniB,cAAcmnB,GAAiB,CAC1CpW,OACA6W,sBA5BNL,EAAA,CAAsCM,uBCvFjBC,+LAECtS,EAAOuS,EAAQC,EAAUC,GAC3C,OACEnoB,EAAAC,EAAAC,cAAA,QACEE,UAAW8nB,EAAWD,EAAOG,IAAI,mBAAqB,GACtDC,YAAa3S,EAAMsF,MACnBsN,OAAO,QACPC,EAAGJ,WARmCK,uBCIxCC,eAIJ,SAAAA,EAAYC,GAAsB,IAAAxgB,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAooB,IAChCvgB,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAoiB,GAAA9f,KAAAtI,QACKsoB,wBAAwBD,GAC7BxgB,EAAK0gB,mBAH2B1gB,uFAMVwgB,GACtBroB,KAAKqoB,qBAAuBA,6CAGX,IAAA5e,EAAAzJ,KACjBA,KAAKwoB,0BACLxoB,KAAKyoB,oBAAoB,IAAId,IAC7B3nB,KAAK0T,0BAA0B/C,QAAQ,SAAAiW,GAAmB,OAAInd,EAAKif,oBACjE,IAAItB,GAAiBR,EAAoBrb,2DAK3C,OAAOvL,KAAKqoB,oEAGSf,GACrB,OAAOtnB,KAAK0T,0BAA0ByC,KAAK,SAAAtC,GAAU,OAAIA,EAAWtI,OAAS+b,WA3B/CqB,kBAgCbC,eAInB,SAAAA,EAAY3oB,GAAO,IAAA8X,EAAA,OAAA/R,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA4oB,IACjB7Q,EAAA/R,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAA4iB,GAAAtgB,KAAAtI,KAAMC,KAKR4oB,UAAY,WACV9Q,EAAK2O,OAAS,IAAI0B,GAAoBrQ,EAAK9X,MAAMooB,sBACjDtQ,EAAK2O,OAAOoC,gBAAgB/Q,EAAK5C,YACjC4C,EAAK2O,OAAO2B,qBAAuBtQ,EAAK9X,MAAMooB,sBAT7BtQ,EAYnBgR,iBAAmB,SAACtY,GACdA,GAASA,EAAM3Q,KACjBiY,EAAK5C,WAAW6T,mBAAmBvY,EAAOsH,EAAK2O,QAC/C3O,EAAKkR,sCAfUlR,EAmBnBkR,kCAAoC,WAClCjjB,OAAOmH,OAAO4K,EAAK5C,WAAW+T,YAC3BvY,QAAQoH,EAAKoR,sBArBCpR,EAwBnBqR,OAAS,SAACnU,GACJ8C,EAAKsR,iCAAiCpU,IACxC8C,EAAKuR,mBAAmBrU,IA1BT8C,EA8BnBsR,iCAAmC,SAACpU,GAAD,QAAa8C,EAAKwR,gCAAgCtU,IA9BlE8C,EAgCnBuR,mBAAqB,SAACrU,GACpB,IAAM2R,EAAsB7O,EAAKwR,gCAAgCtU,GAC3DuU,EAAWzR,EAAK0R,iBAAiBxU,GACvC8C,EAAK2R,+BAA+B9C,EAAqB4C,IAnCxCzR,EAsCnBwR,gCAAkC,SAACtU,GAAD,OAAW1R,KAAK+d,MAAMrM,EAAM0U,aAAaC,QAAQ,yBAtChE7R,EAwCnB0R,iBAAmB,SAACxU,GAAD,OAAW8C,EAAK2O,OAAOmD,sBAAsB5U,IAxC7C8C,EA0CnB2R,+BAAiC,SAAC9C,EAAqB4C,GACrD,IAAM5Y,EAAOmH,EAAK+R,wBAAwBlD,EAAqB4C,GAC/DzR,EAAKgS,eAAenZ,EAAMgW,IA5CT7O,EA+CnB+R,wBAA0B,SAAClD,EAAqB4C,GAC9C,IAAM5Y,EAAO,IAAI4V,GAWjB,OATA5V,EAAKmD,YAAY,CACfxI,KAAMqb,EAAoBvT,YAC1B1E,KAAMiY,EAAoBrb,KAC1B+H,MAAOsT,EAAoBtT,MAC3BC,MAAOqT,EAAoBrT,MAE3ByW,EAAGR,EAASQ,EACZC,EAAGT,EAASS,GACXlS,EAAK2O,QACD9V,GA3DUmH,EA+DnBgS,eAAiB,SAACnZ,GAChBmH,EAAKoR,oBAAoBvY,GACzBmH,EAAK5C,WAAW+U,QAAQtZ,GACxBmH,EAAKyJ,eAlEYzJ,EAqEnBoR,oBAAsB,SAACvY,GAAD,OAAUA,EAAKuZ,YAAY,CAC/CC,iBAAkBrS,EAAKsS,sBACvBC,cAAevS,EAAKsS,yBAvEHtS,EA0EnBsS,sBAAwB,WACtB,IAAME,EAAgBxS,EAAKyS,mBAE3B,GAA6B,IAAzBD,EAAcviB,OAAc,CAC9B,IAAM4I,EAAO2Z,EAAc,GAC3BxS,EAAK9X,MAAMwqB,eAAe7Z,QAE1BmH,EAAK9X,MAAMwqB,eAAe,OAjFX1S,EAsFnByS,iBAAmB,kBAAMzS,EAAK5C,WAAWuV,iBAAiB,SAtFvC3S,EAwFnB5C,SAAW,kBAAM4C,EAAK9X,MAAM0qB,YAtF1B5S,EAAK8Q,YACL9Q,EAAKgR,iBAAiB9oB,EAAM2qB,cAHX7S,wEA2FjB,OACEpY,EAAAC,EAAAC,cAAA,OAAKupB,OAAQppB,KAAKopB,OACbyB,WAAY,SAAA5V,GAAK,OAAIA,EAAM6V,kBAC3B/qB,UAAU,4BACbJ,EAAAC,EAAAC,cAACqnB,GAAA,cAAD,CAAeO,cAAeznB,KAAK0mB,iBAnGMlmB,aCXlCuqB,GAxBuB,SAAA1jB,GAAA,IAAEghB,EAAFhhB,EAAEghB,qBAAF,OACpC1oB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KAEIsd,EAAqBjiB,IAAI,SAAAiiB,GAAoB,OAC3C1oB,EAAAC,EAAAC,cAACyc,GAAA,EAAD,CACEvc,UAAU,OACV+I,IAAKuf,EAAqBvoB,GAC1BkrB,WAAS,EACTC,YAAa,SAAAhW,GAAK,OAAIA,EAAM0U,aAAauB,QAAQ,sBAAuB3nB,KAAKC,UAAU6kB,MACvF1oB,EAAAC,EAAAC,cAACyc,GAAA,EAAKlS,OAAN,CAAarK,UAAU,2CACpBsoB,EAAqBhV,oBCCvB8X,WAhBO,SAAA9jB,GAAA,IAAE+jB,EAAF/jB,EAAE+jB,SAAUzgB,EAAZtD,EAAYsD,SAAU/J,EAAtByG,EAAsBzG,QAAS0G,EAA/BD,EAA+BC,SAAUmX,EAAzCpX,EAAyCoX,MAAzC,OACpB9e,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAQC,SAAUA,GAAYygB,EAAUxqB,QAASA,EAASb,UAAW0e,EAAQ,YAAc,IAEvF2M,GACAzrB,EAAAC,EAAAC,cAACwrB,GAAA,EAAD,CACEjrB,GAAG,OACHkrB,UAAU,SACVhR,KAAK,KACLiR,KAAK,SACLC,cAAY,SAGhB7rB,EAAAC,EAAAC,cAAA,gBAAQyH,MCHSmkB,eAEnB,SAAAA,EAAYxrB,GAAO,IAAA4H,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAyrB,IACjB5jB,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAylB,GAAAnjB,KAAAtI,KAAMC,KAYRyrB,aAAe,SAACzW,GAAD,OAAWpN,EAAKa,SAAS,CACtC6C,KAAM0J,EAAMC,OAAOnM,SAdFlB,EAiBnB8jB,oBAAsB,SAAC1W,GAAD,OAAWpN,EAAKa,SAAS,CAC7C8C,YAAayJ,EAAMC,OAAOnM,SAlBTlB,EAqBnBgH,OAAS,kBAAMhH,EAAK5H,MAAM2rB,OAAX5lB,OAAAuK,GAAA,EAAAvK,CAAA,GACV6B,EAAK5H,MAAMqQ,SADD,CAEb/E,KAAM1D,EAAKU,MAAMgD,MAAQ1D,EAAK5H,MAAMsL,KACpCC,YAAa3D,EAAKU,MAAMiD,aAAe3D,EAAK5H,MAAMuL,gBAxBjC3D,EA2BnBgkB,YA3BmB7lB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KA2BL,SAAAhF,IAAA,OAAAK,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAGVmG,EAAKa,SAAS,CAACojB,kBAAkB,EAAMC,oBAAoB,IAHjDtqB,EAAAE,KAAA,EAIJqP,GAAiBa,cAAchK,EAAK5H,MAAMqQ,UAJtC,OAAA7O,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAMVoG,EAAKa,SAAS,CAACqjB,oBAAoB,IANzB,OAQZlkB,EAAKa,SAAS,CAACojB,kBAAkB,IARrB,yBAAArqB,EAAAU,SAAAjB,EAAA,iBA3BK,IAAA8qB,EAEW/rB,EAAMqQ,SAA3B/E,EAFUygB,EAEVzgB,KAAMC,EAFIwgB,EAEJxgB,YAFI,OAGjB3D,EAAKU,MAAQ,CACXgD,OACAC,cAEAsgB,kBAAkB,EAClBC,oBAAoB,GARLlkB,wEAuCjB,OACElI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,mCAIJF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,aACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,OAAOoD,KAAK,OAAO5F,MAAO/I,KAAKuI,MAAMgD,KAAMqD,SAAU5O,KAAK0rB,aAC/D7c,OAAQ7O,KAAK6O,YAKjClP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACyO,GAAA,EAAKE,MAAN,KACE7O,EAAAC,EAAAC,cAACyO,GAAA,EAAKG,MAAN,oBACA9O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,QAAN,CAAcnD,KAAK,cAAcoD,KAAK,OAAOvO,GAAG,WAAW2I,MAAO/I,KAAKuI,MAAMiD,YAC/DoD,SAAU5O,KAAK2rB,oBAAqB9c,OAAQ7O,KAAK6O,aAMvElP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAEXC,KAAKuI,MAAMwjB,oBACXpsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gCADf,2BAMJJ,EAAAC,EAAAC,cAACosB,GAAD,CAAerrB,QAASZ,KAAK6rB,YAAapN,OAAO,EAClC2M,SAAUprB,KAAKuI,MAAMujB,kBADpC,gBAjF6CtrB,aCNxC0rB,WAAA,SAAA7kB,GAAA,IAAEuJ,EAAFvJ,EAAEuJ,KAAMub,EAAR9kB,EAAQ8kB,cAAR,OACbxsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACbJ,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,gCAIJF,EAAAC,EAAAC,cAACkd,GAAD,CACEC,kBAAmBpM,EACnBqM,uBAAwBkP,OCdTC,8MAEnBhe,QAAU,kBAAiE,MAA3DpI,OAAOmH,OAAOtF,EAAK6I,OAAOyF,KAAK,SAAAvF,GAAI,OAAKA,EAAKxC,0CAFfie,iBCK3BC,8MAEnB/jB,MAAQ,CACNgkB,YAAa,QAGfxgB,kBAAoB,kBAAMlE,EAAK2kB,sBAE/BA,sCAAmB,SAAAtrB,IAAA,IAAAsP,EAAA/I,EAAAxE,EAAA,OAAA1B,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACV6O,EAAa3I,EAAK5H,MAAMqQ,SAAxBE,UADU/O,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMkE,EAAgBQ,WAAWmK,GAHjC,OAAA/I,EAAAhG,EAAAI,KAGRoB,EAHQwE,EAGRxE,KACP4E,EAAKa,SAAS,CACZ6jB,YAAatpB,EAAKsI,OALL9J,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,kCAAAA,EAAAU,SAAAjB,EAAA,yFAYV,IAAAurB,EACmBzsB,KAAKC,MAAMqQ,SAA9B/E,EADAkhB,EACAlhB,KAAMiF,EADNic,EACMjc,UACb,OACE7Q,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACE1M,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAI8K,IAApB,YACA1L,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAE,GAAA2E,OAAKmG,GAAL,KAAAnG,OAAsBsL,IAEpCxQ,KAAKuI,MAAMgkB,aACX5sB,EAAAC,EAAAC,cAACwrB,GAAA,EAAD,CAASC,UAAU,OAAOhR,KAAK,QAGnC3a,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAE,GAAA2E,OAAKmG,GAAL,KAAAnG,OAAsBsL,IAAxC,aACA7Q,EAAAC,EAAAC,cAACyM,EAAD,KAAmBf,YAjCmB/K,aCe1CksB,GAAwB,kBAC5B/sB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACbJ,EAAAC,EAAAC,cAACwrB,GAAA,EAAD,CAASC,UAAU,SAAS9gB,QAAQ,cAIlCmiB,8MAEJhC,WAAa,IAAIyB,KAEjB7jB,MAAQ,CACNqkB,aAAc,QAGhBnC,eAAiB,SAACmC,GAAD,OAAkB/kB,EAAKa,SAAS,CAACkkB,oBAElDC,cAAgB,WACdhlB,EAAKilB,mBACLjlB,EAAK5H,MAAM8Z,YAGb+S,iBAAmB,SAACxc,GACbA,IACHA,EAAWzI,EAAK5H,MAAMqQ,UAExBA,EAASG,MAAQ5I,EAAK8iB,WAAWoC,mBACjCllB,EAAK5H,MAAM6sB,iBAAiBxc,4EAGrB,IAAA7G,EAAAzJ,KAAAkjB,EACkCljB,KAAKC,MAAvCqQ,EADA4S,EACA5S,SAAU+X,EADVnF,EACUmF,qBAEjB,OACE1oB,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAWrM,UAAU,wCACnBJ,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,eAGbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAK+a,GAAI,EAAG/lB,UAAU,oBACpBJ,EAAAC,EAAAC,cAACmtB,GAAD,CAA+B3E,qBAAsBA,KAIvD1oB,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAK+a,GAAI,EAAG/lB,UAAU,0BACpBJ,EAAAC,EAAAC,cAACotB,GAAD,CACErC,aAActa,EAASG,MACvBka,WAAY3qB,KAAK2qB,WACjBtC,qBAAsBA,EACtBoC,eAAgBzqB,KAAKyqB,iBAEvB9qB,EAAAC,EAAAC,cAACqtB,GAAD,CAAoB5c,SAAUA,IAE9B3Q,EAAAC,EAAAC,cAACstB,GAAD,CAAiB7c,SAAUA,EACVqa,WAAY3qB,KAAK2qB,WACjBkC,cAAe7sB,KAAK6sB,cACpBzB,SAAUprB,KAAKC,MAAMmrB,YAIxCzrB,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAK+a,GAAI,EAAG/lB,UAAU,kCAElBC,KAAKuI,MAAMqkB,aACTjtB,EAAAC,EAAAC,cAACqsB,GAAD,CAA0Btb,KAAM5Q,KAAKuI,MAAMqkB,aACjBT,cAAe,kBAAM1iB,EAAK+X,iBAEpD7hB,EAAAC,EAAAC,cAACutB,GAAD,CAA2B9c,SAAUtQ,KAAKC,MAAMqQ,SACrBsb,OAAQ5rB,KAAK8sB,6BA3DrBtsB,aAqE7B6sB,GAAkB,SAAAhmB,GAAqD,IAAnDiJ,EAAmDjJ,EAAnDiJ,SAAUqa,EAAyCtjB,EAAzCsjB,WAAYS,EAA6B/jB,EAA7B+jB,SAAUyB,EAAmBxlB,EAAnBwlB,cAClDze,EAAUuc,EAAWvc,UAC3B,OACEzO,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQX,UAAU,mEAChBJ,EAAAC,EAAAC,cAACkN,GAAD,CAAYC,KAAK,oBAAoBzM,GAAE,GAAA2E,OAAKmG,GAAL,KAAAnG,OAAsBoL,EAASE,aAEtE7Q,EAAAC,EAAAC,cAAA,YAEKuO,GACDzO,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gCADf,mCAMJJ,EAAAC,EAAAC,cAACosB,GAAD,CAAethB,UAAWyD,GAAWgd,EAAUA,SAAUA,EAAUxqB,QAASisB,GAA5E,UAKSS,GAvGQ,SAACrtB,GACtB,OAAKA,EAAMqQ,UAAarQ,EAAMooB,qBAGrB1oB,EAAAC,EAAAC,cAAC0tB,GAAyBttB,GAF1BN,EAAAC,EAAAC,cAAC2tB,GAAD,OCVUC,8MAInBllB,MAAQ,CACN8f,qBAAsB,KACtBqF,sBAAsB,KAGxB3hB,kBAAoB,kBAAMlE,EAAK8lB,qBAE/B1hB,qBAAuB,kBAAMpE,EAAK+lB,yBAAyB9oB,yNAIvD9E,KAAK4tB,yBAA2BxpB,EAAgBypB,GAA4Bna,oCACzC1T,KAAK4tB,yBAAyBrpB,cAA3D8jB,SACNroB,KAAK0I,SAAS,CACZ2f,uBACAqF,sBAAsB,oDAGxB1tB,KAAK0I,SAAS,CAACglB,sBAAsB,gJAMvC,OACE/tB,EAAAC,EAAAC,cAACiuB,GAAD9nB,OAAAiD,OAAA,GAAqBjJ,KAAKC,MAA1B,CACiBooB,qBAAsBroB,KAAKuI,MAAM8f,+BA9BS7nB,aCG5CutB,8MAInBxlB,MAAQ,CACN+H,SAAU,KACV8a,UAAU,EACV4C,WAAW,KAGbjiB,kBAAoB,kBAAMlE,EAAKomB,mBAE/BhiB,qBAAuB,kBAAMpE,EAAKqmB,uBAAuBppB,YAczDgoB,iBAAmB,SAACxc,GAAD,OAAczI,EAAKa,SAAS,CAAC4H,gBAEhDyJ,4BAAS,SAAA7Y,IAAA,OAAAK,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPkG,EAAKa,SAAS,CAAC0iB,UAAU,IADlB3pB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGCqP,GAAiBO,eAAe1J,EAAKU,MAAM+H,UAH5C,OAAA7O,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAKLoG,EAAKa,SAAS,CAACslB,WAAW,IALrB,OAOPnmB,EAAKa,SAAS,CAAC0iB,UAAU,IAPlB,yBAAA3pB,EAAAU,SAAAjB,EAAA,uNAbDpB,EAAKE,KAAKC,MAAMkuB,MAAM/sB,OAAOtB,YAGjCE,KAAKkuB,uBAAyB9pB,EAAgB4M,GAAiBG,YAAYrR,aACpDE,KAAKkuB,uBAAuB3pB,cAA7C+L,SACNtQ,KAAK0I,SAAS,CAAC4H,yMAmBjB,OAAO3Q,EAAAC,EAAAC,cAACuuB,GAAD,CACL9d,SAAUtQ,KAAKuI,MAAM+H,SACrBwc,iBAAkB9sB,KAAK8sB,iBACvB/S,OAAQ/Z,KAAK+Z,OACbqR,SAAUprB,KAAKuI,MAAM6iB,SACrB4C,UAAWhuB,KAAKuI,MAAMylB,mBA5CkBxtB,aCD/B6tB,GAAA,kBACb1uB,EAAAC,EAAAC,cAACyuB,EAAA,EAAD,KACE3uB,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OALe,aAKf,QAA2BspB,OAAK,EAACte,UAAW6d,OCD9CU,GAAiB,SAAApnB,GAAA,IAAEqnB,EAAFrnB,EAAEqnB,UAAWC,EAAbtnB,EAAasnB,kBAAb,OAC5BhvB,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,OAAK,GACVtL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,uBAGFF,EAAAC,EAAAC,cAAA,aAEE6uB,EAAUtoB,IAAI,SAAAkK,GAAQ,OACpB3Q,EAAAC,EAAAC,cAAC+uB,GAAD,CAAmBte,SAAUA,EACVxH,IAAKwH,EAASxQ,GACd6uB,kBAAmBA,SAOxCE,GAAoB,SAAApnB,GAAmC,IAAjC6I,EAAiC7I,EAAjC6I,SAAUqe,EAAuBlnB,EAAvBknB,kBAC9BG,EAAgB,GAAA5pB,OD3BM,aC2BN,KAAAA,OAAwBoL,EAASxQ,IAEvD,OACEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAIuuB,GAAmBxe,EAASxQ,KAExCH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAIuuB,GAAmBxe,EAAS/E,OAExC5L,EAAAC,EAAAC,cAAA,UAAKyQ,EAAS9E,aACd7L,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkvB,GAAD,CAAsBze,SAAUA,EAAUqe,kBAAmBA,OAM/DK,GAAuB,SAAArjB,GAAA,IAAE2E,EAAF3E,EAAE2E,SAAUqe,EAAZhjB,EAAYgjB,kBAAZ,OAC3BhvB,EAAAC,EAAAC,cAAC+L,GAAD,CACE3B,UAAW0kB,EACX3kB,YAAa,kBAAMgH,GAAiBW,eAAerB,IAEnDjG,OACE1K,EAAAC,EAAAC,cAACsK,GAAA,EAAM0B,MAAP,uBAA4BlM,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAcuQ,EAAS/E,OAGrEjI,KACE3D,EAAAC,EAAAC,cAAA,+CACmCF,EAAAC,EAAAC,cAAA,cAASyQ,EAAS/E,MADrD,SCpDe0jB,eAEnB,SAAAA,EAAYhvB,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAivB,IACjBpnB,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAipB,GAAA3mB,KAAAtI,KAAMC,KAMR8L,kBAAoB,kBAAMlE,EAAKqnB,kBAPZrnB,EASnBoE,qBAAuB,kBAAMpE,EAAKsnB,wBAAwBrqB,UATvC+C,EAWnBqnB,eAXmBlpB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAWF,SAAAhF,IAAA,IAAAkuB,EAAAV,EAAA,OAAAntB,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfkG,EAAKa,SAAS,CAACgmB,UAAW,OADXjtB,EAAAC,KAAA,EAIP0tB,EAAUpe,GAAiBC,sBAAsBpJ,EAAK5H,MAAM0G,SAClEkB,EAAKsnB,wBAA0B/qB,EAAgBgrB,GALlC3tB,EAAAE,KAAA,EAMWkG,EAAKsnB,wBAAwB5qB,OANxC,OAMPmqB,EANOjtB,EAAAI,KAQbgG,EAAKa,SAAS,CAACgmB,cARFjtB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsF,GAAAtF,EAAA,SAUboG,EAAKa,SAAS,CACZgmB,UAAW,KACXviB,YAAY,IAZD,yBAAA1K,EAAAU,SAAAjB,EAAA,kBAXE2G,EA4BnB6K,kBAAoB,kBAAM7K,EAAKqnB,kBA1B7BrnB,EAAKU,MAAQ,CACXiI,UAAWvQ,EAAM0G,QAAQ7G,IAHV+H,wEA+BjB,OACElI,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,cACbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KAAKpL,EAAAC,EAAAC,cAAA,wBACLF,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKhL,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwvB,GAAD,CAAsB7e,UAAWxQ,KAAKuI,MAAMiI,UAAWkC,kBAAmB1S,KAAK0S,uBAKrF/S,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,MAEK/K,KAAKuI,MAAMmmB,WACZ/uB,EAAAC,EAAAC,cAACyvB,GAAD,MAIAtvB,KAAKuI,MAAM4D,YACXxM,EAAAC,EAAAC,cAAC0vB,GAAD,MAIAvvB,KAAKuI,MAAMmmB,WACX/uB,EAAAC,EAAAC,cAAC2vB,GAAD,CAAgBd,UAAW1uB,KAAKuI,MAAMmmB,UACtBC,kBAAmB3uB,KAAKkvB,2BA3DD1uB,aAqExCivB,GAAoB,kBAAM9vB,EAAAC,EAAAC,cAAA,mCAE1B6vB,GAAyB,kBACpC/vB,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,kFC9EAmlB,GAAS,GAAAzqB,OAAMH,EAAN,UAGf,SAAS6qB,GAAW3tB,GAKlB,OAJAA,EAAKsD,WAAa,IAAIC,KAAKvD,EAAKsD,YAChCtD,EAAKwD,WAAa,IAAID,KAAKvD,EAAKwD,YAChCxD,EAAKyD,WAAa,IAAIF,KAAKvD,EAAKyD,YAEzBzD,EAQM,IAAA4tB,GAAA,CAEPC,iBAFO,eAAAC,EAAA/pB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAhF,EAEWyF,EAASqpB,GAFpB,IAAA/tB,EAAA,OAAAV,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGLM,EAAO,CACXoO,WAAY1J,EAAQ7G,GACpBmwB,QAASD,GALAvuB,EAAAE,KAAA,EAOEiB,EAAS+sB,GAAW1tB,GAPtB,cAAAR,EAAAS,OAAA,SAAAT,EAAAI,MAAA,wBAAAJ,EAAAU,SAAAjB,MAAA,gBAAAsF,EAAAI,GAAA,OAAAmpB,EAAAvtB,MAAAxC,KAAAyC,YAAA,GAUPytB,kBAVO,eAAAC,EAAAnqB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAxD,EAUWiE,GAVX,IAAAR,EAAA,OAAA5E,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAWYS,EAAO,GAAA8C,OAAIyqB,GAAJ,eAAAzqB,OAA2ByB,EAAQ7G,KAXtD,cAWLqG,EAXKxD,EAAAd,KAAAc,EAAAT,OAAA,SAYJiE,EAASC,IAAIwpB,KAZT,wBAAAjtB,EAAAR,SAAAO,MAAA,gBAAAL,GAAA,OAAA8tB,EAAA3tB,MAAAxC,KAAAyC,YAAA,GAsBP2tB,WAtBO,eAAAC,EAAArqB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAAA,SAAAlD,EAsBIstB,GAtBJ,OAAA/uB,EAAA3B,EAAA4B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAuBEoC,EAAU,GAAAmB,OAAIyqB,GAAJ,KAAAzqB,OAAiBorB,EAAKxwB,KAvBlC,cAAAoD,EAAAhB,OAAA,SAAAgB,EAAArB,MAAA,wBAAAqB,EAAAf,SAAAa,MAAA,gBAAAV,GAAA,OAAA+tB,EAAA7tB,MAAAxC,KAAAyC,YAAA,IChBF8tB,GAAb,SAAA5oB,GAAA,SAAA4oB,IAAA,IAAA3oB,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAuwB,GAAA,QAAAxoB,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAAuqB,IAAAjoB,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,CACNynB,OAAQ,IAHZnoB,EAME2oB,cAAgB,SAACvb,GAAD,OAAWpN,EAAKa,SAAS,CAACsnB,OAAQ/a,EAAMC,OAAOnM,SANjElB,EAQEmR,SARFhT,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAQa,SAAAhF,IAAA,IAAAuvB,EAAA,OAAAlvB,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTkG,EAAK6oB,gBADIjvB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIakuB,GAAaC,iBAAiBjoB,EAAK5H,MAAM0G,QAASkB,EAAKU,MAAMynB,QAJ1E,OAIDS,EAJChvB,EAAAI,KAKPgG,EAAK8oB,kBAAkBF,GALhBhvB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAOPoG,EAAK+oB,iBAPE,yBAAAnvB,EAAAU,SAAAjB,EAAA,iBARb2G,EAmBE6oB,cAAgB,kBAAM7oB,EAAKa,SAAS,CAClCmoB,WAAW,EACXC,iBAAiB,EACjBC,aAAa,KAtBjBlpB,EAyBE8oB,kBAAoB,SAACK,GACnBnpB,EAAKa,SAAS,CACZmoB,WAAW,EACXC,iBAAiB,EACjBd,OAAQ,GACRiB,mBAAoBD,EAAchpB,SAEpCH,EAAK5H,MAAMixB,mBAhCfrpB,EAmCE+oB,eAAiB,kBAAM/oB,EAAKa,SAAS,CACnCmoB,WAAW,EACXE,aAAa,KArCjBlpB,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAuqB,EAAA5oB,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAAuqB,EAAA,EAAAznB,IAAA,SAAAC,MAAA,WAyCI,OACEpJ,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,cACbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KAAKpL,EAAAC,EAAAC,cAAA,gCAKLG,KAAKuI,MAAMwoB,aACXpxB,EAAAC,EAAAC,cAACsxB,GAAD,MAMAnxB,KAAKuI,MAAMuoB,iBACXnxB,EAAAC,EAAAC,cAACuxB,GAAD,CAAoBC,MAAOrxB,KAAKuI,MAAM0oB,qBAKxCtxB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CAAYnZ,UAAU,QACpBJ,EAAAC,EAAAC,cAAC2Z,GAAA,EAAD,CACE1K,YAAY,wCACZwiB,aAAW,kBACX1iB,SAAU5O,KAAKwwB,cACf7lB,SAAU3K,KAAKuI,MAAMsoB,UACrBtlB,KAAK,WAGP5L,EAAAC,EAAAC,cAACqZ,GAAA,EAAWQ,OAAZ,KACE/Z,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACEF,QAAQ,kBACRzB,MAAO/I,KAAKuI,MAAMynB,OAClBrlB,SAAU3K,KAAKuI,MAAMynB,OAAOhoB,QAAU,GAAKhI,KAAKuI,MAAMsoB,UACtDjwB,QAASZ,KAAKgZ,UAJhB,YAYFhZ,KAAKuI,MAAMsoB,WACXlxB,EAAAC,EAAAC,cAAC0xB,GAAD,WArFVhB,EAAA,CAAmC/vB,aA8FtBgxB,GAAmB,kBAC9B7xB,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,qDAKWinB,GAAqB,SAAAhqB,GAAA,IAAE4pB,EAAF5pB,EAAE4pB,MAAF,OAChC1xB,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,WACZ6mB,EADH,kCAKWK,GAAiB,kBAC5B/xB,EAAAC,EAAAC,cAAC8xB,GAAA,EAAD,CAAaC,UAAQ,EAACC,IAAK,OCxGhBC,WAAb,SAAAnqB,GAAA,SAAAmqB,IAAA,OAAA9rB,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAA8xB,GAAA9rB,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAA8rB,GAAAtvB,MAAAxC,KAAAyC,YAAA,OAAAuD,OAAA4C,EAAA,EAAA5C,CAAA8rB,EAAAnqB,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAA8rB,EAAA,EAAAhpB,IAAA,SAAAC,MAAA,WAYW,IAAAlB,EAAA7H,KACDywB,EAAQzwB,KAAKC,MAAMwwB,MACnBsB,EAAcD,EAAWE,eAAevB,GAE9C,OACE9wB,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAO2M,SAAO,EAACC,UAAQ,EAAC3M,OAAK,EAAClL,UAAU,eACtCJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBAGEkyB,EAAY3rB,IAAI,SAAAmF,GAAI,OAClB5L,EAAAC,EAAAC,cAAA,MAAIiJ,IAAKyC,GAAOA,KAIpB5L,EAAAC,EAAAC,cAAA,uBAGFF,EAAAC,EAAAC,cAAA,aAEE4wB,EAAMrqB,IAAI,SAAAkqB,GAAI,OACZ3wB,EAAAC,EAAAC,cAAA,MAAIiJ,IAAKwnB,EAAKxwB,IACZH,EAAAC,EAAAC,cAAA,UAAKywB,EAAKxwB,IAIRiyB,EAAY3rB,IAAI,SAAA0C,GAAG,OACjBnJ,EAAAC,EAAAC,cAAA,MAAIiJ,IAAG,GAAA5D,OAAKorB,EAAKxwB,GAAV,KAAAoF,OAAgB4D,IAAQwnB,EAAKrtB,KAAK6F,IAAQ,MAIrDnJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoyB,GAAD,CAAkB3B,KAAMA,EAAMrmB,UAAW,kBAAMpC,EAAK5H,MAAMiyB,cAAc5B,kBA/C5FwB,EAAA,CAAgCtxB,cAAnBsxB,GAGJE,eAAiB,SAACvB,GACvB,IAAMsB,EAAc,GAKpB,OAJAtB,EACGrqB,IAAI,SAAAkqB,GAAI,OAAIA,EAAKrtB,OACjBmD,IAAIJ,OAAOugB,MACX5V,QAAQ,SAAAwhB,GAAQ,OAAIA,EAASxhB,QAAQ,SAAA7H,GAAG,OAAIipB,EAAYjpB,IAAO,MAC3D9C,OAAOugB,KAAKwL,IAqDvB,IAAMK,GAAmB,SAAA/qB,GAAA,IAAEipB,EAAFjpB,EAAEipB,KAAMrmB,EAAR5C,EAAQ4C,UAAR,OACvBtK,EAAAC,EAAAC,cAAC+L,GAAD,CACE3B,UAAWA,EACXD,YAAa,kBAAM6lB,GAAaO,WAAWE,IAE3CjmB,OACE1K,EAAAC,EAAAC,cAACsK,GAAA,EAAM0B,MAAP,oBAAyBlM,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAhB,IAA+BuwB,EAAKxwB,KAG/DwD,KACE3D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BAAf,2CAGEJ,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAO2M,SAAO,EAACC,UAAQ,EAAC3M,OAAK,EAAClL,UAAU,qBACtCJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,qBAGFF,EAAAC,EAAAC,cAAA,aAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,sBAKAmG,OAAOugB,KAAK+J,EAAKrtB,MAAMmD,IAAI,SAAA0C,GAAG,OAC5BnJ,EAAAC,EAAAC,cAAA,MAAIiJ,IAAKA,GACPnJ,EAAAC,EAAAC,cAAA,UAAKiJ,GACLnJ,EAAAC,EAAAC,cAAA,UAAKywB,EAAKrtB,KAAK6F,aC9FlBupB,GAAb,SAAA1qB,GAAA,SAAA0qB,IAAA,IAAAzqB,EAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAqyB,GAAA,QAAAtqB,EAAAtF,UAAAuF,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1F,UAAA0F,GAAA,OAAAN,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,MAAA4H,EAAA5B,OAAAqC,EAAA,EAAArC,CAAAqsB,IAAA/pB,KAAA9F,MAAAoF,EAAA,CAAA5H,MAAAkF,OAAA+C,MAEEM,MAAQ,GAFVV,EAIEkE,kBAAoB,kBAAMlE,EAAKyqB,cAJjCzqB,EAMEoE,qBAAuB,kBAAMpE,EAAK0qB,oBAAoBztB,UANxD+C,EAQEyqB,WARFtsB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAQe,SAAAhF,IAAA,IAAAyF,EAAA8pB,EAAA,OAAAlvB,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEHiF,EAAUkB,EAAK5H,MAAM0G,QAC3BkB,EAAK0qB,oBAAsBnuB,EAAgByrB,GAAaK,kBAAkBvpB,IAHjElF,EAAAE,KAAA,EAIWkG,EAAK0qB,oBAAoBhuB,OAJpC,OAIHksB,EAJGhvB,EAAAI,KAMTgG,EAAKa,SAAS,CAAC+nB,UANNhvB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAQToG,EAAKa,SAAS,CACZ+nB,MAAO,KACPtkB,YAAY,IAVL,yBAAA1K,EAAAU,SAAAjB,EAAA,iBARf2G,EAuBEqqB,cAAgB,SAAC5B,GACf,IAAMrZ,EAAQpP,EAAKU,MAAMkoB,MAAM+B,QAAQlC,GACjCG,EAAQ5oB,EAAKU,MAAMkoB,MACzBA,EAAMvZ,OAAOD,EAAO,GACpBpP,EAAKa,SAAS,CAAC+nB,WA3BnB5oB,EAAA,OAAA7B,OAAA4C,EAAA,EAAA5C,CAAAqsB,EAAA1qB,GAAA3B,OAAA6C,EAAA,EAAA7C,CAAAqsB,EAAA,EAAAvpB,IAAA,SAAAC,MAAA,WA+BI,IAAMpC,EAAU3G,KAAKC,MAAM0G,QAC3B,OACEhH,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAC4yB,GAAD,CAAe9rB,QAASA,EAASuqB,gBAAiBlxB,KAAKsyB,aAGvD3yB,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,cACbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,+BAKNF,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAWrM,UAAU,0BAEhBC,KAAKuI,MAAMkoB,OACZ9wB,EAAAC,EAAAC,cAAC6yB,GAAD,MAIA1yB,KAAKuI,MAAMkoB,OACX9wB,EAAAC,EAAAC,cAAC8yB,GAAD,CAAYlC,MAAOzwB,KAAKuI,MAAMkoB,MAAOyB,cAAelyB,KAAKkyB,sBAtDrEG,EAAA,CAA+B7xB,aA8DzBoyB,GAAgB,kBACpBjzB,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KAAWzM,EAAAC,EAAAC,cAAA,gCC1DQgzB,8MAEnBtqB,MAAQ,KAERwD,kBAAoB,kBAAMlE,EAAKirB,kBAE/B7mB,qBAAuB,kBAAMpE,EAAKkrB,sBAAsBjuB,+MAGhDhF,EAAKE,KAAKC,MAAMkuB,MAAM/sB,OAAOtB,YAGjCE,KAAK+yB,sBAAwB3uB,EAAgByB,EAAgBQ,WAAWvG,aAClDE,KAAK+yB,sBAAsBxuB,cAA3CoC,SAEN3G,KAAK0I,SAAS,CAAC/B,4DAEf+I,GAAuB1P,kJAKzB,OACEL,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACE1M,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAI8K,IAApB,YACA1L,EAAAC,EAAAC,cAACyM,EAAD,KACGtM,KAAKuI,MAAM5B,QAAU3G,KAAKuI,MAAM5B,QAAQ1D,KAAKsI,KAAO,SAKtDvL,KAAKuI,MAAM5B,SACZhH,EAAAC,EAAAC,cAACmzB,GAAD,MAIAhzB,KAAKuI,MAAM5B,SACXhH,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACozB,GAAD,CAAatsB,QAAS3G,KAAKuI,MAAM5B,UAEjChH,EAAAC,EAAAC,cAAA,OAAKuZ,MAAO,CAACuB,MAAO,SAClBhb,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACqzB,GAAA,EAAD,CAAMC,iBAAiB,YACrBxzB,EAAAC,EAAAC,cAACuzB,GAAA,EAAD,CAAKC,SAAS,WAAWzW,MAAM,aAC7Bjd,EAAAC,EAAAC,cAACyzB,GAAD,CAAyB3sB,QAAS3G,KAAKuI,MAAM5B,WAG/ChH,EAAAC,EAAAC,cAACuzB,GAAA,EAAD,CAAKC,SAAS,QAAQzW,MAAM,SAC1Bjd,EAAAC,EAAAC,cAAC0zB,GAAD,CAAW5sB,QAAS3G,KAAKuI,MAAM5B,sBAlDRnG,aA8DnCgzB,GAAkB,kBAAO7zB,EAAAC,EAAAC,cAAA,0BAE/B,SAASozB,GAAT5rB,GAAgC,IAAVV,EAAUU,EAAVV,QACpB,OACEhH,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAKxM,UAAU,cACbJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,UAAK8G,EAAQ1D,KAAKsI,OAEpB5L,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAKhL,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMhH,GAAE,GAAA2E,OAAKmG,GAAL,KAAAnG,OAAsByB,EAAQ7G,GAA9B,SAAyCC,UAAU,mBAA3D,WAKNJ,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KAAMpE,EAAQ1D,KAAKuI,4BCnFNioB,eAInB,SAAAA,EAAYxzB,GAAO,IAAA4H,EAAA,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAAhG,KAAAyzB,IACjB5rB,EAAA7B,OAAAoC,EAAA,EAAApC,CAAAhG,KAAAgG,OAAAqC,EAAA,EAAArC,CAAAytB,GAAAnrB,KAAAtI,KAAMC,KAHRsI,MAAQ,GAEWV,EAOnBkE,kBAAoB,kBAAMlE,EAAKirB,gBAPZjrB,EASnBirB,aATmB9sB,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KASJ,SAAAhF,IAAA,IAAAyF,EAAA,OAAApF,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWkE,EAAgBQ,WAAWwB,EAAKU,MAAMzI,IAFjD,OAEL6G,EAFKlF,EAAAI,KAGXgG,EAAKa,SAAS,CAAC/B,YAHJlF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,SAKXiO,GAAuB1J,OAAA0tB,GAAA,EAAA1tB,QAAA0tB,GAAA,EAAA1tB,CAAA6B,KALZ,yBAAApG,EAAAU,SAAAjB,EAAA,iBATI2G,EAkBnB2H,wBAlBmB,eAAA7D,EAAA3F,OAAAC,EAAA,EAAAD,CAAAzE,EAAA3B,EAAAsG,KAkBO,SAAAxD,EAAOqL,EAAPtG,GAAA,IAAAgI,EAAA,OAAAlO,EAAA3B,EAAA4B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAqB8N,EAArBhI,EAAqBgI,gBAC/B,GADU9M,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAIhBkE,EAAgBgB,cAAc,CAClC/G,GAAI+H,EAAKU,MAAM5B,QAAQ7G,GACvBmD,KAAM8K,IANc,OAQtBlG,EAAK8rB,sBARiBhxB,EAAAhB,KAAA,gBAAAgB,EAAAjB,KAAA,EAAAiB,EAAAoE,GAAApE,EAAA,SAUtBkF,EAAK+rB,sBAALjxB,EAAAoE,IAVsB,QAaxB0I,GAAc,GAbU,yBAAA9M,EAAAR,SAAAO,EAAA,iBAlBP,gBAAA8D,EAAAI,GAAA,OAAA+E,EAAAnJ,MAAAxC,KAAAyC,YAAA,GAAAoF,EAkCnBqB,SAAW,kBAAMrB,EAAK8rB,uBAlCH9rB,EAoCnB8rB,oBAAsB,kBAAM9rB,EAAK5H,MAAM2P,QAAQC,KAAnB,GAAA3K,OAA2BmG,GAA3B,KAAAnG,OAA4C2C,EAAKU,MAAM5B,QAAQ7G,MApCxE+H,EAsCnB+rB,sBAAwB,SAACxqB,GAAD,OAAOvB,EAAKa,SAAS,CAACmrB,YAAazqB,KApCzDvB,EAAKU,MAAQ,CACXzI,GAAIG,EAAMkuB,MAAM/sB,OAAOtB,IAHR+H,wEAyCjB,OACElI,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KAEEzM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACE1M,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAI8K,IAApB,YACA1L,EAAAC,EAAAC,cAACiQ,EAAD,CAAgBvP,GAAE,GAAA2E,OAAKmG,GAAL,KAAAnG,OAAsBlF,KAAKC,MAAMkuB,MAAM/sB,OAAOtB,KAC7DE,KAAKuI,MAAM5B,QAAU3G,KAAKuI,MAAM5B,QAAQ1D,KAAKsI,KAAO,OAEvD5L,EAAAC,EAAAC,cAACyM,EAAD,cAGF3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,0BACgBG,KAAKuI,MAAM5B,SAAW3G,KAAKuI,MAAM5B,QAAQ1D,KAAKsI,QAMhEvL,KAAKuI,MAAMsrB,aACXl0B,EAAAC,EAAAC,cAACi0B,GAAD,CAAoBxyB,MAAOtB,KAAKuI,MAAMsrB,eAIrC7zB,KAAKuI,MAAM5B,SACZhH,EAAAC,EAAAC,cAACk0B,GAAD,MAGA/zB,KAAKuI,MAAM5B,SACXhH,EAAAC,EAAAC,cAACmQ,GAAD,CAAajC,YAAa/N,KAAKuI,MAAM5B,QAAQ1D,KAChCqK,SAAUtN,KAAKwP,wBACfH,WAAW,OACXF,WAAW,kBACXD,2BAA0B,GAAAhK,OAAKmG,GAAL,KAAAnG,OAAsBlF,KAAKuI,MAAM5B,QAAQ7G,cA/EjDU,aAuFzC,SAASgzB,KACP,OAAQ7zB,EAAAC,EAAAC,cAAA,gCAIH,IAAMm0B,GAAqB,SAAAC,KAAE3yB,MAAF,OAChC3B,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,QAAQ,UAAf,2CChGSa,GAAgB,YAEhB6oB,GAAW,kBACtBv0B,EAAAC,EAAAC,cAACyuB,EAAA,EAAD,KACE3uB,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OAAKmG,IAAiBmjB,OAAK,EAACte,UAAWpE,KAClDnM,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OAAKmG,GAAL,QAA0B6E,UAAWZ,KAChD3P,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OAAKmG,GAAL,aAA+BmjB,OAAK,EAACte,UAAWujB,KAC3D9zB,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OAAKmG,GAAL,QAA0B6E,UAAW2iB,OCRrCsB,GAAA,kBACbx0B,EAAAC,EAAAC,cAACyuB,EAAA,EAAD,KACE3uB,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OAAKmG,IAAiB6E,UAAWgkB,KAC5Cv0B,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAOzG,KAAI,GAAA5iB,OVJe,cUIQgL,UAAWme,KAG7C1uB,EAAAC,EAAAC,cAAC0uB,EAAA,EAAD,CAAO6F,OAAQ,kBAAOz0B,EAAAC,EAAAC,cAACw0B,EAAA,EAAD,CAAU9zB,GAAE,GAAA2E,OAAKmG,WCFtBipB,8MAEnB/rB,MAAQ,CACNrI,aAAa,KAqBfW,gBAAkB,kBAAMgH,EAAKa,SAAS,SAAA6rB,GACpC,MAAO,CAACr0B,aAAcq0B,EAAcr0B,wFAlBpC,OACEP,EAAAC,EAAAC,cAAC20B,EAAA,EAAD,KACE70B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEbJ,EAAAC,EAAAC,cAAC40B,EAAD,CAASv0B,YAAaF,KAAKuI,MAAMrI,cAGjCP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUqZ,MAAO,CAACC,QAAW,OAAQqb,cAAiB,WACnE/0B,EAAAC,EAAAC,cAAC80B,EAAD,CAAQ9zB,gBAAiBb,KAAKa,kBAE9BlB,EAAAC,EAAAC,cAACs0B,GAAD,gBAjBwB3zB,gECGpCo0B,KAAQ9d,KAAK,CACX+d,SAAU,QACVC,QAAS,CAAC,QAAS,cAUNC,oLAJX,OAAQp1B,EAAAC,EAAAC,cAACm1B,GAAD,aAFMx0B,aCPEsb,QACW,cAA7BmZ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShH,MACvB,2DCZNiH,IAAShB,OAAOz0B,EAAAC,EAAAC,cAACw1B,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/wB,KAAK,SAAAgxB,GACjCA,EAAaC","file":"static/js/main.441e80e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const APP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst PROJECTS_URL = `${APP_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <Button variant=\"danger\" className=\"confirm\" onClick={this.onConfirmDeletion} disabled={this.state.deleting}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n  return (\n    <tr>\n\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td>\n\n        <Link to={editProjectLink} className=\"icon-button\">\n          <i className=\"fas fa-edit\"/>\n        </Link>\n\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.projects && !this.state.fetchError &&\n            <FetchingProjects/>\n          }\n\n          {\n            !this.state.projects && this.state.fetchError &&\n            <FetchProjectsError/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length === 0 &&\n            <NoProjects/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length > 0 &&\n            <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingProjects = () => (\n  <Col>\n    <p>Fetching projects ...</p>\n  </Col>\n);\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst WORKFLOWS_URL = `${APP_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => {\n  const workflow = {\n    id,\n    projectId: parseInt(id_project),\n    ...data\n  };\n\n  if (workflow.graph && workflow.graph.nodes) {\n    workflow.graph.nodes.forEach(node => {\n      node.type = node.nodeType;\n      delete node.nodeType;\n      return node;\n    });\n  }\n  return workflow;\n};\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph}) => {\n  const json = {\n    id,\n    id_project: projectId,\n    data: {\n      name,\n      description,\n    }\n  };\n\n  if (graph && graph.nodes) {\n    json.data.graph = {...graph};\n    json.data.graph.nodes = json.data.graph.nodes.map(node => {\n      const jsonNode = {\n        ...node,\n        nodeType: node.type\n      };\n      delete jsonNode.type;\n      return jsonNode;\n    });\n  } else {\n    json.data.graph = {};\n  }\n\n  return json;\n};\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async startWorkflow(workflow) {\n    const res = await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n    console.log('[WorkflowService] startWorkflow result:', res);\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      console.log(e)\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","import {getJSON} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst BLOCK_TYPES_URL = `${APP_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onKeyUp={e => e.stopPropagation()}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n        />{/*prevent block cancellation*/}\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onKeyUp={e => e.stopPropagation()}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n        />{/*prevent block cancellation*/}\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>\n          {definition.displayName}\n        </Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <Editor onEditorChange={this.handleEditorChange}\n                initialValue={model.getValue()}\n                init={{menubar: false}}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div onKeyUp={e => {\n    // prevent block cancellation\n    e.stopPropagation()\n  }}>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code\n]);\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <div key={key}>\n                {\n                  parameterModel.shouldDisplay() &&\n                  <div>\n                    <Component model={parameterModel}\n                               onModelUpdated={onParameterModelUpdate}/>\n                    <hr/>\n                  </div>\n                }\n              </div>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate(); //T TODO: PRova a rimuovere aggiornando lo stato\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal}>{this.props.buttonText}</Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${APP_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\">Create from a template</Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}/>\n      </Form.Group>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import React from 'react';\nimport {DefaultNodeFactory, DefaultNodeModel, DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport uuid from 'uuid';\n\nimport {deSerializeParameters, serializeParameters} from \"../ParametersEngine/parameters/serialization\";\nimport {Card} from \"react-bootstrap\";\nimport './BlockNode.css';\n\nexport class BlockNodeModel extends DefaultNodeModel {\n\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block);\n    }\n    super.deSerialize(block, engine);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block) {\n    block.id = uuid();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId() {\n    return this.id;\n  }\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.blockTypeDefinition.parameterDefinitions;\n  }\n\n  getInitialParametersMap() {\n    return this.initialParametersMap;\n  }\n}\n\nexport class BlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    return (\n      <Card className=\"block\">\n        <Card.Header>\n          <PortWidget name=\"in\" node={this.props.node}/>\n\n          <div className=\"block-name\">\n            {this.props.node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={this.props.node}/>\n\n          {\n            /* Error warning */\n            !this.props.node.isValid() &&\n            <div className=\"error-triangle-container\">\n              <i className=\"fas fa-exclamation-triangle\"/>\n            </div>\n          }\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\nexport class BlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new BlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(BlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {DiagramEngine, DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\nimport './GraphEditor.css'\nimport {BlockNodeFactory, BlockNodeModel} from \"./BlockNode\";\nimport BlackLinkFactory from \"./BlackLinkFactory\";\n\nclass WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.installFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  installFactories() {\n    this.installDefaultFactories();\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => this.registerNodeFactory(\n      new BlockNodeFactory(blockTypeDefinition.name)\n    ));\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n}\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n    this.deserializeGraph(props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      this.getModel().deSerializeDiagram(graph, this.engine);\n      this.addSelectedListenerToNodesOfModel();\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => {\n    const node = new BlockNodeModel();\n\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.forceUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onNodeSelected(node);\n    } else {\n      this.props.onNodeSelected(null);\n    }\n\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    return (\n      <div onDrop={this.onDrop}\n           onDragOver={event => event.preventDefault()}\n           className=\"diagram-widget-container\">\n        <DiagramWidget diagramEngine={this.engine}/>\n      </div>\n    );\n  }\n\n}\n\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Workflow blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isSaving, disabled, onClick, children, block}) => (\n  <Button disabled={disabled || isSaving} onClick={onClick} className={block ? 'btn-block' : ''}>\n    {\n      isSaving &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\n\nimport './WorkflowPropertiesSidebar.css';\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../Services/WorkflowsService\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n * TODO: The name Properties was never used inside the project, rename this component\n */\nexport default class WorkflowPropertiesSidebar extends Component {\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description,\n\n      startingWorkflow: false,\n      startWorkflowError: false\n    }\n  }\n\n  // TODO: Use utils, this won't scale\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n  runWorkflow = async () => {\n    try {\n      // TODO: Save the workflow before starting\n      this.setState({startingWorkflow: true, startWorkflowError: false});\n      await WorkflowsService.startWorkflow(this.props.workflow);\n    } catch (e) {\n      this.setState({startWorkflowError: true});\n    }\n    this.setState({startingWorkflow: false});\n  };\n\n  render() {\n    return (\n      <div className=\"workflow-column\">\n        <div>\n          <Row>\n            <Col>\n              <h5>Workflow properties</h5>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                              onBlur={this.onBlur}/>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                              onChange={this.onChangeDescription} onBlur={this.onBlur}/>\n              </Form.Group>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"bottom-button-container\">\n          {\n            this.state.startWorkflowError &&\n            <div className=\"start-workflow-error\">\n              <span>\n                <i className=\"fas fa-exclamation-triangle\"/> Can't start workflow!\n              </span>\n            </div>\n          }\n\n          <LoadingButton onClick={this.runWorkflow} block={true}\n                         isSaving={this.state.startingWorkflow}>Run</LoadingButton>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\n\nimport ParametersEngine from \"./ParametersEngine/ParametersEngine\";\nimport \"./BlockConfiguratorSidebar.css\";\n\nexport default ({node, onModelUpdate}) => (\n  <div className=\"parameters-engine-container\">\n    <Row>\n      <Col>\n        <h5>Block parameters</h5>\n      </Col>\n    </Row>\n\n    <ParametersEngine\n      parametrizedBlock={node}\n      onParameterModelUpdate={onModelUpdate}/>\n  </div>\n);\n","import {DiagramModel} from \"storm-react-diagrams\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  isValid = () => Object.values(this.nodes).find(node => !node.isValid()) == null;\n\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Container, Navbar, Row, Spinner} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./DraggableBlockTypeListSidebar\";\nimport WorkflowPropertiesSidebar from \"./WorkflowPropertiesSidebar\";\nimport BlockConfiguratorSidebar from \"./BlockConfiguratorSidebar\";\nimport BackButton from \"../../../common/BackButton\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport LoadingButton from \"../../../common/LoadingButton\";\n\nconst WorkflowEditor = (props) => {\n  if (!props.workflow || !props.blockTypeDefinitions) {\n    return <LoadingWorkflowEditor/>;\n  } else {\n    return <LoadedWorkflowEditor {...props}/>;\n  }\n};\n\nconst LoadingWorkflowEditor = () => (\n  <div className=\"loading-spinner-container\">\n    <Spinner animation=\"border\" variant=\"primary\"/>\n  </div>\n);\n\nclass LoadedWorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedNode: null\n  };\n\n  onNodeSelected = (selectedNode) => this.setState({selectedNode});\n\n  onSavePressed = () => {\n    this.onWorkflowEdited();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.props.workflow;\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  render() {\n    const {workflow, blockTypeDefinitions} = this.props;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          <Col xs={2} className=\"light-background\">\n            <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n          </Col>\n\n          {/* Center */}\n          <Col xs={7} className=\"graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={workflow.graph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onNodeSelected={this.onNodeSelected}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n\n            <WorkflowSaveBar workflow={workflow}\n                             graphModel={this.graphModel}\n                             onSavePressed={this.onSavePressed}\n                             isSaving={this.props.isSaving}/>\n          </Col>\n\n          {/* Right sidebar */}\n          <Col xs={3} className=\"light-background right-sidebar\">\n            {\n              this.state.selectedNode ?\n                <BlockConfiguratorSidebar node={this.state.selectedNode}\n                                          onModelUpdate={() => this.forceUpdate()}/>\n                :\n                <WorkflowPropertiesSidebar workflow={this.props.workflow}\n                                           onEdit={this.onWorkflowEdited}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nconst WorkflowSaveBar = ({workflow, graphModel, isSaving, onSavePressed}) => {\n  const isValid = graphModel.isValid();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span>\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving} isSaving={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n\nexport default WorkflowEditor;\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../Services/utils\";\nimport BlockTypesDefinitionService from \"../../../Services/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor/WorkflowEditor\";\n\nexport default class WorkflowEditorWithFetchedBlockTypes extends Component {\n\n  pendingBlockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.pendingBlockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    try {\n      this.pendingBlockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.pendingBlockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({fetchBlockTypesError: true});\n    }\n  }\n\n\n  render() {\n    return (\n      <WorkflowEditor  {...this.props}\n                       blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../Services/utils\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\nimport WorkflowEditorWithFetchedBlockTypes from \"./WorkflowEditorWithFetchedBlockTypes\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditWorkflowPage extends Component {\n\n  pendingWorkflowRequest;\n\n  state = {\n    workflow: null,\n    isSaving: false,\n    saveError: false,\n  };\n\n  componentDidMount = () => this.fetchWorkflow();\n\n  componentWillUnmount = () => this.pendingWorkflowRequest.cancel();\n\n  async fetchWorkflow() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingWorkflowRequest = makeCancellable(WorkflowsService.getWorkflow(id));\n      const workflow = await this.pendingWorkflowRequest.result;\n      this.setState({workflow});\n    } catch (e) {\n      // TODO: redirectToProjectsList(this);\n    }\n  }\n\n  onWorkflowEdited = (workflow) => this.setState({workflow});\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      await WorkflowsService.updateWorkflow(this.state.workflow)\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    return <WorkflowEditorWithFetchedBlockTypes\n      workflow={this.state.workflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={this.state.isSaving}\n      saveError={this.state.saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditWorkflowPage from \"./WorkflowDashboard/EditWorkflowPage\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditWorkflowPage}/>\n  </Switch>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/utils\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            {\n              !this.state.workflows &&\n              <FetchingWorkflows/>\n            }\n\n            {\n              this.state.fetchError &&\n              <FetchingWorkflowsError/>\n            }\n\n            {\n              this.state.workflows &&\n              <WorkflowsTable workflows={this.state.workflows}\n                              onWorkflowDeleted={this.fetchWorkflows}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport const FetchingWorkflows = () => <p>Fetching workflows...</p>;\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst ITEMS_URL = `${APP_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/ItemsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container className=\"items-table-container\">\n          {\n            !this.state.items &&\n            <FetchingItems/>\n          }\n\n          {\n            this.state.items &&\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst FetchingItems = () => (\n  <Container><p>Loading items ...</p></Container>\n);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n\n        {\n          this.state.project &&\n          <Row>\n            <ProjectData project={this.state.project}/>\n\n            <div style={{width: '100%'}}>\n              <hr/>\n\n              <Tabs defaultActiveKey=\"workflow\">\n                <Tab eventKey=\"workflow\" title=\"Workflows\">\n                  <EmbeddableWorkflowsList project={this.state.project}/>\n                </Tab>\n\n                <Tab eventKey=\"items\" title=\"Items\">\n                  <ItemsView project={this.state.project}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </Row>\n        }\n\n      </Container>\n    );\n  }\n}\n\nconst FetchingProject = () => (<p>Fetching ...</p>);\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}