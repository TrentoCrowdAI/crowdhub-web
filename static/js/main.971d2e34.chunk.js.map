{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/utils.js","config.js","Services/ProjectsService.js","Components/common/Breadcrumbs.js","Components/common/DeleteButtonAndModal.js","Components/utils/events.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Services/WorkflowsService.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/BlockNode.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowDataEditorSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/NodeConfiguratorSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphModel.js","Services/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/EditWorkflowPage.js","Components/Workflows/Workflows.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","APP_URL","process","PROJECTS_URL","concat","Errors","INVALID_WORKFLOW_DATA","JSONtoProject","parseInt","created_at","Date","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","Object","asyncToGenerator","mark","jsonList","map","getProject","_getProject","jsonJob","_x","createProject","_createProject","project","_x2","updateProject","_updateProject","t0","response","INVALID_PROJECT_DATA","deleteProject","_deleteProject","LinkBreadcrumb","_ref","children","Link","SimpleBreadcrumb","_ref2","DeleteButtonAndModal","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","DeleteButtonAndModal_DeleteModal","assign","onCancel","callback","e","stopPropagation","DeleteModal","_Component2","_getPrototypeOf3","_this2","_len2","_key2","deleting","deleteError","onConfirmDeletion","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","variant","Footer","Button","disabled","ProjectsTable","projects","onProjectDeleted","Col","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","editProjectLink","name","description","ProjectsTable_DeleteProjectButton","DeleteProjectButton","_ref3","DeleteButtonAndModal_DeleteButtonAndModal","Title","ProjectsList","componentDidMount","fetchProjects","componentWillUnmount","pendingProjectsRequest","fetchError","Container","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","Row","ProjectsList_FetchingProjects","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","FetchingProjects","NoProjects","FetchProjectsError","common_BackButton","text","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","Form","noValidate","Group","Label","Control","type","onChange","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","push","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WORKFLOWS_URL","JSONtoWorkflow","projectId","id_project","graph","nodes","forEach","node","blockType","nodeType","workflowToJSON","workflow","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","getWorkflow","_getWorkflow","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","log","deleteWorkflow","_deleteWorkflow","WorkflowForm","workflowData","valuesToWorkspaceData","workspaceDataToValues","workspaceDataFromProps","workspaceData","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","AbstractParameterModel","definition","block","deSerialize","parameters","undefined","getName","setValue","getDefinition","default","getValue","TextModel","Text","Widget","TextWidget","event","target","getModel","onModelUpdated","model","displayName","onKeyUp","Model","parameters_Number","NumberWidget","parameters_Boolean","BooleanWidget","checked","Check","label","TextFromDropdownModel","getChoices","find","choice","choices","TextFromDropdown","onChangeValue","HtmlModel","Html","handleEditorChange","getDisplayName","getDescription","es2015","onEditorChange","initialValue","init","menubar","ChoiceBuilderModel","index","splice","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","striped","bordered","AddChoice","isNewChoiceValid","_this3","md","lg","ChoiceBuilder","CodeEditorModalAndButton","hideModal","onSave","code","onUpdateCode","CodeEditorModal_CodeEditorModal","onClose","CodeEditorModal","onCodeEdited","size","CodeEditorModal_CodeFilePicker","onFilePicked","CodeEditorModal_CodeEditor","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onImport","InputGroup","Prepend","style","display","accept","multiple","FormControl","readonly","Append","height","boxSizing","CodeEditor","react_ace_lib_default","width","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","PrimitiveParameters","parameter","mapParametersArrayToMap","Number","Boolean","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","title","Collapse","in","ParametersEngine","parametrizedBlock","onParameterModelUpdate","getId","parameterModelsMap","getParameterModelsMap","parameterDefinitions","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","ParametersEngine_UnsupportedParameter","UnsupportedParameter","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","_this$props","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","setDesignBlockTypeDefinition","uuid","setParameterModelsMap","deSerializeParameters","serializeParameters","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","findIndex","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","prevProps","prevState","snapshot","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","b","temp","DoDesignModel","_AbstractParameterMod","get","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","objectSpread","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","PickDesignTemplateModalAndButton","onShow","onHide","onTemplatePicked","setTimeout","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","xs","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","keys","BlockNodeModel","_DefaultNodeModel","engine","ports","port","blockTypeDefinition","getBlockTypeDefinition","DefaultNodeModel","BlockNodeWidget","_DefaultNodeWidget","position","color","right","DefaultNodeWidget","BlockNodeFactory","_DefaultNodeFactory","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","BlackLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","WorkflowGraphEngine","blockTypeDefinitions","setBlockTypeDefinitions","installFactories","installDefaultFactories","registerLinkFactory","getBlockTypeDefinitions","registerNodeFactory","DiagramEngine","WorkflowGraphEditor","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","x","y","addNode","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onNodeSelected","getSelectedItems","graphModel","initialGraph","onDragOver","preventDefault","main","DraggableBlockTypeListSidebar","backgroundColor","draggable","onDragStart","setData","WorkflowDataEditorSidebar","onChangeName","onChangeDescription","onEdit","_props$workflowData","NodeConfiguratorSidebar","onModelUpdate","WorkflowGraphModel","DiagramModel","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","BlockTypeDefinitionsService","_getBlockTypeDefinitions","WorkflowEditor","fetchBlockTypesError","selectedNode","fetchBlockTypes","pendingBlockTypesRequest","onSavePressed","onWorkflowDataEdited","serializeDiagram","onWorkflowEdited","BlockTypesDefinitionService","flex","marginTop","WorkflowEditor_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor","WorkflowEditor_WorkflowBreadcrumb","WorkflowEditor_WorkflowSaveBar","isSaving","WorkflowDataEditorSidebar_WorkflowDataEditorSidebar","WorkflowBreadcrumb","WorkflowSaveBar","Spinner","animation","role","aria-hidden","EditWorkflowPage","saveError","fetchWorkflow","pendingWorkflowRequest","match","WorkflowEditor_WorkflowEditor_WorkflowEditor","Workflows","Switch","Route","exact","WorkflowsTable","workflows","onWorkflowDeleted","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflows","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflows","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","onInputChange","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","aria-label","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","ItemsTable_DeleteItemButton","onItemDeleted","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsView_FetchingItems","ItemsTable_ItemsTable","FetchingItems","ProjectView","fetchProject","pendingProjectRequest","ProjectView_FetchingProject","ProjectData","Tabs","defaultActiveKey","Tab","eventKey","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","FetchingProject","EditProject","assertThisInitialized","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","EditProject_FetchingProject","UpdateProjectError","_ref4","Projects","AppRouter","render","Redirect","Layout","previousState","BrowserRouter","basename","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","tinymce","selector","plugins","App","Layout_Layout","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.971d2e34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const APP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst PROJECTS_URL = `${APP_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <Button variant=\"danger\" className=\"confirm\" onClick={this.onConfirmDeletion} disabled={this.state.deleting}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n  return (\n    <tr>\n\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td>\n\n        <Link to={editProjectLink} className=\"icon-button\">\n          <i className=\"fas fa-edit\"/>\n        </Link>\n\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.projects && !this.state.fetchError &&\n            <FetchingProjects/>\n          }\n\n          {\n            !this.state.projects && this.state.fetchError &&\n            <FetchProjectsError/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length === 0 &&\n            <NoProjects/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length > 0 &&\n            <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingProjects = () => (\n  <Col>\n    <p>Fetching projects ...</p>\n  </Col>\n);\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject({data: projectData});\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst WORKFLOWS_URL = `${APP_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nfunction JSONtoWorkflow(json) {\n  json.projectId = parseInt(json.id_project);\n  delete json.id_project;\n\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  if (json.data.graph) {\n    json.data.graph.nodes.forEach(node => {\n      node.blockType = node.type;\n      node.type = node.nodeType;\n    });\n  }\n\n  return json;\n}\n\nfunction workflowToJSON(workflow) {\n  workflow.id_project = workflow.projectId;\n  delete workflow.projectId;\n\n  if (workflow.data.graph) {\n    workflow.data.graph.nodes.forEach(node => {\n      node.nodeType = node.type;\n      node.type = node.blockType;\n    });\n  }\n\n  return workflow;\n}\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id){\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(`${WORKFLOWS_URL}`, json);\n  },\n\n  async updateWorkflow(workflow) {\n    console.log(workflow)\n    try {\n      const json = workflowToJSON(workflow);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflowData = this.valuesToWorkspaceData(values);\n    await this.props.onSubmit(workflowData, formikBag);\n  };\n\n  workspaceDataToValues = (workspaceDataFromProps) => {\n    const data = workspaceDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkspaceData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workspaceDataToValues(this.props.workspaceData)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflowData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        projectId: this.props.projectId,\n        data: workflowData\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","export default class AbstractParameterModel {\n\n  value;\n  definition = null;\n  block = null;\n\n  constructor(definition, block) {\n    this.deSerialize(definition, block);\n  }\n\n  deSerialize(definition, block) {\n    this.definition = definition;\n    this.block = block;\n    if (!block.parameters || block.parameters[this.getName()] === undefined) {\n      this.setValue(this.getDefinition().default);\n    } else {\n      this.value = block.parameters[this.getName()];\n    }\n  }\n\n  serialize () {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  getDefinition () {\n    return this.definition;\n  }\n\n  getName () {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onKeyUp={e => e.stopPropagation()}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n        />{/*prevent block cancellation*/}\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\n// TODO: This is a copy and paste of Text, improve solution\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onKeyUp={e => e.stopPropagation()}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n        />{/*prevent block cancellation*/}\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n}\n\n// TODO: This is a copy and paste of Text, improve solution\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>\n          {definition.displayName}\n        </Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react/lib/es2015\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n\n    return (\n      <Form.Group>\n        <Form.Label>{model.getDisplayName()}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {model.getDescription()}\n        </Form.Text>\n\n\n        <Editor onEditorChange={this.handleEditorChange}\n                initialValue={model.getValue()}\n                init={{menubar: false}}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    // TODO: Refactor the onChange functions\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from 'react';\nimport {Button, FormControl, InputGroup, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nclass CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readonly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code\n]);\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name} data-block-type-definition={JSON.stringify(definition)} className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\n\nexport default ({parametrizedBlock, onParameterModelUpdate}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name]; // TODO: Handle empty case\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <div key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}/>\n                <hr/>\n              </div>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n\n        })\n      }\n    </div>\n  )\n};\n\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React, {Component} from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\n\nclass DesignBlockConfigurator extends Component {\n\n  render() {\n    const {designBlockModel, onParameterModelUpdate} = this.props;\n\n    return (\n      <div data-block-id={designBlockModel.getId()}>\n        <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                         invalid={!designBlockModel.isValid()}>\n          <ParametersEngine\n            parametrizedBlock={designBlockModel}\n            onParameterModelUpdate={onParameterModelUpdate}/>\n        </CollapsableCard>\n      </div>\n    );\n  }\n}\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../index\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    this.type = block ? block.type : designBlockTypeDefinition.name;\n    this.id = (block && block.id) ? block.id : uuid();\n    this.setParameterModelsMap(deSerializeParameters(block || {}, designBlockTypeDefinition.parameterDefinitions)); // TODO: Replace block with model\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate(); //T TODO: PRova a rimuovere aggiornando lo stato\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      console.log('cloned');\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal}>{this.props.buttonText}</Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel} onModelUpdated={() => this.forceUpdate()}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n\n\n","import {getJSON} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${APP_URL}/template-do`;\n\nconst JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = () => this.setState({show: false});\n\n  onTemplatePicked = (blocksModel) => {\n    this.onHide();\n    setTimeout(() => {\n      this.getDesignModel().setBlocksModel(blocksModel);\n      this.props.onModelUpdated();\n    }, 200); // TODO: Refactor\n  };\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onTemplatePicked={this.onTemplatePicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\">Create from a template</Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked= (template)=>{\n    const blocksModel=new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onTemplatePicked(blocksModel); // TODO: Rename the prop because one is a object an the other is a model\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Header>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Header>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id}>\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n      templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate =() =>{\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                    onModelUpdated={this.onModelUpdatedFromTemplate}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}/>\n      </Form.Group>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const deSerializeParameters = (block, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, block);\n  });\n  return parameterModelsMap;\n};\n\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n\nconst getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import React from 'react';\nimport {DefaultNodeFactory, DefaultNodeModel, DefaultNodeWidget} from \"storm-react-diagrams\";\nimport uuid from 'uuid';\n\nimport {deSerializeParameters, serializeParameters} from \"../ParametersEngine/parameters\";\n\nexport class BlockNodeModel extends DefaultNodeModel {\n\n  blockTypeDefinition;\n  parameterModelsMap;\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      block.id = uuid();\n      block.ports = block.ports.map(port => ({\n        ...port,\n        id: uuid()\n      }));\n    }\n\n    super.deSerialize(block, engine);\n\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.setParameterModelsMap(deSerializeParameters(block, this.getParameterDefinitionList()));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId() {\n    return this.id;\n  }\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.blockTypeDefinition.parameterDefinitions;\n  }\n}\n\nexport class BlockNodeWidget extends DefaultNodeWidget {\n\n\n  render() {\n    return (\n      <div style={{position: 'relative'}}>\n        {\n          // TODO: Refactor\n          !this.props.node.isValid() &&\n          <div style={{position: 'absolute', color: 'yellow', right: 0}}>\n            <i className=\"fas fa-exclamation-triangle\"/>\n          </div>\n        }\n\n        {super.render()}\n      </div>\n    );\n  }\n}\n\nexport class BlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new BlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(BlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {DiagramEngine, DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\nimport './GraphEditor.css'\nimport {BlockNodeFactory, BlockNodeModel} from \"./BlockNode\";\nimport BlackLinkFactory from \"./BlackLinkFactory\";\n\nclass WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.installFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  installFactories() {\n    this.installDefaultFactories();\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => this.registerNodeFactory(\n      new BlockNodeFactory(blockTypeDefinition.name)\n    ));\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n}\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n    this.deserializeGraph(props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      this.getModel().deSerializeDiagram(graph, this.engine);\n      this.addSelectedListenerToNodesOfModel();\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => {\n    const node = new BlockNodeModel();\n\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.forceUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onNodeSelected(node);\n    } else {\n      this.props.onNodeSelected(null);\n    }\n\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    return (\n      <div onDrop={this.onDrop}\n           onDragOver={event => event.preventDefault()}\n           className=\"full-height\">\n        <DiagramWidget diagramEngine={this.engine}/>\n      </div>\n    );\n  }\n\n}\n\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Workflow blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              key={blockTypeDefinitions.id}\n              className=\"btn-block\"\n              style={{backgroundColor: blockTypeDefinitions.color}}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header>\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\n\n// TODO: Rename to parameters\nexport default class WorkflowDataEditorSidebar extends Component {\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflowData;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  // TODO: Use utils\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <h5>Workflow properties</h5>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                            onBlur={this.onBlur}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                            onChange={this.onChangeDescription} onBlur={this.onBlur}/>\n            </Form.Group>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport ParametersEngine from \"./ParametersEngine/ParametersEngine\";\n\nexport default ({node, onModelUpdate}) => {\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <h5>Block parameters</h5>\n        </Col>\n      </Row>\n\n      <ParametersEngine\n        parametrizedBlock={node}\n        onParameterModelUpdate={onModelUpdate}/>\n    </div>\n  );\n\n}\n","import {DiagramModel} from \"storm-react-diagrams\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  isValid = () => Object.values(this.nodes).find(node => !node.isValid()) == null;\n\n}\n","import {getJSON} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst BLOCK_TYPES_URL = `${APP_URL}/block-types`;\n\n\nconst JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React, {Component} from 'react';\nimport {Breadcrumb, Button, Col, Container, Navbar, Row, Spinner} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./DraggableBlockTypeListSidebar\";\nimport WorkflowDataEditorSidebar from \"./WorkflowDataEditorSidebar\";\nimport NodeConfiguratorSidebar from \"./NodeConfiguratorSidebar\";\nimport BackButton from \"../../../common/BackButton\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/WorkflowGraphModel\";\nimport {makeCancellable} from \"../../../../Services/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/BlockTypeDefinitionsService\";\n\n/**\n * Renders the interface with the 3 columns and mediates the communication between the WorkflowGraphEditor and the right column.\n * It also fetches the block types from the server\n */\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchBlockTypesError: false,\n\n    selectedNode: null\n  };\n\n  // TODO: can we separate the loading of the block types from the editor?\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.pendingBlockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    try {\n      this.pendingBlockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.pendingBlockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({fetchBlockTypesError: true});\n    }\n  }\n\n\n  onNodeSelected = (selectedNode) => this.setState({selectedNode});\n\n  onSavePressed = () => {\n    this.onWorkflowDataEdited();\n    this.props.onSave();\n  };\n\n  onWorkflowDataEdited = (data) => {\n    const workflow = {\n      ...this.props.workflow\n    };\n    if (data) {\n      workflow.data = {\n        ...workflow.data,\n        ...data\n      };\n    }\n    workflow.data.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  // TODO: Handle deletion of selected block\n\n  render() {\n    const {workflow} = this.props;\n    const {blockTypeDefinitions} = this.state;\n\n    return (\n      <Container className=\"full-width\" style={{'flex': 1, 'marginTop': '-1em'}}>\n        {\n          (!workflow || !blockTypeDefinitions) &&\n          <p>Loading ...</p>\n        }\n\n        {\n          workflow && blockTypeDefinitions &&\n          <Row className=\"full-height\">\n            <Col xs={2} className=\"light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n\n            <Col xs={7} className=\"graph-editor-container\" style={{display: 'flex'}}>\n              <div style={{flex: 1}}>\n                <WorkflowGraphEditor\n                  initialGraph={workflow.data.graph}\n                  graphModel={this.graphModel}\n                  blockTypeDefinitions={blockTypeDefinitions}\n                  onNodeSelected={this.onNodeSelected}/>\n\n                <WorkflowBreadcrumb workflow={workflow}/>\n                <WorkflowSaveBar workflow={workflow}\n                                 graphModel={this.graphModel}\n                                 onSavePressed={this.onSavePressed}\n                                 isSaving={this.props.isSaving}/>\n              </div>\n            </Col>\n\n            <Col xs={3} className=\"light-background\">\n              {\n                this.state.selectedNode &&\n                <NodeConfiguratorSidebar node={this.state.selectedNode}\n                                         onModelUpdate={() => this.forceUpdate()}/>\n              }\n              {\n                !this.state.selectedNode &&\n                <WorkflowDataEditorSidebar workflowData={this.props.workflow.data}\n                                           onEdit={this.onWorkflowDataEdited}/>\n              }\n            </Col>\n          </Row>\n        }\n      </Container>\n    );\n  }\n}\n\n\nconst WorkflowBreadcrumb = ({workflow}) => (\n  <div className=\"workflow-breadcrumb\">\n    <Breadcrumb>\n      <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n      <SimpleBreadcrumb>Hello world</SimpleBreadcrumb>\n      <SimpleBreadcrumb>Workflows</SimpleBreadcrumb>\n      <SimpleBreadcrumb>{workflow.data.name}</SimpleBreadcrumb>\n    </Breadcrumb>\n  </div>\n);\n\nconst WorkflowSaveBar = ({workflow, graphModel, isSaving, onSavePressed}) => {\n  const isValid = graphModel.isValid();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span>\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n      </div>\n\n      <Button disabled={!isValid || isSaving} onClick={onSavePressed}>\n        {\n          isSaving &&\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        }\n        <span> Save</span>\n      </Button>\n    </Navbar>\n  )\n};\n","import React, {Component} from 'react';\nimport WorkflowEditor from \"./WorkflowEditor/WorkflowEditor\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditWorkflowPage extends Component {\n\n  pendingWorkflowRequest;\n\n  state = {\n    workflow: null,\n    isSaving: false,\n    saveError: false,\n  };\n\n  componentDidMount = () => this.fetchWorkflow();\n\n  componentWillUnmount = () => this.pendingWorkflowRequest.cancel();\n\n  async fetchWorkflow() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingWorkflowRequest = makeCancellable(WorkflowsService.getWorkflow(id));\n      const workflow = await this.pendingWorkflowRequest.result;\n      this.setState({workflow});\n    } catch (e) {\n      // TODO: redirectToProjectsList(this);\n    }\n  }\n\n  onWorkflowEdited = (workflow) => this.setState({workflow});\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      await WorkflowsService.updateWorkflow(this.state.workflow)\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    return <WorkflowEditor workflow={this.state.workflow}\n                           onWorkflowEdited={this.onWorkflowEdited}\n                           onSave={this.onSave}\n                           isSaving={this.state.isSaving}\n                           saveError={this.state.saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditWorkflowPage from \"./WorkflowDashboard/EditWorkflowPage\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditWorkflowPage}/>\n  </Switch>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.data.name}</Link>\n      </td>\n      <td>{workflow.data.description}</td>\n      <td>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.data.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/utils\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            {\n              !this.state.workflows &&\n              <FetchingWorkflows/>\n            }\n\n            {\n              this.state.fetchError &&\n              <FetchingWorkflowsError/>\n            }\n\n            {\n              this.state.workflows &&\n              <WorkflowsTable workflows={this.state.workflows}\n                              onWorkflowDeleted={this.fetchWorkflows}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport const FetchingWorkflows = () => <p>Fetching workflows...</p>;\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst ITEMS_URL = `${APP_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(key => columnNames[key] = true);\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/ItemsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container className=\"items-table-container\">\n          {\n            !this.state.items &&\n            <FetchingItems/>\n          }\n\n          {\n            this.state.items &&\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst FetchingItems = () => (\n  <Container><p>Loading items ...</p></Container>\n);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n\n        {\n          this.state.project &&\n          <Row>\n            <ProjectData project={this.state.project}/>\n\n            <div style={{width: '100%'}}>\n              <hr/>\n\n              <Tabs defaultActiveKey=\"workflow\">\n                <Tab eventKey=\"workflow\" title=\"Workflows\">\n                  <EmbeddableWorkflowsList project={this.state.project}/>\n                </Tab>\n\n                <Tab eventKey=\"items\" title=\"Items\">\n                  <ItemsView project={this.state.project}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </Row>\n        }\n\n      </Container>\n    );\n  }\n}\n\nconst FetchingProject = () => (<p>Fetching ...</p>);\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nconst BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <Router basename={BASENAME}>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}