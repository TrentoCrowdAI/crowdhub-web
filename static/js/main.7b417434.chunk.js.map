{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/utils.js","config.js","Services/ProjectsService.js","Components/common/Breadcrumbs.js","Components/utils/events.js","Components/Projects/ProjectsList/DeleteProjectModal.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Services/WorkflowsService.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/DeleteWorkflowModal.js","Components/Workflows/WorkflowDashboard/WorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","bg","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","APP_URL","process","PROJECTS_URL","concat","Errors","INVALID_WORKFLOW_DATA","JSONtoProject","created_at","Date","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","Object","asyncToGenerator","mark","jsonList","map","getProject","_getProject","jsonJob","_x","createProject","_createProject","project","_x2","updateProject","_updateProject","t0","response","INVALID_PROJECT_DATA","deleteProject","_deleteProject","LinkBreadcrumb","_ref","children","Link","SimpleBreadcrumb","_ref2","ignoreEventAnd","callback","e","stopPropagation","DeleteProjectModal","show","deleting","projectToDelete","onCancel","onConfirmDeletion","Modal","Header","Title","Body","name","Footer","Button","variant","disabled","ProjectsTable","projects","onProjectDeleted","Col","Table","hover","ProjectsTable_ProjectsTableRow","key","ProjectsTableRow","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","onUserWantToDeleteProject","setState","delete","onUserConfirmDeletion","onDeletingProject","onUserCancelDeletion","inherits","createClass","value","openProjectLink","PROJECTS_PATH","editProjectLink","description","ProjectsList","componentDidMount","fetchProjects","componentWillUnmount","pendingProjectsRequest","fetchError","Container","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","Row","ProjectsList_FetchingProjects","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","FetchingProjects","NoProjects","FetchProjectsError","Alert","common_BackButton","text","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","_this2","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","Form","noValidate","Group","Label","Control","type","onChange","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","push","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WORKFLOWS_URL","JSONtoWorkflow","projectId","id_project","workflowToJSON","workflow","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","createWorkflow","_createWorkflow","deleteWorkflow","_deleteWorkflow","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","_Component2","_getPrototypeOf3","_len2","_key2","workflowData","valuesToWorkspaceData","createNewWorkflow","_ref3","onWorkflowCreationError","initialData","_this3","_ref4","CreateWorkflow_CreateWorkflowError","es_ButtonToolbar","CreateWorkflowError","DeleteWorkflowModal","onDeleteWorkflow","onDeleting","workflowToDelete","onDeleted","onDeleteFailed","onDeleteCompletedOrFailed","onWorkflowDeleted","deleteError","_this$props","DeleteWorkflowModal_DeleteWorkflowError","DeleteWorkflowError","WorkflowDashboard","Workflows","Switch","Route","path","exact","WorkflowsTable","workflows","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","onUserWantToDeleteWorkflow","openWorkflowLink","DeleteWorkflowModal_DeleteWorkflowModal","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflows","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflows","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","ItemsImporter","onInputChange","event","target","onImport","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","InputGroup","FormControl","aria-label","Append","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","striped","bordered","item","keys","forEach","ItemsView","fetchItems","pendingItemsRequest","ItemsImporter_ItemsImporter","ItemsView_FetchingItems","ItemsTable_ItemsTable","FetchingItems","ProjectView","fetchProject","pendingProjectRequest","match","ProjectView_FetchingProject","ProjectData","style","width","Tabs","defaultActiveKey","Tab","eventKey","title","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","FetchingProject","EditProject","assertThisInitialized","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","EditProject_FetchingProject","UpdateProjectError","Projects","AppRouter","render","Redirect","Layout","previousState","BrowserRouter","basename","Sidebar_Sidebar_Sidebar","AppBar_AppBar","tinymce","init","selector","plugins","App","Layout_Layout","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b417434.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const APP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst PROJECTS_URL = `${APP_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\n\nexport default ({show, deleting, projectToDelete, onCancel, onConfirmDeletion}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Delete project <span className=\"project-id\">#{show && projectToDelete.id}</span></Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Are you sure you want to delete \"<strong>{show && projectToDelete.data.name}</strong>\"?\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onCancel} disabled={deleting}>Cancel</Button>\n      <Button variant=\"danger\" onClick={onConfirmDeletion}  disabled={deleting}>Delete</Button>\n    </Modal.Footer>\n  </Modal>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Col, Table} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport DeleteProjectModal from \"./DeleteProjectModal\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport class ProjectsTableRow extends Component {\n\n  state = {};\n\n  onUserWantToDeleteProject = () => this.setState({delete: true});\n\n  onUserConfirmDeletion = async () => {\n    const project = this.props.project;\n    this.onDeletingProject();\n    await ProjectsService.deleteProject(project);\n    this.props.onProjectDeleted(project);\n  };\n\n  onUserCancelDeletion = () => this.setState({delete: false});\n\n  onDeletingProject = () => this.setState({deleting: true});\n\n  render() {\n    const project = this.props.project;\n    const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n    const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n    return (\n      <tr>\n        { /* Confirm delete project modal */}\n        <DeleteProjectModal projectToDelete={project}\n                            show={this.state.delete}\n                            deleting={this.state.deleting}\n                            onCancel={this.onUserCancelDeletion}\n                            onConfirmDeletion={this.onUserConfirmDeletion}/>\n\n        <td>\n          <Link to={openProjectLink}>{project.id}</Link>\n        </td>\n        <td>\n          <Link to={openProjectLink}>{project.data.name}</Link>\n        </td>\n        <td>{project.data.description}</td>\n        <td>\n\n          <Link to={editProjectLink} className=\"icon-button\">\n            <i className=\"fas fa-edit\"/>\n          </Link>\n\n          <a className=\"icon-button\"\n             onClick={ignoreEventAnd(this.onUserWantToDeleteProject)}>\n            <i className=\"fas fa-trash-alt\"/>\n          </a>\n        </td>\n      </tr>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport \"./ProjectsList.css\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.projects && !this.state.fetchError &&\n            <FetchingProjects/>\n          }\n\n          {\n            !this.state.projects && this.state.fetchError &&\n            <FetchProjectsError/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length === 0 &&\n            <NoProjects/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length > 0 &&\n            <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingProjects = () => (\n  <Col>\n    <p>Fetching projects ...</p>\n  </Col>\n);\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject({data: projectData});\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst WORKFLOWS_URL = `${APP_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nfunction JSONtoWorkflow(json) {\n  json.projectId = json.id_project;\n  delete json.id_project;\n\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction workflowToJSON(workflow) {\n  workflow.id_project = workflow.projectId;\n  delete workflow.projectId;\n\n  return workflow;\n}\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?project=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(`${WORKFLOWS_URL}`, json);\n  },\n\n /* async updateWorkflow(workflow) {\n    try {\n      const json = workflowToJSON(workflow);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n*/\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, ButtonToolbar, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\nimport WorkflowsService from \"../../../../Services/WorkflowsService\";\nimport './CreateWorkflow.css';\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId}  onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal} >Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {};\n\n  handleSubmit = async (values, formikBag) => {\n    const workflowData = this.valuesToWorkspaceData(values);\n    const workflow = {\n      projectId: this.props.projectId,\n      data: workflowData\n    };\n    await this.createNewWorkflow(workflow, formikBag);\n  };\n\n  valuesToWorkspaceData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow(workflow);\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  initialData = {\n    name: '',\n    description: ''\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n\n        <Formik\n          initialValues={this.initialData}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                <Modal.Body>\n\n                  {\n                    this.state.creationError &&\n                    <CreateWorkflowError/>\n                  }\n\n\n                  {/* name */}\n                  <Row>\n                    <Col>\n                      <Form.Group>\n                        <Form.Label>Workflow name name</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                      onChange={handleChange} onBlur={handleBlur}\n                                      isInvalid={isInvalid('name')}\n                                      isValid={isValid('name')}/>\n\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.name}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  {/* description */}\n                  <Row>\n                    <Col>\n                      <Form.Group>\n                        <Form.Label>Workflow description</Form.Label>\n                        <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                      onChange={handleChange} onBlur={handleBlur}\n                                      isInvalid={isInvalid('description')}\n                                      isValid={isValid('description')}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.description}\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Modal.Body>\n\n\n                <Modal.Footer>\n                  <ButtonToolbar className=\"form-buttons\">\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                    <Button type=\"submit\">Create</Button>\n                  </ButtonToolbar>\n\n                </Modal.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","import React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\n\nexport default class DeleteWorkflowModal extends Component {\n\n  state = {};\n\n  onDeleteWorkflow = async () => {\n    this.onDeleting();\n\n    try {\n      await WorkflowsService.deleteWorkflow(this.props.workflowToDelete);\n      this.onDeleted()\n    } catch (e) {\n      this.onDeleteFailed();\n    }\n\n    this.onDeleteCompletedOrFailed();\n  };\n\n  onDeleting = () => this.setState({deleting: true});\n\n  onDeleted = () => this.props.onWorkflowDeleted();\n\n  onDeleteFailed = () => this.setState({deleteError: true});\n\n  onDeleteCompletedOrFailed = () => this.setState({deleting: false});\n\n  render() {\n    const {show, workflowToDelete, onCancel} = this.props;\n\n    return (\n      <Modal show={show}>\n        <Modal.Header>\n          <Modal.Title>Delete worflow <span className=\"project-id\">{show && workflowToDelete.name}</span></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.deleteError &&\n            <DeleteWorkflowError/>\n          }\n\n          Are you sure you want to delete \"<strong>{show && workflowToDelete.data.name}</strong>\"?\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onCancel} disabled={this.state.deleting}\n                  className=\"cancel\">Cancel</Button>\n          <Button variant=\"danger\" onClick={this.onDeleteWorkflow} disabled={this.state.deleting}\n                  className=\"confirm\">Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nconst DeleteWorkflowError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while deleting the workflow\n  </Alert>\n);\n","import React, {Component} from 'react';\n\nexport default class WorkflowDashboard extends Component {\n  render() {\n    return (<div>Workflow dashboard</div>);\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WorkflowDashboard from \"./WorkflowDashboard/WorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={WorkflowDashboard}/>\n  </Switch>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport DeleteWorkflowModal from \"./DeleteWorkflowModal\";\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass WorkflowsTableRow extends Component {\n\n  state = {};\n\n  onUserWantToDeleteWorkflow = () => this.setState({delete: true});\n\n  onUserCancelDeletion = () => this.setState({delete: false});\n\n  render() {\n    const workflow = this.props.workflow;\n    const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n    return (\n      <tr>\n        { /* Confirm delete workflow modal */}\n        <DeleteWorkflowModal workflowToDelete={workflow} show={this.state.delete}\n                             onCancel={this.onUserCancelDeletion}\n                             onWorkflowDeleted={this.props.onWorkflowDeleted}/>\n\n        <td>\n          <Link to={openWorkflowLink}>{workflow.id}</Link>\n        </td>\n        <td>\n          <Link to={openWorkflowLink}>{workflow.data.name}</Link>\n        </td>\n        <td>{workflow.data.description}</td>\n        <td>\n          <a className=\"icon-button\"\n             onClick={ignoreEventAnd(this.onUserWantToDeleteWorkflow)}>\n            <i className=\"fas fa-trash-alt\"/>\n          </a>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/utils\";\nimport WorkflowsService from \"../../../Services/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            {\n              !this.state.workflows &&\n              <FetchingWorkflows/>\n            }\n\n            {\n              this.state.fetchError &&\n              <FetchingWorkflowsError/>\n            }\n\n            {\n              this.state.workflows &&\n              <WorkflowsTable workflows={this.state.workflows}\n                              onWorkflowDeleted={this.fetchWorkflows}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport const FetchingWorkflows = () => <p>Fetching workflows...</p>;\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {postJSON, getJSON} from \"./utils\";\nimport {APP_URL} from \"../config\";\n\n\nconst ITEMS_URL = `${APP_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?project=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },*/\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => this.setState({\n    importing: false,\n    importCompleted: true,\n    csvUrl: '',\n    importedItemsCount: importedItems.length\n  });\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(key => columnNames[key] = true);\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>id</th>\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  {\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Container} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/ItemsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\n\nexport class ItemsView extends Component {\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  state = {};\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <h3>Uploaded Items</h3>\n          {\n            !this.state.items &&\n            <FetchingItems/>\n          }\n\n          {\n            this.state.items &&\n            <ItemsTable items={this.state.items}/>\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst FetchingItems = () => (\n  <Container><p>Loading items ...</p></Container>\n);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n\n        {\n          this.state.project &&\n          <Row>\n            <ProjectData project={this.state.project}/>\n\n            <div style={{width: '100%'}}>\n              <hr/>\n\n              <Tabs defaultActiveKey=\"workflow\">\n                <Tab eventKey=\"workflow\" title=\"Workflows\">\n                  <EmbeddableWorkflowsList project={this.state.project}/>\n                </Tab>\n                <Tab eventKey=\"items\" title=\"Items\">\n                  <ItemsView project={this.state.project}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </Row>\n        }\n\n      </Container>\n    );\n  }\n}\n\nconst FetchingProject = () => (<p>Fetching ...</p>);\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n\n      <Row>\n\n        <Col><h2>{project.data.name}</h2></Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nconst BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <Router basename={BASENAME}>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\">\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}