{"version":3,"sources":["images/menu.svg","images/user-avatar.svg","Services/rest/utils.js","config.js","models/Run.js","models/BlockRun.js","models/Runs.js","Services/rest/RunsService.js","Services/rest/WorkflowsService.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/common/LoadingButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoBlockCost.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockPortModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockPortFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/common/Breadcrumbs.js","Services/rest/ProjectsService.js","Components/common/DeleteButtonAndModal.js","Components/utils/events.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/common/LoadingContainer.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","models/RunnableWorkflow.js","Services/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/WorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Sidebar/Sidebar.js","Services/rest/AccountBalanceService.js","Components/Appbar/AccountInformation.js","Components/Appbar/AppBar.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","a","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","this","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","API_URL","process","Run","id","blockRuns","createdAt","workflowId","_this","Object","classCallCheck","getId","getRunId","getBlockRuns","getBlockRun","blockId","find","blockRun","getBlockId","getCreatedAt","getWorkflowId","isRunning","getRunningBlockRuns","length","filter","isFailed","getFailedBlockRuns","isFinished","getFinishedBlockRuns","RunStates","freeze","FAILED","RUNNING","FINISHED","NOT_STARTED","BlockRun","state","runId","cacheId","getState","getCacheId","Runs","runs","getLatestRun","containsRun","run","map","getFinishedRuns","getRunningRuns","RUNS_URL","concat","JSONtoRun","_ref","created_at","id_workflow","keys","forEach","push","id_cache","Date","runsComparator","b","RunsService","getRuns","_getRuns","asyncToGenerator","mark","getRunsOfWorkflow","_getRunsOfWorkflow","_x","_getRuns2","jsonList","sort","_x2","getDownloadLink","format","WORKFLOWS_URL","Errors","JSONtoWorkflow","id_project","objectSpread","projectId","parseInt","workflowToJSON","_ref2","name","description","graph","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","project","getWorkflow","_getWorkflow","workflow","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","info","t0","response","deleteWorkflow","_deleteWorkflow","startWorkflow","_startWorkflow","_callee6","startedRunId","_context6","estimateDoBlockCost","_estimateDoBlockCost","_callee7","_context7","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","path","react_default","createElement","className","bem","strokeWidth","width","stroke","d","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","required","value","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","type","Widget","TextWidget","props","possibleConstructorReturn","getPrototypeOf","call","onChange","event","target","getModel","setState","onBlur","onModelUpdated","componentWillUnmount","Form","Control","isInvalid","isValid","disabled","Feedback","Component","Model","parameters_Number","isRequired","isNaN","NumberWidget","parameters_Boolean","BooleanWidget","checked","Check","label","TextFromDropdownModel","getChoices","choice","choices","TextFromDropdown","onChangeValue","as","key","HtmlModel","Html","handleEditorChange","text","Group","es2015","onEditorChange","initialValue","init","menubar","ChoiceBuilderModel","index","splice","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","Table","striped","bordered","hover","onClick","AddChoice","isNewChoiceValid","_this2","_this3","Row","Col","md","lg","Label","Button","ChoiceBuilder","CodeFilePicker","_Component","_getPrototypeOf2","_len","args","Array","_key","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onImport","onFilePicked","inherits","createClass","InputGroup","Prepend","style","display","accept","multiple","FormControl","placeholder","readOnly","Append","height","boxSizing","CodeEditorModalAndButton","show","showModal","hideModal","onSave","code","onUpdateCode","CodeEditorModal_CodeEditorModal","onClose","CodeEditorModal","onCodeEdited","Modal","size","Header","Body","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","Footer","variant","CodeEditor","lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","Math","floor","random","toString","slice","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","Item","BlockingContext_BlockingContext","LoadingButton","isSaving","children","block","Spinner","animation","role","aria-hidden","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","Boolean","BlockingContext","DoBlockCostWidget","estimateCost","estimatedCost","estimationError","estimating","onCostEstimated","getEstimatedCost","getBlockModel","parent","setEstimatedCost","renderEstimatedCost","common_LoadingButton","renderCostNeverEstimated","renderLatestEstimatedCost","toFixed","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","title","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","_ref3","ParameterContainerLineSeparator","_ref4","UnsupportedParameter","_ref5","Alert","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","values","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","componentDidMount","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","findIndex","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","prevProps","prevState","snapshot","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","_this$props","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","get","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","setTimeout","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","_Component2","_getPrototypeOf3","_len2","_key2","templates","fetchError","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","Container","xs","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","DefaultBlockNodeModel","_DefaultNodeModel","_runs","getLabel","setId","setLabel","blockTypeDefinition","latestBlockRun","wasStarted","getRunnableBlocksCount","getAllParentBlocks","assertThisInitialized","getRunningBlocksCount","toConsumableArray","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","getPorts","DefaultNodeModel","parents","blockParents","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","DoBlockRunAdapter","publishRun","waitRun","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","BlockPortModel","isInput","linkWouldCreateRecursiveDependence","blockDependsOnItself","getBlock","getLinksAsList","sourcePort","targetPort","visitedBlockIds","connectedBlocks","getConnectedBlocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","connectedBlock","return","DefaultPortModel","BlockPortFactory","initialConfig","DefaultPortFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","registerFactories","registerLinkFactory","registerPortFactory","registerLabelFactory","DefaultLabelFactory","registerNodeFactories","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","e","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadNameFactory","downloadLinkFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ButtonToolbar","ToggleButtonGroup","defaultValue","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","downloadName","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","href","download","DropdownDownload","RunsControls_RunsControls","onStart","isStarting","startText","RunsControls_RunsProgressBar","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","ProgressBar","animated","now","max","WorkflowRunsControls","startError","waitForRunStateReceived","runnableWorkflow","addRunsListener","listener","removeRunsListener","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","onInputChange","_this$state","borderColor","aria-describedby","CreateBlockingContext","togglePopoverButton","popoverContent","showPopover","registerListenerToClosePopoverWhenUserClicksOutside","clickListenerToClosePopoverWhenUserClicksOutside","indexOf","hidePopover","onCreated","onAdd","unregisterListenerToClosePopoverWhenUserClicksOutside","document","removeEventListener","Overlay","placement","getElementById","Popover","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","RandomColorPicker_RandomColorPicker","BlockingContextsCRUD","onAddBlockingContext","addContext","log","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","onRemoveContext","removeContext","WorkflowBlockingSettings","onModelUpdate","WorkflowBlockingSettings_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","areSomeBlockingContextsEnabled","mutateToSingleBlockingContextForAllDoBlocks","removeAllBlockingContexts","renderCheckboxIndeterminateState","checkbox","indeterminate","isSignleBlockingContextEnabledForAllDoBlocks","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","stopPropagation","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","BlockingContextsModel","setContexts","toRemove","_disableBlockingContext","getDefaultContext","_enableContextForAllDoBlocks","WorkflowGraphModel","blockingContexts","getBlocksArray","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","LinkBreadcrumb","to","Link","SimpleBreadcrumb","PROJECTS_URL","INVALID_WORKFLOW_DATA","JSONtoProject","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","getProject","_getProject","jsonJob","createProject","_createProject","updateProject","_updateProject","INVALID_PROJECT_DATA","deleteProject","_deleteProject","DeleteButtonAndModal","onShowModal","onCloseModal","DeleteButtonAndModal_DeleteModal","assign","onCancel","callback","DeleteModal","deleting","deleteError","onConfirmDeletion","onDeleting","serviceCall","onDeleted","onDeleteError","header","ProjectsTable","projects","onProjectDeleted","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","editProjectLink","ProjectsTable_DeleteProjectButton","DeleteProjectButton","DeleteButtonAndModal_DeleteButtonAndModal","Title","LoadingContainer","loading","ProjectsList","fetchProjects","pendingProjectsRequest","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","common_LoadingContainer","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","NoProjects","FetchProjectsError","common_BackButton","ProjectForm","handleSubmit","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","noValidate","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","CreateWorkflowButton","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","WorkflowsTable","workflows","onWorkflowDeleted","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WORKFLOWS_PATH","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","aria-label","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ItemsTable","columnNames","getColumnNames","ItemsTable_DeleteItemButton","onItemDeleted","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","ItemsImporter_ItemsImporter","ItemsTable_ItemsTable","ProjectView","fetchProject","pendingProjectRequest","match","ProjectData","Tabs","defaultActiveKey","Tab","eventKey","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","EditProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","FetchingProject","UpdateProjectError","Projects","Switch","Route","exact","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","Navbar","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","onWorkflowEdited","serializeDiagram","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditor_WorkflowEditor_WorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","slicedToArray","startWatchingRunsStatus","setInterval","stopWatchRunsStatus","clearInterval","WorkflowDashboard","saveError","fetchRunnableWorkflow","getWorkflowIdFromUrl","getWorkflowIdFromSpecifiedProps","runnableWorkflowRequest","WorkflowEditorContainer_WorkflowEditorContainer","Workflows","Sidebar","fetchRuns","sidebarOpen","NavLink","Sidebar_LatestFinishedRunsList","Sidebar_RunningRunsList","LatestFinishedRunsList","Sidebar_JobsList","RunningRunsList","JobsList","ACCOUNT_BALANCE_URL","JSONtoBalances","AccountBalanceService","_cachedBalance","getBalances","_getBalances","balances","_isBalancesCached","_getCachedBalance","_cacheBalances","AccountInformation","OverlayTrigger","overlay","AccountInformation_AccountInformationPopoverContent","AccountInformation_AccountInformationPreview","AccountInformationPreview","src","userAvatar","alt","AccountInformationPopoverContent","_Component3","AccountInformation_PlatformBalances","AccountInformation_LogoutButton","PlatformBalances","_Component4","fetchBalances","pendingBalancesRequest","renderBalances","_this$state$balances","tolokaSandbox","tolokaNormal","f8","prepareNumber","balance","LogoutButton","AppBar","expand","onToggleSidebar","menu","AccountInformation_AccountInformation","AppRouter","render","Redirect","Layout","previousState","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","tinymce","selector","plugins","App","Layout_Layout","window","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f704d162.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-avatar.d4a7540a.svg\";","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n  workflowId;\n\n  constructor(id, blockRuns, createdAt, workflowId) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n    this.workflowId = workflowId;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  getWorkflowId = () => this.workflowId;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n\n  getRunningRuns = () => this.runs.filter(run => run.isRunning());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../../models/Run\";\nimport BlockRun from \"../../models/BlockRun\";\nimport Runs from \"../../models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at, id_workflow}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at), id_workflow);\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRuns () {\n    return await this._getRuns(`${RUNS_URL}`);\n  },\n\n  async getRunsOfWorkflow(workflowId) {\n    return await this._getRuns(`${RUNS_URL}?workflowId=${workflowId}`);\n  },\n\n  async _getRuns(url) {\n    const jsonList = await getJSON(url);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n\n}\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async startWorkflow(workflow) {\n    const startedRunId = await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n    return startedRunId;\n  },\n\n  async estimateDoBlockCost (workflowId, blockId) {\n    return await postJSON(`${WORKFLOWS_URL}/${workflowId}/${blockId}/estimated-cost`);\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <Editor onEditorChange={this.handleEditorChange}\n                initialValue={model.getValue()}\n                init={{menubar: false}}\n                disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\n// TODO: Rename isSaving to isLoading\nconst LoadingButton = ({isSaving, disabled, onClick, children, block}) => (\n  <Button disabled={disabled || isSaving} onClick={onClick} className={block ? 'btn-block' : ''}>\n    {\n      isSaving &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\nimport DoBlockCost from \"./DoBlockCost\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext,\n  DoBlockCost\n]);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\n\nclass DoBlockCostWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimatedCost: this.getModel().getEstimatedCost(),\n      estimationError: false,\n      estimating: false\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  estimateCost = async () => {\n    this.setState({estimatedCost: null, estimationError: false, estimating: true});\n    try {\n      const estimatedCost = await WorkflowsService.estimateDoBlockCost(\n        this.getWorkflowId(), this.getBlockId()\n      );\n      this.onCostEstimated(estimatedCost);\n    } catch (e) {\n      this.setState({estimatedCost: null, estimationError: true, estimating: false});\n    }\n  };\n\n  getWorkflowId() { // TODO: Clear\n    const blockModel = this.getBlockModel();\n    const workflowModel = blockModel.parent;\n    return workflowModel.workflowId;\n  }\n\n  getBlockModel() {\n    return this.getModel().blockModel;\n  }\n\n  getBlockId() {\n    const blockModel = this.getBlockModel();\n    return blockModel.id;\n  }\n\n  onCostEstimated(estimatedCost) {\n    this.setState({estimatedCost, estimationError: false, estimating: false});\n    this.getModel().setEstimatedCost(estimatedCost);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderEstimatedCost()}\n\n        <LoadingButton block onClick={this.estimateCost} isSaving={this.state.estimating}>\n          Estimate cost\n        </LoadingButton>\n      </div>\n    );\n  }\n\n  renderEstimatedCost() {\n    if (this.state.estimatedCost === null) {\n      return this.renderCostNeverEstimated();\n    }\n    return this.renderLatestEstimatedCost();\n  }\n\n  renderCostNeverEstimated() {\n    return (\n      <Form.Text className=\"text-muted\">\n        The cost of this block has never been estimated. Click the button below to estimate it.\n      </Form.Text>\n    );\n  }\n\n  renderLatestEstimatedCost() {\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          The latest estimated cost is: <strong>{this.state.estimatedCost}$</strong>.\n          Click the button below to estimate it again.\n        </Form.Text>\n      </div>\n    );\n  }\n}\n\nclass DoBlockCostModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n\n  setEstimatedCost(estimatedCost) {\n    if (estimatedCost) {\n      estimatedCost = estimatedCost.toFixed(2);\n    }\n    this.setValue(estimatedCost);\n  }\n\n  getEstimatedCost() {\n    return this.getValue();\n  }\n}\n\nexport default {\n  type: 'doBlockCost',\n  Widget: DoBlockCostWidget,\n  Model: DoBlockCostModel\n}\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getPortsAsList () {\n    return Object.values(this.getPorts());\n  }\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = run.getBlockRun(blockId);\n    this.waitRun = run.getBlockRun(`${blockId}_wait`);\n  }\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DefaultPortModel} from \"storm-react-diagrams\";\n\nexport default class BlockPortModel extends DefaultPortModel {\n\n\n  constructor(isInput, name, label, id) {\n    super(isInput, name, label, id);\n  }\n\n  canLinkToPort(port) {\n    if (!super.canLinkToPort(port)) {\n      return false;\n    }\n    const linkWouldCreateRecursiveDependence = BlockPortModel.blockDependsOnItself(this.getBlock());\n    if (linkWouldCreateRecursiveDependence) {\n      console.info(\"Link prevented to avoid recursive dependencies\");\n    }\n    return !linkWouldCreateRecursiveDependence;\n  }\n\n  getBlock() {\n    return this.parent;\n  }\n\n  getConnectedBlocks() {\n    return this.getLinksAsList()\n      .map(link => link.sourcePort === this ? link.targetPort : link.sourcePort)\n      .map(port => port.getBlock());\n  }\n\n  getLinksAsList() {\n    return Object.values(this.getLinks());\n  }\n\n  static blockDependsOnItself(block, visitedBlockIds = {}) {\n    visitedBlockIds[block.getId()] = true;\n    const outPort = block.getPort('out');\n    const connectedBlocks = outPort.getConnectedBlocks();\n    for (let connectedBlock of connectedBlocks) {\n      if (visitedBlockIds[connectedBlock.getId()]) {\n        return true;\n      }\n      if (BlockPortModel.blockDependsOnItself(connectedBlock, visitedBlockIds)) {\n        return true;\n      }\n    }\n    visitedBlockIds[block.getId()] = false;\n    return false;\n  }\n\n}\n","import {DefaultPortFactory} from \"storm-react-diagrams\";\nimport BlockPortModel from \"../models/BlockPortModel\";\n\nexport default class BlockPortFactory extends DefaultPortFactory{\n\n  getNewInstance(initialConfig) {\n    return new BlockPortModel();\n  }\n}\n","import {DefaultLabelFactory, DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\nimport BlockPortFactory from \"./factories/BlockPortFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.registerFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  registerFactories() {\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.registerPortFactory(new BlockPortFactory());\n    this.registerLabelFactory(new DefaultLabelFactory());\n    this.registerNodeFactories();\n  }\n\n  registerNodeFactories () {\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.forceUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadNameFactory, downloadLinkFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                downloadName={downloadNameFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  downloadName={downloadNameFactory(run, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, downloadName, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} download={downloadName}>\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, downloadName, isLatest, id}) => (\n  <Dropdown.Item href={link} download={downloadName}>\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default ({runnable, downloadNameFactory, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <div>\n    <Card>\n      <Card.Header>Execution</Card.Header>\n\n      <Card.Body>\n        {\n          runnable.isRunning() &&\n          <div>\n            Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n            Progress:<br/>\n            <RunsProgressBar runnable={runnable}/>\n          </div>\n        }\n\n        <LoadingButton block onClick={onStart}\n                       disabled={!runnable.canStart()}\n                       isSaving={isStarting}>{startText}</LoadingButton>\n\n      </Card.Body>\n    </Card>\n\n    <Card className=\"mt-2\">\n      <Card.Header>Results</Card.Header>\n      <Card.Body>\n        <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                          downloadNameFactory={downloadNameFactory}\n                          runnable={runnable}/>\n      </Card.Body>\n    </Card>\n  </div>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.startWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      downloadNameFactory={(run, format) => `${workflow.name} #${run.id}.${format}`}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    borderColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport \"./CreateBlockingContext.css\";\n\nexport default class CreateBlockingContext extends Component {\n\n  togglePopoverButton = React.createRef();\n  popoverContent = React.createRef();\n\n  state = {\n    show: false\n  };\n\n  showPopover = () => {\n    this.setState({show: true});\n    this.registerListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  registerListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.addEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  clickListenerToClosePopoverWhenUserClicksOutside = (e) => {\n    const popoverContent = this.popoverContent.current;\n    const clickInPopover = e.path.indexOf(popoverContent) >= 0;\n    if (!clickInPopover) {\n      this.hidePopover();\n    }\n  };\n\n  onCreated = (context) => {\n    this.hidePopover();\n    this.props.onAdd(context);\n  };\n\n  hidePopover = () => {\n    this.setState({show: false});\n    this.unregisterListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  unregisterListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.removeEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\"\n                onClick={this.showPopover}\n                ref={this.togglePopoverButton}>Add blocking context</Button>\n        <Overlay\n          id=\"create-blocking-context-popover-container\"\n          show={this.state.show}\n          placement=\"left\"\n          target={this.togglePopoverButton.current}\n          container={document.getElementById('workflow-editor')}>\n\n          <Popover title=\"Create blocking context\"\n                   id=\"create-blocking-context-popover\"\n                   placement=\"left\">\n            <div ref={this.popoverContent}>\n              <CreateBlockingContextPopover onCreated={this.onCreated}/>\n            </div>\n          </Popover>\n        </Overlay>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n  state = {\n    name: '',\n    color: null\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  isValid = () => this.state.name.length > 0;\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      name: this.state.name,\n      color: this.state.color\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Form.Row>\n        <Col xs=\"12\">\n          <Form.Group>\n            <Form.Control name=\"name\"\n                          type=\"text\"\n                          placeholder=\"Blocking context name\"\n                          value={name}\n                          onChange={this.onNameChange}/>\n          </Form.Group>\n\n        </Col>\n        <Col xs=\"8\">\n          <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n        </Col>\n        <Col xs=\"4\">\n          <Button className=\"btn-block\"\n                  disabled={!this.isValid()}\n                  onClick={this.onAdd}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.forceUpdate();\n    console.log(context);\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Blocking contexts</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}/>\n        <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.forceUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.model;\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const contexts = model.getContexts();\n\n    if (contexts.length <= 0) {\n      return (\n        <Form.Text className=\"text-muted\">\n          No blocking contexts created yet in this workflow\n        </Form.Text>\n      )\n    }\n\n    return (\n      <Table striped bordered hover size=\"sm\" className=\"blocking-contexts-table\">\n        <thead>\n        <tr>\n          <th/>\n          <th className=\"name-column\">Name</th>\n          <th/>\n        </tr>\n        </thead>\n        <tbody>\n\n        {\n          contexts.map(context => (\n            <tr key={context.id}>\n              <td className=\"color-box-container\">\n                <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n              </td>\n              <td>{context.name}</td>\n              <td>\n                <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n                  <i className=\"fas fa-trash-alt\"/>\n                </a>\n              </td>\n            </tr>\n          ))\n        }\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\n\nexport default class WorkflowBlockingSettings extends Component {\n\n  render() {\n    const {graphModel, onModelUpdate} = this.props;\n    return (\n      <ParameterContainerCard title=\"Blocking workers\">\n        <WorkflowBlockingCheckbox graphModel={graphModel} onModelUpdate={onModelUpdate}/>\n        <BlockingContextsCRUD graphModel={graphModel} onModelUpdate={onModelUpdate}/>\n      </ParameterContainerCard>\n    );\n  }\n\n}\n\n\nclass WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            If checked, one worker will be able to work only on one job of this workflow. When indeterminate, workers\n            won't be able to work on job of the same blocking context\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Block workers\"\n                      value={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSignleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={runnableWorkflow.isRunning()}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         downloadNameFactory={(run, format) => `${blockModel.getLabel()} #${run.getRunId()}.${format}`}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={!runnableWorkflow.canBeEdited()}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={!runnableWorkflow.canBeEdited()}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block} runnableWorkflow={runnableWorkflow}/>\n      </div>\n    }\n  />\n);\n\n","export default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById (id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableBlockingContext(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  _disableBlockingContext(context) {\n    // TODO: Search all do block that use this and disable\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    name: 'Default',\n    color: '#ffaff3'\n  });\n\n  _enableContextForAllDoBlocks() {\n\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => this.removeContext(context));\n  }\n\n  isSignleBlockingContextEnabledForAllDoBlocks() {\n\n  }\n\n  areSomeBlockingContextsEnabled() {\n\n  }\n\n\n}\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel();\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <Button variant=\"danger\" className=\"confirm\" onClick={this.onConfirmDeletion} disabled={this.state.deleting}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n  return (\n    <tr>\n\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td>\n\n        <Link to={editProjectLink} className=\"icon-button\">\n          <i className=\"fas fa-edit\"/>\n        </Link>\n\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import {Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingContainer = ({loading, children}) => {\n  if (loading) {\n    return (\n      <div className=\"loading-spinner-container\">\n        <Spinner animation=\"border\" variant=\"primary\"/>\n      </div>\n    );\n  }\n  return children;\n};\n\n\nexport default LoadingContainer;\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.projects && !this.state.fetchError}>\n          <Row>\n            {\n              !this.state.projects && this.state.fetchError &&\n              <FetchProjectsError/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length === 0 &&\n              <NoProjects/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length > 0 &&\n              <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n            }\n          </Row>\n        </LoadingContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.workflows && !this.state.fetchError}>\n          <Row>\n            <Col>\n              {\n                this.state.fetchError &&\n                <FetchingWorkflowsError/>\n              }\n\n              {\n                this.state.workflows &&\n                <WorkflowsTable workflows={this.state.workflows}\n                                onWorkflowDeleted={this.fetchWorkflows}/>\n              }\n            </Col>\n          </Row>\n        </LoadingContainer>\n      </Container>\n    );\n  }\n}\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <LoadingContainer loading={!this.state.items}>\n          <Container className=\"items-table-container\">\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          </Container>\n        </LoadingContainer>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <LoadingContainer loading={!this.state.project}>\n            <Row>\n              <ProjectData project={this.state.project}/>\n\n              <div style={{width: '100%'}}>\n                <hr/>\n\n                <Tabs defaultActiveKey=\"workflow\">\n                  <Tab eventKey=\"workflow\" title=\"Workflows\">\n                    <EmbeddableWorkflowsList project={this.state.project}/>\n                  </Tab>\n\n                  <Tab eventKey=\"items\" title=\"Items\">\n                    <ItemsView project={this.state.project}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Row>\n        </LoadingContainer>\n\n      </Container>\n    );\n  }\n}\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed}) => {\n  const isValid = graphModel.isValid();\n  const isRunning = runnableWorkflow.isRunning();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span>\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          isRunning &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || isRunning}\n                     isSaving={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  constructor(props){\n    super(props);\n    const {runnableWorkflow} = this.props;\n    this.graphModel.workflowId = runnableWorkflow.getWorkflow().id;\n  }\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    // TODO: The logic to block edit is spread everywhere, can we group it somewhere?\n    this.graphModel.setLocked(!runnableWorkflow.canBeEdited());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onWorkflowEdited();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\" id=\"workflow-editor\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            runnableWorkflow.canBeEdited() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n\n            <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                             graphModel={this.graphModel}\n                             onSavePressed={this.onSavePressed}\n                             isSaving={this.props.isSaving}/>\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={() => this.forceUpdate()}\n                                          runnableWorkflow={runnableWorkflow}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={() => this.forceUpdate()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <LoadingContainer loading={this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow}>\n        <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n      </LoadingContainer>\n    )\n  }\n}\n\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"./rest/WorkflowsService\";\nimport RunnableWorkflow from \"../models/RunnableWorkflow\";\nimport RunsService from \"./rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class WorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null,\n    isSaving: false,\n    saveError: false,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.getWorkflowIdFromUrl() !== this.getWorkflowIdFromSpecifiedProps(prevProps)) {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    }\n  }\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n    this.setState({runnableWorkflow: null});\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.getWorkflowIdFromSpecifiedProps(this.props);\n\n  getWorkflowIdFromSpecifiedProps = (props) => props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WorkflowDashboard from \"./WorkflowDashboard/WorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={WorkflowDashboard}/>\n  </Switch>\n);\n","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Sidebar.css';\nimport RunsService from \"../../Services/rest/RunsService\";\nimport {WORKFLOWS_PATH} from \"../Workflows/Workflows\";\n\nconst MAX_RUNS_IN_LIST = 5;\n\nexport default class Sidebar extends Component {\n\n  state = {\n    runs: null\n  };\n\n  componentDidMount = () => this.fetchRuns();\n\n  async fetchRuns() {\n    try {\n      const runs = await RunsService.getRuns();\n      this.setState({runs});\n    } catch (e) {\n      // TODO: Handle error\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ul className=\"sidebar-list\">\n          <li>\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </li>\n\n          <li>\n            <LatestFinishedRunsList runs={this.state.runs}/>\n          </li>\n\n          <li>\n            <RunningRunsList runs={this.state.runs}/>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\nconst LatestFinishedRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching latest finished runs ...</p>;\n  }\n  return (\n    <div>\n      Latest finished runs\n      <JobsList runs={runs.getFinishedRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst RunningRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching running runs ...</p>;\n  }\n  return (\n    <div>\n      Running runs\n      <JobsList runs={runs.getRunningRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst JobsList = ({runs}) => (\n  <ul>\n    {\n      runs.map(run => (\n        <li key={run.id}>\n          <NavLink to={`${WORKFLOWS_PATH}/${run.getWorkflowId()}`}>\n            #{run.id}\n          </NavLink>\n        </li>\n      ))\n    }\n  </ul>\n);\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ACCOUNT_BALANCE_URL = `${API_URL}/account-balance`;\n\n\nexport const JSONtoBalances = json => json;\n\nexport default {\n\n  _cachedBalance: null,\n\n  async getBalances() {\n    if (this._isBalancesCached()) {\n      return this._getCachedBalance();\n    }\n    const json = await getJSON(ACCOUNT_BALANCE_URL);\n    const balances = JSONtoBalances(json);\n    this._cacheBalances(balances);\n    return balances;\n  },\n\n  _isBalancesCached() {\n    return !!this._getCachedBalance();\n  },\n\n  _getCachedBalance() {\n    return this._cachedBalance;\n  },\n\n  _cacheBalances(balances) {\n    this._cachedBalance = balances;\n  }\n}\n\n","import React, {Component} from 'react';\nimport {Button, OverlayTrigger, Popover} from \"react-bootstrap\";\n\nimport userAvatar from \"../../images/user-avatar.svg\";\nimport \"./AccountInformation.css\";\nimport {makeCancellable} from \"../../Services/rest/utils\";\nimport AccountBalanceService from \"../../Services/rest/AccountBalanceService\";\nimport LoadingContainer from \"../common/LoadingContainer\";\n\nexport default class AccountInformation extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={\n          <Popover id=\"account-information-popover\"\n                   title=\"Account information\">\n            <AccountInformationPopoverContent/>\n          </Popover>\n        }>\n\n        <div>\n          <AccountInformationPreview/>\n        </div>\n      </OverlayTrigger>\n    );\n  }\n}\n\nclass AccountInformationPreview extends Component {\n  render() {\n    return (\n      <div>\n        <span>User name</span>\n        <img className=\"user-avatar\" src={userAvatar} alt=\"user avatar\"/>\n      </div>\n    );\n  }\n}\n\n\nexport class AccountInformationPopoverContent extends Component {\n  render() {\n    return (\n      <div>\n        <PlatformBalances/>\n\n        <hr/>\n\n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n\n\nexport class PlatformBalances extends Component {\n\n  pendingBalancesRequest;\n\n  state = {\n    balances: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchBalances();\n\n  componentWillUnmount = () => this.pendingBalancesRequest.cancel();\n\n  fetchBalances = async () => {\n    this.setState({balances: null, fetchError: false});\n    try {\n      this.pendingBalancesRequest = makeCancellable(AccountBalanceService.getBalances());\n      const balances = await this.pendingBalancesRequest.result;\n      this.setState({balances, fetchError: false});\n    } catch (e) {\n      this.setState({balances: null, fetchError: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"balances-container\">\n        <h6>Balances</h6>\n\n        <LoadingContainer loading={!this.state.balances && !this.state.fetchError}>\n          {\n            !this.state.balances && this.state.fetchError &&\n            <p>Error</p>\n          }\n\n          {\n            this.state.balances && !this.state.fetchError &&\n            this.renderBalances()\n          }\n        </LoadingContainer>\n      </div>\n    );\n  }\n\n  static prepareNumber = (balance) => balance.toFixed(2);\n\n  renderBalances = () => {\n    const {tolokaSandbox, tolokaNormal, f8} = this.state.balances;\n    return (\n      <div>\n        <strong>Toloka Sandbox</strong>: {PlatformBalances.prepareNumber(tolokaSandbox)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(tolokaNormal)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(f8)}$<br/>\n      </div>\n    );\n  };\n\n}\n\n\nclass LogoutButton extends Component {\n  render() {\n    return (\n      <Button className=\"btn-block\">Logout</Button>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\nimport AccountInformation from \"./AccountInformation\";\n\n\nexport default class AppBar extends Component {\n  render() {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <div className=\"mr-auto\">\n          <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n            <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n          </button>\n        </div>\n\n        <div>\n          <AccountInformation/>\n        </div>\n      </Navbar>\n    )\n  }\n\n\n}\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./Appbar/AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}