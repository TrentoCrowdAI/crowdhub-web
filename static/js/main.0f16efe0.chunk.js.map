{"version":3,"sources":["Services/RunnableWorkflowService/models/Runs.js","Components/common/BackButton.js","Services/rest/utils.js","config.js","Components/common/LoadingContainer.js","images/menu.svg","Services/rest/WorkflowsService.js","Services/AuthService.js","Components/common/Breadcrumbs.js","Components/common/LoadingButton.js","Components/common/DeleteButtonAndModal.js","Services/rest/UsersService.js","Services/rest/ProjectCollaborationsService.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/AddNewCollaboration.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/CollaborationsList.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/ShareProjectButtonAndModal.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Workflows/WorkflowsList/CreateWorkflow/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/ShareWorkflowButtonAndModal.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Services/rest/ProjectsService.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/HtmlModalEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoBlockCost.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","Services/RunnableWorkflowService/adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockPortModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockPortFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/EditBlockingContextModalAndButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingCheckbox.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowInstructions.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","Services/RunnableWorkflowService/models/RunnableWorkflow.js","Services/RunnableWorkflowService/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/ReadOnlyWorkflowDashboard.js","Components/Workflows/WorkflowDashboard/EditableWorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Sidebar/Sidebar.js","Services/rest/AccountBalanceService.js","Components/Appbar/AccountInformation.js","Components/Appbar/AppBar.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js","Components/utils/events.js","Services/RunnableWorkflowService/models/Run.js","Services/rest/RunsService.js","Services/RunnableWorkflowService/models/BlockRun.js","Components/Projects/utils/route.js","Components/Login/Login.js"],"names":["Runs","runs","_this","this","Object","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","getLatestRun","containsRun","id","find","run","getId","getBlockRuns","blockId","map","getBlockRun","filter","blockRun","getFinishedRuns","isFinished","getRunningRuns","isRunning","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","__webpack_exports__","_ref","to","text","a","createElement","className","sendAndParseJSON","_callee","url","options","res","error","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","getOptionsWithAuthorizationHeadersIfSignedIn","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","AuthService","isInitialized","isSignedIn","getOptionsWithAuthorizationHeaders","headers","Authorization","concat","getBearerToken","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","d","WEBAPP_URL","API_URL","process","REACT_WEBAPP_URL","react_bootstrap__WEBPACK_IMPORTED_MODULE_0__","LoadingContainer","loading","children","animation","variant","module","exports","p","WORKFLOWS_URL","Errors","JSONtoWorkflow","id_project","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","projectId","parseInt","workflowToJSON","_ref2","name","description","graph","shared","getWorkflowsOfProject","_getWorkflowsOfProject","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","project","jsonList","_x","getWorkflow","_getWorkflow","workflow","_x2","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","log","info","t0","response","deleteWorkflow","_deleteWorkflow","saveAndStartWorkflow","_saveAndStartWorkflow","_callee6","_context6","startWorkflow","_startWorkflow","_callee7","_context7","estimateDoBlockCost","_estimateDoBlockCost","_callee8","workflowId","_context8","_authChangeListeners","auth2","init","_init","_waitForGapiToLoad","_loadAuth2Api","_notifyListeners","interval","setInterval","window","gapi","clearInterval","load","addOnAuthChangeListener","listener","push","renderSignInButton","containerId","onSignedIn","assertInitialized","signin2","render","onSuccess","forEach","get","signOut","_this2","currentUser","getAuthResponse","id_token","getUserInfo","getBasicProfile","LinkBreadcrumb","SimpleBreadcrumb","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","LoadingButton","isLoading","disabled","onClick","block","as","size","role","aria-hidden","DeleteButtonAndModal","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","react_default","DeleteButtonAndModal_DeleteModal","assign","onCancel","props","ignoreEventAnd","Component","DeleteModal","_Component2","_getPrototypeOf3","_len2","_key2","deleting","deleteError","onConfirmDeletion","asyncToGenerator","regenerator_default","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","Footer","Button","USERS_URL","JSONtoUser","email","imageUrl","picture","USER_SUGGETION_MIN_EMAIL_LENGTH","UsersService","findUsersByEmail","_findUsersByEmail","getById","_getById","PROJECT_COLLABORATIONS_URL","JSONToProjectCollaboration","userId","id_user","ProjectCollaborationsService","getCollaborationsOfProject","_getCollaborationsOfProject","createCollaboration","_createCollaboration","jsonToSend","receivedJSON","deleteCollaboration","_deleteCollaboration","collaborationId","AddNewCollaboration","fetchSuggestions","input","fetchSuggestionsFromService","users","filterUserAlreadyCollaborating","collaboratorIds","getUserIdsOfCollaborators","user","ownerId","collaboratorId","getCollaborations","collaboration","collaborations","Form","Group","Label","AddNewCollaboration_AutocompleteField","renderSuggestion","AddNewCollaboration_SuggestedUser","onCollaborationAdded","onSuggestionSelected","onAddUser","SuggestedUser","isAdding","added","_this3$props","_this3","_this$state","_this$props","ListGroupItem","Row","Col","xs","alt","src","AutocompleteField","DEFAULT_TIMEOUT","timeout","suggestions","isFetching","onInputChange","_this4","isTimeoutRunning","cancelTimeout","startTimeout","clearTimeout","setTimeout","onTimeoutElapsed","suggestion","_this5","_this$state2","fetchError","Control","onChange","e","target","ListGroup","CollaborationsList","onCollaborationDeleted","CollaborationsList_Collaboration","Collaboration","isRemoving","componentDidMount","fetchUser","getUserId","onRemoveUser","getCollaborationId","_ref4","ShareProjectButtonAndModal","ShareProjectButtonAndModal_ShareProjectModal","onClose","ShareProjectModal","fetchCollaborations","getProject","toConsumableArray","index","findIndex","splice","AddNewCollaboration_AddNewCollaboration","ProjectsTable","projects","onProjectDeleted","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","Link","ShareProjectButtonAndModal_ShareProjectButtonAndModal_ShareProjectButtonAndModal","ProjectsTable_EditButton","ProjectsTable_DeleteProjectButton","EditButton","_ref3","editProjectLink","DeleteProjectButton","DeleteButtonAndModal_DeleteButtonAndModal","ProjectsService","deleteProject","Title","ProjectsList","fetchProjects","componentWillUnmount","pendingProjectsRequest","getProjects","Container","Breadcrumb","Breadcrumbs","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","NoProjects","FetchProjectsError","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","type","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","BackButton","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","createProject","redirectToProjectsList","onProjectCreationFailed","history","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","WorkflowsService","objectSpread","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","ShareWorkflowButtonAndModal","ShareWorkflowButtonAndModal_ShareWorkflowModal","ShareWorkflowModal","isSaving","saveError","fetchWorkflow","getWorkflowId","shareWorkflow","unshareWorkflow","onSave","onWorkflowSharedOrUnshared","prevProps","prevState","snapshot","ShareWorkflowButtonAndModal_SharingPreferenceControl","SharingPreferenceControl","publicLink","getPublicLink","Check","checked","label","href","rel","PUBLIC_WORKFLOWS_PATH","WorkflowsTable","workflows","onWorkflowDeleted","onWorkflowUpdated","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WORKFLOWS_PATH","ShareWorkflowButtonAndModal_ShareWorkflowButtonAndModal","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","created_at","Date","updated_at","deleted_ad","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","fetchItemsByUrl","t1","items","_fetchItemsByUrl","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","event","onImport","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","InputGroup","FormControl","aria-label","Append","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","striped","bordered","ItemsTable_DeleteItemButton","onItemDeleted","keys","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsTable_ItemsTable","ProjectView","fetchProject","pendingProjectRequest","match","params","ProjectData","style","width","Tabs","defaultActiveKey","Tab","eventKey","title","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","EditProject","assertThisInitialized","updateProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","FetchingProject","UpdateProjectError","Projects_Projects","Projects","Switch","Route","path","exact","component","PROJECTS_URL","INVALID_WORKFLOW_DATA","JSONtoProject","projectToJSON","job","_getProjects","_getProject","jsonJob","_createProject","_updateProject","INVALID_PROJECT_DATA","_deleteProject","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","bem","strokeWidth","stroke","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","getModel","onModelUpdated","Model","parameters_Number","isRequired","isNaN","NumberWidget","Boolean","BooleanWidget","TextFromDropdownModel","getChoices","choice","choices","TextFromDropdown","onChangeValue","HtmlModalEditor","hideModal","ts","HtmlModel","Html","handleEditorChange","EditorComponent","getEditor","onEditorChange","initialValue","menubar","editorInModal","Editor","ChoiceBuilderModel","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","AddChoice","isNewChoiceValid","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onFilePicked","Prepend","display","accept","multiple","readOnly","height","boxSizing","CodeEditorModalAndButton","code","onUpdateCode","CodeEditorModal_CodeEditorModal","CodeEditorModal","onCodeEdited","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","b","Math","floor","random","toString","slice","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","isDisabled","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","Item","BlockingContext_BlockingContext","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","BlockingContext","DoBlockCostWidget","estimateCost","estimatedCost","estimationError","estimating","getBlockId","onCostEstimated","getEstimatedCost","getBlockModel","parent","setEstimatedCost","renderEstimatedCost","renderCostNeverEstimated","renderLatestEstimatedCost","toFixed","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","ParameterContainerLineSeparator","UnsupportedParameter","_ref5","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","DefaultBlockNodeModel","_DefaultNodeModel","blockRuns","_runs","getLabel","setId","setLabel","blockTypeDefinition","latestBlockRun","wasStarted","isFailed","getRunnableBlocksCount","getAllParentBlocks","getRunningBlocksCount","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","getPorts","DefaultNodeModel","parents","blockParents","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","Spinner","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","FAILED","RunStates","RUNNING","FINISHED","NOT_STARTED","DoBlockRunAdapter","getRunId","publishRun","getCacheId","getState","waitRun","_getBlockRunOrNotStarted","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","BlockPortModel","linkWouldCreateRecursiveDependence","blockDependsOnItself","getBlock","getLinksAsList","sourcePort","targetPort","visitedBlockIds","connectedBlocks","getConnectedBlocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","connectedBlock","return","DefaultPortModel","BlockPortFactory","initialConfig","DefaultPortFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","registerFactories","registerLinkFactory","registerPortFactory","registerLabelFactory","DefaultLabelFactory","registerNodeFactories","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","onModelUpdate","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadLinkFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ButtonToolbar","ToggleButtonGroup","defaultValue","format","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","DropdownDownload","RunsControls_RunsControls","RunsControls_ExecutionCard","RunsControls_ResultsCard","ExecutionCard","onStart","isStarting","startText","RunsControls_RunsProgressBar","ResultsCard","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","max","WorkflowRunsControls","startError","startedRunId","waitForRunStateReceived","runnableWorkflow","addRunsListener","getRuns","removeRunsListener","RunsService","getDownloadLink","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","borderColor","aria-describedby","DEFAULT_WORKER_BLOCKED_MESSAGE","BlockingContextsModel","_enableContextForAllDoBlocks","getBlockingContextModelsOfDoBlocks","getDoBlockModels","_disableContextForAllDoBlocks","isSingleBlockingContextEnabledForAllDoBlocks","onlyOneContext","getBlocksArray","blocksWithEnabledBlockingContext","areSomeBlockingContextsEnabled","setContexts","toRemove","removeAllBlockingContexts","getDefaultContext","addContext","removeContext","workerBlockedMessage","isBlockingContextValid","CreateBlockingContext","togglePopoverButton","popoverContent","showPopover","registerListenerToClosePopoverWhenUserClicksOutside","clickListenerToClosePopoverWhenUserClicksOutside","composedPath","hidePopover","onCreated","onAdd","unregisterListenerToClosePopoverWhenUserClicksOutside","document","removeEventListener","Overlay","placement","getElementById","Popover","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","getBlockingContextFromState","RandomColorPicker_RandomColorPicker","EditBlockingContextModalAndButton","EditBlockingContextModalAndButton_EditBlockingContextModal","EditBlockingContextModal","resetInputFields","updatePropsContext","_this2$state","onColorChange","onWorkerBlockedMessageChange","BlockingContextsCRUD","onAddBlockingContext","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","renderNoBlockingContextsYet","renderTable","BlockingContextsCRUD_BlockingContextsTableRow","BlockingContextsTableRow","EditBlockingContextModalAndButton_EditBlockingContextModalAndButton","BlockingContextsCRUD_DeleteBlockingContextCell","DeleteBlockingContextCell","onRemoveContext","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","mutateToSingleBlockingContextForAllDoBlocks","renderCheckboxIndeterminateState","checkbox","indeterminate","WorkflowBlockingSettings","WorkflowBlockingCheckbox_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowSidebar_WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","cacheId","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","stopPropagation","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","WorkflowGraphModel","blockingContexts","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","Navbar","WorkflowEditor_WorkflowInstructions","OverlayTrigger","overlay","Tooltip","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","isEditDisabled","onWorkflowEdited","serializeDiagram","isReadOnly","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditor_WorkflowEditor_WorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","getRunningBlockRuns","getFinishedBlockRuns","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","getRunsOfWorkflow","slicedToArray","startWatchingRunsStatus","stopWatchRunsStatus","ReadOnlyWorkflowDashboard","fetchRunnableWorkflow","getWorkflowIdFromUrl","getWorkflowIdFromSpecifiedProps","runnableWorkflowRequest","WorkflowEditorContainer_WorkflowEditorContainer","EditableWorkflowDashboard","Workflows_Workflows","Workflows_PublicWorkflows","Workflows","PublicWorkflows","Sidebar","fetchRuns","sidebarOpen","NavLink","Sidebar_LatestFinishedRunsList","Sidebar_RunningRunsList","LatestFinishedRunsList","Sidebar_JobsList","RunningRunsList","JobsList","ACCOUNT_BALANCE_URL","JSONtoBalances","AccountBalanceService","_cachedBalance","getBalances","_getBalances","balances","_isBalancesCached","_getCachedBalance","_cacheBalances","AccountInformation","trigger","AccountInformation_AccountInformationPopoverContent","AccountInformation_AccountInformationPreview","AccountInformationPreview","userInfo","getImageUrl","AccountInformationPopoverContent","_Component3","AccountInformation_PlatformBalances","AccountInformation_LogoutButton","PlatformBalances","_Component4","fetchBalances","pendingBalancesRequest","renderBalances","_this$state$balances","tolokaSandbox","tolokaNormal","f8","prepareNumber","balance","LogoutButton","loggingOut","loggedOut","onLogout","renderRedirect","Redirect","LOGIN_PATH","AppBar","expand","onToggleSidebar","menu","AccountInformation_AccountInformation","AuthenticatedAppRouter","authServiceInitialized","initAuthService","renderRouter","renderInitializingAuthService","AppRouter_AppRouter","AppRouter","AppRouter_PrivateRoute","AppRouter_NotLoggedInRoute","Login","PrivateRoute","NotLoggedInRoute","Layout","previousState","showSidebarAndAppBar","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","AppRouter_AuthenticatedAppRouter","tinymce","selector","plugins","App","Layout_Layout","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","callback","Run","createdAt","getCreatedAt","getFailedBlockRuns","RUNS_URL","JSONtoRun","id_workflow","BlockRun","id_cache","runsComparator","_getRuns","_getRunsOfWorkflow","_getRuns2","sort","freeze","runId","_Projects__WEBPACK_IMPORTED_MODULE_0__","signInButtonRendered","loggedIn","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","renderLogin","renderSignInButtonIfNeeded","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","marginTop","textAlign","setImmediate"],"mappings":"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","file":"static/js/main.0f16efe0.chunk.js","sourcesContent":["export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n\n  getRunningRuns = () => this.runs.filter(run => run.isRunning());\n}\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import AuthService from \"../AuthService\";\n\nasync function sendAndParseJSON(url, options) {\n  options = getOptionsWithAuthorizationHeadersIfSignedIn(options);\n  const res = await fetch(url, options);\n\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nconst getOptionsWithAuthorizationHeadersIfSignedIn = (options) => {\n  if (!AuthService.isInitialized() || !AuthService.isSignedIn()) {\n    return options;\n  }\n  return getOptionsWithAuthorizationHeaders(options);\n};\n\nconst getOptionsWithAuthorizationHeaders = (options) => {\n  options = options || {};\n  options.headers = options.headers || {};\n  options.headers.Authorization = `Bearer ${AuthService.getBearerToken()}`\n  return options;\n};\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, options) {\n  return await sendAndParseJSON(url, options);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","export const WEBAPP_URL = process.env.REACT_WEBAPP_URL || \"http://localhost:4000\";\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingContainer = ({loading, children}) => {\n  if (loading) {\n    return (\n      <div className=\"loading-spinner-container\">\n        <Spinner animation=\"border\" variant=\"primary\"/>\n      </div>\n    );\n  }\n  return children;\n};\n\n\nexport default LoadingContainer;\n","module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph, shared}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph,\n    shared\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] updateWorkflow()\");\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async saveAndStartWorkflow (workflow) {\n    console.log(\"[WorkflowsSerivice] saveAndStartWorkflow()\");\n    await this.updateWorkflow(workflow);\n    return await this.startWorkflow(workflow);\n  },\n\n  async startWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] startWorkflow()\");\n    return await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n  },\n\n  async estimateDoBlockCost (workflowId, blockId) {\n    return await postJSON(`${WORKFLOWS_URL}/${workflowId}/${blockId}/estimated-cost`);\n  }\n}\n","/* global gapi */\n\n/**\n * AuthService uses the Google Platform Library to authenticate users. This library is loaded from a script specified in\n * the index.html, where you can also find the client id.\n * Since the script exposes a global object gapi at an unknown time, this Service need to be initialized.\n * The initialization process will periodically check if the library is loaded until it can find the gapi global object\n */\nconst AuthService = {\n\n  _authChangeListeners: [],\n  auth2: null,\n\n  async init() {\n    await this._waitForGapiToLoad();\n    this.auth2 = await this._loadAuth2Api();\n    this._notifyListeners();\n  },\n\n  /**\n   * Wait until the Google Platform Library exposes the gapi global object\n   * @returns {Promise<any>}\n   * @private\n   */\n  _waitForGapiToLoad() {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (window.gapi) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n  },\n\n  /**\n   * Request to the Google Platform Library to load the auth2 module\n   * @returns {Promise<any>}\n   * @private\n   */\n  _loadAuth2Api() {\n    return new Promise(resolve => {\n      gapi.load('auth2', function () {\n        const auth2 = gapi.auth2.init();\n        resolve(auth2);\n      });\n    });\n  },\n\n  addOnAuthChangeListener(listener) {\n    this._authChangeListeners.push(listener);\n  },\n\n  renderSignInButton(containerId, onSignedIn) {\n    this.assertInitialized();\n    gapi.signin2.render(containerId, {\n      onSuccess: () => {\n        onSignedIn();\n        this._notifyListeners();\n      }\n    });\n  },\n\n  _notifyListeners() {\n    this._authChangeListeners.forEach(listener => listener())\n  },\n\n  isInitialized() {\n    return !!this.auth2;\n  },\n\n  isSignedIn() {\n    this.assertInitialized();\n    return this.auth2.isSignedIn.get();\n  },\n\n  signOut() {\n    this.assertInitialized();\n    return new Promise(resolve => this.auth2.signOut().then(() => {\n      resolve();\n      this._notifyListeners();\n    }));\n  },\n\n  getBearerToken () {\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getAuthResponse().id_token;\n  },\n\n  getUserInfo(){\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getBasicProfile();\n  },\n\n  assertInitialized () {\n    if(!this.isInitialized()) {\n      throw new Error('AuthService not initialized');\n    }\n  }\n\n};\n\nexport default AuthService;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isLoading, disabled, onClick, children, block, variant}) => (\n  <Button disabled={disabled || isLoading}\n          onClick={onClick}\n          className={block ? 'btn-block' : ''}\n          variant={variant || 'primary'}>\n    {\n      isLoading &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\nimport LoadingButton from \"./LoadingButton\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <LoadingButton variant=\"danger\"\n                         className=\"confirm\"\n                         onClick={this.onConfirmDeletion}\n                         isLoading={this.state.deleting}>Delete</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst USERS_URL = `${API_URL}/users`;\n\nconst JSONtoUser = ({id, data}) => ({\n  id,\n  email: data.email,\n  imageUrl: data.picture\n});\n\nexport const USER_SUGGETION_MIN_EMAIL_LENGTH = 4;\n\nexport default {\n  async findUsersByEmail(email) {\n    const jsonList = await getJSON(`${USERS_URL}?email=${email}`);\n    return jsonList.map(JSONtoUser);\n  },\n\n  async getById(id) {\n    const json = await getJSON(`${USERS_URL}/${id}`);\n    return JSONtoUser(json);\n  }\n};\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst PROJECT_COLLABORATIONS_URL = `${API_URL}/project-collaborations`;\n\nconst JSONToProjectCollaboration = ({id, id_project, id_user}) => ({\n  id,\n  projectId: id_project,\n  userId: id_user\n});\n\nexport const ProjectCollaborationToJSON = ({id, projectId, userId}) => ({\n  id,\n  projectId,\n  userId\n});\n\nexport default {\n  async getCollaborationsOfProject(projectId) {\n    const jsonList = await getJSON(`${PROJECT_COLLABORATIONS_URL}?projectId=${projectId}`);\n    return jsonList.map(JSONToProjectCollaboration);\n  },\n\n  async createCollaboration(projectId, userId) {\n    const jsonToSend = ProjectCollaborationToJSON({projectId, userId});\n    const receivedJSON = await postJSON(PROJECT_COLLABORATIONS_URL, jsonToSend);\n    return JSONToProjectCollaboration(receivedJSON);\n  },\n\n  async deleteCollaboration(collaborationId) {\n    await sendDelete(`${PROJECT_COLLABORATIONS_URL}/${collaborationId}`);\n  }\n};\n\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\nimport UsersService, {USER_SUGGETION_MIN_EMAIL_LENGTH} from \"../../../../Services/rest/UsersService\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\n\nexport default class AddNewCollaboration extends Component {\n\n  state = {};\n\n  fetchSuggestions = async (input) => {\n    if (input.length >= USER_SUGGETION_MIN_EMAIL_LENGTH) {\n      return await this.fetchSuggestionsFromService(input);\n    }\n    return [];\n  };\n\n  fetchSuggestionsFromService = async (input) => {\n    const users = await UsersService.findUsersByEmail(input);\n    return this.filterUserAlreadyCollaborating(users);\n  };\n\n  filterUserAlreadyCollaborating = (users) => {\n    const collaboratorIds = this.getUserIdsOfCollaborators();\n    return users\n      .filter(user => this.props.project.ownerId !== user.id)\n      .filter(user => collaboratorIds.find(collaboratorId => collaboratorId === user.id) == null);\n  };\n\n  getUserIdsOfCollaborators = () => this.getCollaborations().map(collaboration => collaboration.userId);\n\n  getCollaborations = () => this.props.collaborations;\n\n  render() {\n    const {project} = this.props;\n    return (\n      <div>\n        <h4>Add a new collaboration</h4>\n        <Form.Group>\n          <Form.Label>User email</Form.Label>\n          <AutocompleteField\n            fetchSuggestions={this.fetchSuggestions}\n            renderSuggestion={user => <SuggestedUser key={user.id}\n                                                     {...user}\n                                                     projectId={project.id}\n                                                     onCollaborationAdded={this.props.onCollaborationAdded}/>}\n            onSuggestionSelected={this.onAddUser}\n          />\n        </Form.Group>\n      </div>\n    );\n  }\n}\n\nclass SuggestedUser extends Component {\n\n  state = {\n    isAdding: false,\n    added: false\n  };\n\n  onAddUser = async () => {\n    const {projectId, id: userId} = this.props;\n    this.setState({isAdding: true});\n    try {\n      const collaboration = await ProjectCollaborationsService.createCollaboration(projectId, userId);\n      this.props.onCollaborationAdded(collaboration);\n      this.setState({added: true});\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isAdding: false});\n  };\n\n  render() {\n    const {isAdding, added} = this.state;\n    const {email, imageUrl} = this.props;\n    return (\n      <ListGroupItem className=\"collaborator-row\">\n        <Row>\n          <Col xs={2}>\n            <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n          </Col>\n          <Col xs={7}>{email}</Col>\n          <Col xs={3} className=\"action\">\n            {\n              added ?\n                <Button className=\"btn-block\" disabled variant=\"success\">Added</Button> :\n                <LoadingButton block isLoading={isAdding} onClick={this.onAddUser}>Add</LoadingButton>\n            }\n          </Col>\n        </Row>\n      </ListGroupItem>\n    )\n  }\n}\n\nclass AutocompleteField extends Component {\n\n  DEFAULT_TIMEOUT = 300;\n\n  timeout = null;\n\n  state = {\n    suggestions: [],\n    isFetching: false,\n\n    value: '',\n  };\n\n  onInputChange = (input) => {\n    this.setState({value: input});\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.startTimeout(input);\n  };\n\n  isTimeoutRunning = () => this.timeout !== null;\n\n  cancelTimeout = () => {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n  };\n\n  startTimeout = (input) => this.timeout = setTimeout(\n    () => this.onTimeoutElapsed(input),\n    this.DEFAULT_TIMEOUT\n  );\n\n  onTimeoutElapsed = async (input) => {\n    this.setState({isFetching: true});\n    try {\n      const suggestions = await this.props.fetchSuggestions(input);\n      this.setState({suggestions, isFetching: false});\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  onSuggestionSelected = (suggestion) => {\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.setState({\n      value: '',\n      suggestions: [],\n      isFetching: false\n    });\n    this.props.onSuggestionSelected(suggestion);\n  };\n\n  render() {\n    const {value, suggestions, isFetching, fetchError} = this.state;\n    const {renderSuggestion} = this.props;\n    return (\n      <div>\n        <Form.Control\n          className=\"mb-2\"\n          value={value}\n          onChange={(e) => this.onInputChange(e.target.value)}/>\n\n\n        <LoadingContainer loading={isFetching}>\n          {\n            fetchError &&\n            <span>Can't suggest users</span>\n          }\n\n          <ListGroup>\n            {\n              !fetchError &&\n              suggestions.map(renderSuggestion)\n            }\n          </ListGroup>\n        </LoadingContainer>\n      </div>\n    );\n  }\n}\n\n","import React, {Component} from \"react\";\nimport {Col, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\n\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport UsersService from \"../../../../Services/rest/UsersService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\n\n\nexport default ({collaborations, onCollaborationDeleted}) => (\n  <div>\n    <h4>Collaborations</h4>\n    <ListGroup>\n      {\n        collaborations.length <= 0 &&\n        <span>No collaborations</span>\n      }\n      {\n        collaborations.length > 0 && collaborations.map(collaboration => (\n          <Collaboration key={collaboration.id} {...collaboration} onCollaborationDeleted={onCollaborationDeleted}/>\n        ))\n      }\n    </ListGroup>\n  </div>\n);\n\nclass Collaboration extends Component {\n\n  state = {\n    isFetching: false,\n    user: null,\n\n    isRemoving: false\n  };\n\n  componentDidMount = () => this.fetchUser();\n\n  fetchUser = async () => {\n    this.setState({isFetching: true});\n    try {\n      const user = await UsersService.getById(this.getUserId());\n      this.setState({user});\n    } catch (e) {\n      console.log(e);\n      // TODO: Handle error\n    }\n    this.setState({isFetching: false});\n  };\n\n  getUserId = () => this.props.userId;\n\n  onRemoveUser = async () => {\n    this.setState({isRemoving: true});\n    try {\n      const id = this.getCollaborationId();\n      await ProjectCollaborationsService.deleteCollaboration(id);\n      this.props.onCollaborationDeleted(id);\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isRemoving: false})\n  };\n\n  getCollaborationId = () => this.props.id;\n\n  render() {\n    const {isRemoving, isFetching, user} = this.state;\n    const {email, imageUrl} = user || {};\n    return (\n      (\n        <ListGroupItem className=\"collaborator-row\">\n          <LoadingContainer loading={isFetching}>\n            <Row>\n              <Col xs={2}>\n                <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n              </Col>\n              <Col xs={7}>{email}</Col>\n              <Col xs={3} className=\"action\">\n                <LoadingButton isLoading={isRemoving} onClick={this.onRemoveUser}\n                               variant=\"danger\">Remove</LoadingButton>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </ListGroupItem>\n      )\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../../utils/events\";\nimport AddNewCollaboration from \"./AddNewCollaboration\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport CollaborationsList from \"./CollaborationsList\";\nimport \"./ShareProjectButtonAndModal.css\";\n\nexport default class ShareProjectButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareProjectModal show={this.state.show}\n                           onClose={this.onCloseModal}\n                           {...this.props}/>\n\n          <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass ShareProjectModal extends Component {\n\n  state = {\n    collaborations: null,\n    isFetching: false,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchCollaborations();\n\n  fetchCollaborations = async () => {\n    this.setState({collaborations: null, isFetching: true, fetchError: false});\n    try {\n      const collaborations = await ProjectCollaborationsService.getCollaborationsOfProject(this.getProject().id);\n      this.setState({collaborations});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n    this.setState({isFetching: false});\n  };\n\n  getProject = () => this.props.project;\n\n  onClose = () => this.props.onClose();\n\n  onCollaborationAdded = (collaboration) => this.setState({collaborations: [...this.state.collaborations, collaboration]});\n\n  onCollaborationDeleted = (id) => {\n    const {collaborations} = this.state;\n    const index = collaborations.findIndex(collaboration => collaboration.id === id);\n    if(index >= 0) {\n      collaborations.splice(index, 1);\n      this.setState({collaborations});\n    }\n  };\n\n  render() {\n    const {fetchError, collaborations, isFetching} = this.state;\n    const project = this.getProject();\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>Sharing preferences of project #{project.id}</Modal.Header>\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            <AddNewCollaboration collaborations={collaborations}\n                                 project={project}\n                                 onCollaborationAdded={this.onCollaborationAdded}/>\n            <CollaborationsList collaborations={collaborations}\n                                onCollaborationDeleted={this.onCollaborationDeleted}/>\n          </LoadingContainer>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ShareProjectButtonAndModal from \"./ShareProjectButtonAndModal/ShareProjectButtonAndModal\";\nimport \"./ProjectsTable.css\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td className=\"actions-cell\">\n        <ShareProjectButtonAndModal project={project}/>\n        <EditButton project={project}/>\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst EditButton = ({project}) => {\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n  return (\n    <Link to={editProjectLink} className=\"icon-button\">\n      <i className=\"fas fa-edit\"/>\n    </Link>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.projects && !this.state.fetchError}>\n          <Row>\n            {\n              !this.state.projects && this.state.fetchError &&\n              <FetchProjectsError/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length === 0 &&\n              <NoProjects/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length > 0 &&\n              <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n            }\n          </Row>\n        </LoadingContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">Create</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"./WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Alert, Button, Form, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport LoadingButton from \"../../common/LoadingButton\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport \"./ShareWorkflowButtonAndModal.css\";\nimport {PUBLIC_WORKFLOWS_PATH} from \"../Workflows\";\nimport {WEBAPP_URL} from \"../../../config\";\n\nexport class ShareWorkflowButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareWorkflowModal show={this.state.show}\n                            onClose={this.onCloseModal}\n                            {...this.props}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class ShareWorkflowModal extends Component {\n\n  state = {\n    workflow: null,\n\n    isFetching: false,\n    fetchError: false,\n\n    isSaving: false,\n    saveError: false\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.show && !prevProps.show) {\n      this.fetchWorkflow();\n    }\n  }\n\n  fetchWorkflow = async () => {\n    try {\n      this.setState({isFetching: true, fetchError: false});\n      const workflow = await WorkflowsService.getWorkflow(this.getWorkflowId());\n      this.setState({isFetching: false, fetchError: false, workflow});\n    } catch (e) {\n      this.setState({isFetching: false, fetchError: true});\n    }\n  };\n\n  getWorkflowId = () => this.props.workflow.id;\n\n  shareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: true}});\n\n  unshareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: false}});\n\n  onCancel = () => this.props.onClose();\n\n  onSave = async () => {\n    try {\n      this.setState({isSaving: true, saveError: false});\n      await WorkflowsService.updateWorkflow(this.state.workflow);\n      this.setState({isSaving: false, saveError: false});\n      this.props.onWorkflowSharedOrUnshared();\n      this.props.onClose();\n    } catch (e) {\n      this.setState({isSaving: false, saveError: true});\n    }\n  };\n\n  render() {\n    const {isFetching, fetchError, isSaving, saveError, workflow} = this.state;\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          Sharing preferences of workflow #{this.getWorkflowId()}\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            {\n              saveError &&\n              <Alert variant=\"danger\">\n                An error occurred while saving the sharing preferences.\n              </Alert>\n            }\n\n            {\n              workflow &&\n              <SharingPreferenceControl workflowId={workflow.id}\n                                        shared={!!workflow.shared}\n                                        shareWorkflow={this.shareWorkflow}\n                                        unshareWorkflow={this.unshareWorkflow}/>\n            }\n          </LoadingContainer>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={isSaving}>Cancel</Button>\n          <LoadingButton onClick={this.onSave} disabled={isFetching} isLoading={isSaving}>Save</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nconst SharingPreferenceControl = ({shared, workflowId, shareWorkflow, unshareWorkflow}) => {\n  const publicLink = getPublicLink(workflowId);\n  return (\n    <div>\n      <Form.Group>\n        <Form.Check\n          checked={!shared}\n          type=\"radio\"\n          label=\"Private Workflow\"\n          onChange={unshareWorkflow}\n        />\n        <p className=\"description-of-radio\">Workflow visible and editable only by the owner and collaborators</p>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Check\n          checked={shared}\n          type=\"radio\"\n          label=\"Public Workflow\"\n          onChange={shareWorkflow}\n        />\n        <p className=\"description-of-radio\">\n          Workflow visible by anyone and editable only by the owner and collaborators.\n          Public Link: <a href={publicLink} target=\"_blank\" rel=\"noopener noreferrer\">{publicLink}</a>\n        </p>\n      </Form.Group>\n    </div>\n  );\n};\n\nconst getPublicLink = (workflowId) => `${WEBAPP_URL}/#${PUBLIC_WORKFLOWS_PATH}/${workflowId}`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {ShareWorkflowButtonAndModal} from \"./ShareWorkflowButtonAndModal\";\nimport \"./WorkflowTable.css\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowUpdated, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}\n                           onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n        <i className={`share-status-icon fas ${workflow.shared ? 'fa-unlock' : 'fa-lock'}`}/>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <ShareWorkflowButtonAndModal workflow={workflow} onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id,\n      workflows: null,\n      fetchError:false\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.workflows && !this.state.fetchError}>\n          <Row>\n            <Col>\n              {\n                this.state.fetchError &&\n                <FetchingWorkflowsError/>\n              }\n\n              {\n                this.state.workflows &&\n                <WorkflowsTable workflows={this.state.workflows}\n                                onWorkflowDeleted={this.fetchWorkflows}\n                                onWorkflowSharedOrUnshared={this.fetchWorkflows}/>\n              }\n            </Col>\n          </Row>\n        </LoadingContainer>\n      </Container>\n    );\n  }\n}\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      items: await this.fetchItemsByUrl()\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async fetchItemsByUrl (csvUrl) {\n\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <LoadingContainer loading={!this.state.items}>\n          <Container className=\"items-table-container\">\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          </Container>\n        </LoadingContainer>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <LoadingContainer loading={!this.state.project}>\n            <Row>\n              <ProjectData project={this.state.project}/>\n\n              <div style={{width: '100%'}}>\n                <hr/>\n\n                <Tabs defaultActiveKey=\"workflow\">\n                  <Tab eventKey=\"workflow\" title=\"Workflows\">\n                    <EmbeddableWorkflowsList project={this.state.project}/>\n                  </Tab>\n\n                  <Tab eventKey=\"items\" title=\"Items\">\n                    <ItemsView project={this.state.project}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Row>\n        </LoadingContainer>\n\n      </Container>\n    );\n  }\n}\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n  json.ownerId = json.id_user;\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nexport default class HtmlModalEditor extends Component {\n\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <div>\n        <Button disabled={this.props.disabled} className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n\n        <Modal show={this.state.show} size=\"lg\">\n          <Modal.Header>{this.props.title}</Modal.Header>\n\n          <Modal.Body>\n            <Editor {...this.props}/>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button onClick={this.hideModal}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport HtmlModalEditor from \"./HtmlModalEditor\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const EditorComponent = this.getEditor();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <EditorComponent onEditorChange={this.handleEditorChange}\n                         initialValue={model.getValue()}\n                         init={{menubar: false}}\n                         disabled={this.props.disabled}\n                         title={definition.displayName}/>\n      </Form.Group>\n    );\n  }\n\n  getEditor() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    if (definition.editorInModal) {\n      return HtmlModalEditor;\n    }\n    return Editor;\n  }\n\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle disabled={this.isDisabled()} className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle disabled={this.isDisabled()}\n                       className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html/Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\nimport DoBlockCost from \"./DoBlockCost\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext,\n  DoBlockCost\n]);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\n\nclass DoBlockCostWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimatedCost: this.getModel().getEstimatedCost(),\n      estimationError: false,\n      estimating: false\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  estimateCost = async () => {\n    this.setState({estimatedCost: null, estimationError: false, estimating: true});\n    try {\n      const estimatedCost = await WorkflowsService.estimateDoBlockCost(\n        this.getWorkflowId(), this.getBlockId()\n      );\n      this.onCostEstimated(estimatedCost);\n    } catch (e) {\n      this.setState({estimatedCost: null, estimationError: true, estimating: false});\n    }\n  };\n\n  getWorkflowId() { // TODO: Clear\n    const blockModel = this.getBlockModel();\n    const workflowModel = blockModel.parent;\n    return workflowModel.workflowId;\n  }\n\n  getBlockModel() {\n    return this.getModel().blockModel;\n  }\n\n  getBlockId() {\n    const blockModel = this.getBlockModel();\n    return blockModel.id;\n  }\n\n  onCostEstimated(estimatedCost) {\n    this.setState({estimatedCost, estimationError: false, estimating: false});\n    this.getModel().setEstimatedCost(estimatedCost);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderEstimatedCost()}\n\n        <LoadingButton block onClick={this.estimateCost}\n                       isLoading={this.state.estimating}\n                       disabled={this.props.disabled}>\n          Estimate cost\n        </LoadingButton>\n      </div>\n    );\n  }\n\n  renderEstimatedCost() {\n    if (this.state.estimatedCost === null) {\n      return this.renderCostNeverEstimated();\n    }\n    return this.renderLatestEstimatedCost();\n  }\n\n  renderCostNeverEstimated() {\n    return (\n      <Form.Text className=\"text-muted\">\n        The cost of this block has never been estimated. Click the button below to estimate it.\n      </Form.Text>\n    );\n  }\n\n  renderLatestEstimatedCost() {\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          The latest estimated cost is: <strong>{this.state.estimatedCost}$</strong>.\n          Click the button below to estimate it again.\n        </Form.Text>\n      </div>\n    );\n  }\n}\n\nclass DoBlockCostModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n\n  setEstimatedCost(estimatedCost) {\n    if (estimatedCost) {\n      estimatedCost = estimatedCost.toFixed(2);\n    }\n    this.setValue(estimatedCost);\n  }\n\n  getEstimatedCost() {\n    return this.getValue();\n  }\n}\n\nexport default {\n  type: 'doBlockCost',\n  Widget: DoBlockCostWidget,\n  Model: DoBlockCostModel\n}\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../Services/RunnableWorkflowService/models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getPortsAsList () {\n    return Object.values(this.getPorts());\n  }\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED, NOT_STARTED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, blockId);\n    this.waitRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, `${blockId}_wait`);\n  }\n\n  static _getBlockRunOrNotStarted = (run, blockId) => run.getBlockRun(blockId) || {getState: () => NOT_STARTED};\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../Services/RunnableWorkflowService/adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DefaultPortModel} from \"storm-react-diagrams\";\n\nexport default class BlockPortModel extends DefaultPortModel {\n\n  canLinkToPort(port) {\n    if (!super.canLinkToPort(port)) {\n      return false;\n    }\n    const linkWouldCreateRecursiveDependence = BlockPortModel.blockDependsOnItself(this.getBlock());\n    if (linkWouldCreateRecursiveDependence) {\n      console.info(\"Link prevented to avoid recursive dependencies\");\n    }\n    return !linkWouldCreateRecursiveDependence;\n  }\n\n  getBlock() {\n    return this.parent;\n  }\n\n  getConnectedBlocks() {\n    return this.getLinksAsList()\n      .map(link => link.sourcePort === this ? link.targetPort : link.sourcePort)\n      .map(port => port.getBlock());\n  }\n\n  getLinksAsList() {\n    return Object.values(this.getLinks());\n  }\n\n  static blockDependsOnItself(block, visitedBlockIds = {}) {\n    visitedBlockIds[block.getId()] = true;\n    const outPort = block.getPort('out');\n    const connectedBlocks = outPort.getConnectedBlocks();\n    for (let connectedBlock of connectedBlocks) {\n      if (visitedBlockIds[connectedBlock.getId()]) {\n        return true;\n      }\n      if (BlockPortModel.blockDependsOnItself(connectedBlock, visitedBlockIds)) {\n        return true;\n      }\n    }\n    visitedBlockIds[block.getId()] = false;\n    return false;\n  }\n\n}\n","import {DefaultPortFactory} from \"storm-react-diagrams\";\nimport BlockPortModel from \"../models/BlockPortModel\";\n\nexport default class BlockPortFactory extends DefaultPortFactory{\n\n  getNewInstance(initialConfig) {\n    return new BlockPortModel();\n  }\n}\n","import {DefaultLabelFactory, DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\nimport BlockPortFactory from \"./factories/BlockPortFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.registerFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  registerFactories() {\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.registerPortFactory(new BlockPortFactory());\n    this.registerLabelFactory(new DefaultLabelFactory());\n    this.registerNodeFactories();\n  }\n\n  registerNodeFactories () {\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.props.onModelUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadLinkFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, isLatest, id}) => (\n  <Dropdown.Item href={link} target=\"_blank\">\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default (props) => (\n  <div>\n    {\n      !props.readOnly &&\n      <ExecutionCard {...props}/>\n    }\n\n    <ResultsCard {...props}/>\n  </div>\n);\n\nconst ExecutionCard = ({runnable, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <Card>\n    <Card.Header>Execution</Card.Header>\n\n    <Card.Body>\n      {\n        runnable.isRunning() &&\n        <div>\n          Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n          Progress:<br/>\n          <RunsProgressBar runnable={runnable}/>\n        </div>\n      }\n\n      <LoadingButton block onClick={onStart}\n                     disabled={!runnable.canStart()}\n                     isLoading={isStarting}>{startText}</LoadingButton>\n\n    </Card.Body>\n  </Card>\n);\n\nconst ResultsCard = ({runnable, downloadLinkFactory}) => (\n  <Card className=\"mt-2\">\n    <Card.Header>Results</Card.Header>\n    <Card.Body>\n      <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                        runnable={runnable}/>\n    </Card.Body>\n  </Card>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.saveAndStartWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow, readOnly} = this.props;\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}\n                      readOnly={readOnly}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    borderColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import {DoBlockNodeModel} from \"./DoBlockNodeModel\";\n\nexport const DEFAULT_WORKER_BLOCKED_MESSAGE = \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\";\n\nexport default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById(id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableContextForAllDoBlocks(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    id: 'default-blocking-context',\n    name: 'Default',\n    color: '#ffaff3',\n    workerBlockedMessage: \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\"\n  });\n\n  _enableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(context.id));\n\n  getBlockingContextModelsOfDoBlocks = () => this.getDoBlockModels()\n    .map(block => block.getBlockingContextModelParameter());\n\n  getDoBlockModels() {\n    return this.graphModel.getBlocksArray().filter(block => block instanceof DoBlockNodeModel);\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => {\n      this._disableContextForAllDoBlocks(context);\n      this.removeContext(context)\n    });\n  }\n\n  _disableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => blockingContextModel.getBlockingContextId() === context.id)\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(null));\n\n\n  isSingleBlockingContextEnabledForAllDoBlocks = () => {\n    const onlyOneContext = this.getContexts().length === 1;\n    const blocks = this.graphModel.getBlocksArray();\n    const blocksWithEnabledBlockingContext = this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId());\n    return onlyOneContext && blocks.length === blocksWithEnabledBlockingContext.length;\n  };\n\n\n  areSomeBlockingContextsEnabled = () =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId())\n      .length > 0;\n\n}\n\n\nexport const isBlockingContextValid = ({name, workerBlockedMessage}) =>\n  name && name.length >= 0 && workerBlockedMessage\n  && workerBlockedMessage.length >= 0;\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport \"./CreateBlockingContext.css\";\nimport {\n  DEFAULT_WORKER_BLOCKED_MESSAGE,\n  isBlockingContextValid\n} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport default class CreateBlockingContext extends Component {\n\n  togglePopoverButton = React.createRef();\n  popoverContent = React.createRef();\n\n  state = {\n    show: false\n  };\n\n  showPopover = () => {\n    this.setState({show: true});\n    this.registerListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  registerListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.addEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  clickListenerToClosePopoverWhenUserClicksOutside = (e) => {\n    const popoverContent = this.popoverContent.current;\n    const clickInPopover = e.composedPath().indexOf(popoverContent) >= 0;\n    if (!clickInPopover) {\n      this.hidePopover();\n    }\n  };\n\n  onCreated = (context) => {\n    this.hidePopover();\n    this.props.onAdd(context);\n  };\n\n  hidePopover = () => {\n    this.setState({show: false});\n    this.unregisterListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  unregisterListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.removeEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\"\n                onClick={this.showPopover}\n                ref={this.togglePopoverButton}>Add blocking context</Button>\n        <Overlay\n          id=\"create-blocking-context-popover-container\"\n          show={this.state.show}\n          placement=\"left\"\n          target={this.togglePopoverButton.current}\n          container={document.getElementById('workflow-editor')}>\n\n          <Popover title=\"Create blocking context\"\n                   id=\"create-blocking-context-popover\"\n                   placement=\"left\">\n            <div ref={this.popoverContent}>\n              <CreateBlockingContextPopover onCreated={this.onCreated}/>\n            </div>\n          </Popover>\n        </Overlay>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n  state = {\n    name: '',\n    color: null,\n    workerBlockedMessage: DEFAULT_WORKER_BLOCKED_MESSAGE\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      ...this.getBlockingContextFromState()\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Form.Row>\n        <Col xs=\"12\">\n          <Form.Group>\n            <Form.Control name=\"name\"\n                          type=\"text\"\n                          placeholder=\"Blocking context name\"\n                          value={name}\n                          onChange={this.onNameChange}/>\n          </Form.Group>\n        </Col>\n        <Col xs=\"8\">\n          <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n        </Col>\n        <Col xs=\"4\">\n          <Button className=\"btn-block\"\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}\n                  onClick={this.onAdd}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nimport {ignoreEventAnd} from \"../../../../../../utils/events\";\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport {isBlockingContextValid} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport class EditBlockingContextModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <EditBlockingContextModal show={this.state.show}\n                                  onClose={this.onCloseModal}\n                                  context={this.props.context}\n                                  onModelUpdate={this.props.onModelUpdate}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-edit\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass EditBlockingContextModal extends Component {\n\n  state = {\n    name: null,\n    color: null,\n    workerBlockedMessage: null\n  };\n\n  componentDidMount() {\n    this.resetInputFields();\n  }\n\n  resetInputFields = () => this.setState({...this.props.context});\n\n  onSave = () => {\n    this.updatePropsContext();\n    this.props.onClose();\n  };\n\n  updatePropsContext = () => {\n    const {name, color, workerBlockedMessage} = this.state;\n    const context = this.props.context;\n    context.name = name;\n    context.color = color;\n    context.workerBlockedMessage = workerBlockedMessage;\n    this.props.onModelUpdate();\n  };\n\n  onCancel = () => {\n    this.resetInputFields();\n    this.props.onClose();\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onColorChange = (color) => this.setState({color});\n\n  onWorkerBlockedMessageChange = (workerBlockedMessage) => {\n    this.setState({workerBlockedMessage});\n  };\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  render() {\n    const {name, color, workerBlockedMessage} = this.state;\n    // TODO: Handle disabled state\n    return (\n      <Modal show={this.props.show} size=\"xl\">\n        <Modal.Header>\n          Blocking context editor\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Row>\n            <Col xs=\"12\" sm=\"9\">\n              <Form.Group>\n                <Form.Control name=\"name\"\n                              type=\"text\"\n                              placeholder=\"Blocking context name\"\n                              value={name}\n                              onChange={this.onNameChange}/>\n              </Form.Group>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <RandomColorPicker color={color} onChange={this.onColorChange}/>\n            </Col>\n          </Form.Row>\n          <Row>\n            <Col>\n              <Editor onEditorChange={this.onWorkerBlockedMessageChange}\n                      initialValue={workerBlockedMessage}\n                      init={{menubar: false}}/>\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n          <Button className=\"confirm\"\n                  onClick={this.onSave}\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\nimport {EditBlockingContextModalAndButton} from \"./EditBlockingContextModalAndButton\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.props.onModelUpdate();\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const {disabled} = this.props;\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Blocking contexts</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}\n                               onModelUpdate={this.props.onModelUpdate}\n                               disabled={disabled}/>\n\n        {\n          !disabled &&\n          <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n        }\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n\n  getBlockingContextsModel = () => this.props.model;\n\n  getContexts = () => this.getBlockingContextsModel().getContexts();\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const contexts = this.getContexts();\n    if (contexts.length <= 0) {\n      return this.renderNoBlockingContextsYet();\n    }\n\n    return this.renderTable();\n  }\n\n  renderNoBlockingContextsYet = () => (\n    <Form.Text className=\"text-muted\">\n      No blocking contexts created yet in this workflow\n    </Form.Text>\n  );\n\n  renderTable = () => (\n    <Table striped bordered hover size=\"sm\" className=\"blocking-contexts-table\">\n      <thead>\n      <tr>\n        <th/>\n        <th className=\"name-column\">Name</th>\n\n        {\n          /* actions column */\n          !this.isDisabled() &&\n          <th/>\n        }\n      </tr>\n      </thead>\n      <tbody>\n\n      {\n        this.getContexts().map(context => (\n          <BlockingContextsTableRow key={context.id}\n                                    context={context}\n                                    disabled={this.isDisabled()}\n                                    blockingContextsModel={this.getBlockingContextsModel()}\n                                    onModelUpdate={this.props.onModelUpdate}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nconst BlockingContextsTableRow = ({context, disabled, blockingContextsModel, onModelUpdate}) => (\n  <tr>\n    <td className=\"color-box-container\">\n      <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n    </td>\n    <td>{context.name}</td>\n    {\n      /* actions cell */\n      !disabled &&\n      <td className=\"actions-cell\">\n        <div className=\"actions\">\n\n          {/* edit */}\n          <EditBlockingContextModalAndButton context={context}\n                                             onModelUpdate={onModelUpdate}/>\n\n          {/* delete */}\n          <DeleteBlockingContextCell blockingContextsModel={blockingContextsModel}\n                                     context={context}\n                                     onModelUpdate={onModelUpdate}/>\n        </div>\n\n      </td>\n    }\n  </tr>\n);\n\n\nclass DeleteBlockingContextCell extends Component {\n\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.blockingContextsModel;\n\n  render() {\n    const {context} = this.props;\n    return (\n      <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            If checked, one worker will be able to work only on one job of this workflow. When indeterminate, workers\n            won't be able to work on job of the same blocking context\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Block workers\"\n                      checked={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}\n                      disabled={this.props.disabled}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSingleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\nimport WorkflowBlockingCheckbox from \"./WorkflowBlockingCheckbox\";\n\nconst WorkflowBlockingSettings = ({graphModel, onModelUpdate, disabled}) => (\n  <ParameterContainerCard title=\"Blocking workers\">\n    <WorkflowBlockingCheckbox graphModel={graphModel}\n                              onModelUpdate={onModelUpdate}\n                              disabled={disabled}/>\n\n    <BlockingContextsCRUD graphModel={graphModel}\n                          onModelUpdate={onModelUpdate}\n                          disabled={disabled}/>\n  </ParameterContainerCard>\n);\n\nexport default WorkflowBlockingSettings;\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel, readOnly}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  const disabled = readOnly;\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={disabled}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}\n                                    disabled={disabled}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}\n                                readOnly={readOnly}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n\n    /**\n     * NOTE: When you'll implement the start block feature, take a look at how the start workflow is implemented\n     */\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}\n                         readOnly={this.props.readOnly}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow, disabled, readOnly}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={disabled}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={disabled}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block}\n                           runnableWorkflow={runnableWorkflow}\n                           disabled={disabled}\n                           readOnly={readOnly}/>\n      </div>\n    }\n  />\n);\n\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel(this);\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\nimport \"./WorkflowSaveBar.css\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed, saveError, disabled}) => {\n  const isValid = graphModel.isValid();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          disabled &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n\n        {\n          !disabled && saveError &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Error while saving the workflow\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || disabled}\n                     isLoading={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React from \"react\";\nimport {Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nimport \"./WorkflowInstructions.css\";\n\nexport default () => (\n  <OverlayTrigger\n    placement=\"bottom\"\n    overlay={\n      <Tooltip >\n        To remove a link hold <strong>shift</strong> and click the link with the right mouse button.\n      </Tooltip>\n    }\n  >\n    <Button className=\"instructions-trigger\"  variant=\"secondary\"><i className=\"far fa-question-circle\"/></Button>\n  </OverlayTrigger>\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\nimport WorkflowInstructions from \"./WorkflowInstructions\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  constructor(props) {\n    super(props);\n    const {runnableWorkflow} = this.props;\n    this.graphModel.workflowId = runnableWorkflow.getWorkflow().id;\n  }\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    this.graphModel.setLocked(this.isEditDisabled());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.onModelUpdated();\n  };\n\n  onModelUpdated = () => {\n    console.log(\"[WorkflowEditor] onModelUpdated()\");\n    this.onWorkflowEdited();\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onModelUpdated();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  isReadOnly = () => this.props.readOnly;\n\n  isEditDisabled = () => this.isReadOnly() || !this.props.runnableWorkflow.canBeEdited();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\" id=\"workflow-editor\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            !this.isEditDisabled() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}\n              onModelUpdate={this.onModelUpdated}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n            <WorkflowInstructions/>\n\n            {\n              !this.isReadOnly() &&\n              <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                               graphModel={this.graphModel}\n                               onSavePressed={this.onSavePressed}\n                               isSaving={this.props.isSaving}\n                               saveError={this.props.saveError}\n                               disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={this.onModelUpdated}\n                                          runnableWorkflow={runnableWorkflow}\n                                          readOnly={this.isReadOnly()}\n                                          disabled={this.isEditDisabled()}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={this.onModelUpdated}\n                                 readOnly={this.isReadOnly()}\n                                 disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <LoadingContainer loading={this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow}>\n        <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n      </LoadingContainer>\n    )\n  }\n}\n\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"../rest/WorkflowsService\";\nimport RunnableWorkflow from \"./models/RunnableWorkflow\";\nimport RunsService from \"../rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\n\nexport default class ReadOnlyWorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.getWorkflowIdFromUrl() !== this.getWorkflowIdFromSpecifiedProps(prevProps)) {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    }\n  }\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n    this.setState({runnableWorkflow: null});\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.getWorkflowIdFromSpecifiedProps(this.props);\n\n  getWorkflowIdFromSpecifiedProps = (props) => props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      readOnly/>;\n  }\n}\n","import React from 'react';\n\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport ReadOnlyWorkflowDashboard from \"./ReadOnlyWorkflowDashboard\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditableWorkflowDashboard extends ReadOnlyWorkflowDashboard {\n\n  constructor(props) {\n    super(props);\n    this.state.isSaving = false;\n    this.state.saveError = false;\n  }\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditableWorkflowDashboard from \"./WorkflowDashboard/EditableWorkflowDashboard\";\nimport ReadOnlyWorkflowDashboard from \"./WorkflowDashboard/ReadOnlyWorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\nexport const PUBLIC_WORKFLOWS_PATH = \"/public-workflows\";\n\n\nexport const Workflows = () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditableWorkflowDashboard}/>\n  </Switch>\n);\n\nexport const PublicWorkflows = () => (\n  <Switch>\n    <Route path={`${PUBLIC_WORKFLOWS_PATH}/:id`} exact component={ReadOnlyWorkflowDashboard}/>\n  </Switch>\n);\n\n","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Sidebar.css';\nimport RunsService from \"../../Services/rest/RunsService\";\nimport {WORKFLOWS_PATH} from \"../Workflows/Workflows\";\n\nconst MAX_RUNS_IN_LIST = 5;\n\nexport default class Sidebar extends Component {\n\n  state = {\n    runs: null\n  };\n\n  componentDidMount = () => this.fetchRuns();\n\n  async fetchRuns() {\n    try {\n      const runs = await RunsService.getRuns();\n      this.setState({runs});\n    } catch (e) {\n      // TODO: Handle error\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ul className=\"sidebar-list\">\n          <li>\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </li>\n\n          <li>\n            <LatestFinishedRunsList runs={this.state.runs}/>\n          </li>\n\n          <li>\n            <RunningRunsList runs={this.state.runs}/>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\nconst LatestFinishedRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching latest finished runs ...</p>;\n  }\n  return (\n    <div>\n      Latest finished runs\n      <JobsList runs={runs.getFinishedRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst RunningRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching running runs ...</p>;\n  }\n  return (\n    <div>\n      Running runs\n      <JobsList runs={runs.getRunningRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst JobsList = ({runs}) => (\n  <ul>\n    {\n      runs.map(run => (\n        <li key={run.id}>\n          <NavLink to={`${WORKFLOWS_PATH}/${run.getWorkflowId()}`}>\n            #{run.id}\n          </NavLink>\n        </li>\n      ))\n    }\n  </ul>\n);\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ACCOUNT_BALANCE_URL = `${API_URL}/account-balance`;\n\n\nexport const JSONtoBalances = json => json;\n\nexport default {\n\n  _cachedBalance: null,\n\n  async getBalances() {\n    if (this._isBalancesCached()) {\n      return this._getCachedBalance();\n    }\n    const json = await getJSON(ACCOUNT_BALANCE_URL);\n    const balances = JSONtoBalances(json);\n    this._cacheBalances(balances);\n    return balances;\n  },\n\n  _isBalancesCached() {\n    return !!this._getCachedBalance();\n  },\n\n  _getCachedBalance() {\n    return this._cachedBalance;\n  },\n\n  _cacheBalances(balances) {\n    this._cachedBalance = balances;\n  }\n}\n\n","import React, {Component} from 'react';\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\nimport \"./AccountInformation.css\";\nimport {makeCancellable} from \"../../Services/rest/utils\";\nimport AccountBalanceService from \"../../Services/rest/AccountBalanceService\";\nimport LoadingContainer from \"../common/LoadingContainer\";\nimport AuthService from \"../../Services/AuthService\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport {LOGIN_PATH} from \"../Login/Login\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class AccountInformation extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        overlay={\n          <Popover id=\"account-information-popover\"\n                   title=\"Account information\">\n            <AccountInformationPopoverContent/>\n          </Popover>\n        }>\n\n        <div>\n          <AccountInformationPreview/>\n        </div>\n      </OverlayTrigger>\n    );\n  }\n}\n\nclass AccountInformationPreview extends Component {\n  render() {\n    const userInfo = AuthService.getUserInfo();\n    return (\n      <div>\n        <span>{userInfo.getName()}</span>\n        <img className=\"user-avatar\" src={userInfo.getImageUrl()} alt=\"user avatar\"/>\n      </div>\n    );\n  }\n}\n\n\nexport class AccountInformationPopoverContent extends Component {\n  render() {\n    return (\n      <div>\n        <PlatformBalances/>\n\n        <hr/>\n\n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n\n\nexport class PlatformBalances extends Component {\n\n  pendingBalancesRequest;\n\n  state = {\n    balances: null,\n    fetchError: false\n  };\n\n  componentDidMount = async () => await this.fetchBalances();\n\n  componentWillUnmount = () => this.pendingBalancesRequest.cancel();\n\n  fetchBalances = async () => {\n    this.setState({balances: null, fetchError: false});\n    try {\n      this.pendingBalancesRequest = makeCancellable(AccountBalanceService.getBalances());\n      const balances = await this.pendingBalancesRequest.result;\n      this.setState({balances, fetchError: false});\n    } catch (e) {\n      this.setState({balances: null, fetchError: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"balances-container\">\n        <h6>Balances</h6>\n\n        <LoadingContainer loading={!this.state.balances && !this.state.fetchError}>\n          {\n            !this.state.balances && this.state.fetchError &&\n            <p>Error</p>\n          }\n\n          {\n            this.state.balances && !this.state.fetchError &&\n            this.renderBalances()\n          }\n        </LoadingContainer>\n      </div>\n    );\n  }\n\n  static prepareNumber = (balance) => typeof balance === \"number\" ? balance.toFixed(2) : \"not available\";\n\n  renderBalances = () => {\n    const {tolokaSandbox, tolokaNormal, f8} = this.state.balances;\n    return (\n      <div>\n        <strong>Toloka Sandbox</strong>: {PlatformBalances.prepareNumber(tolokaSandbox)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(tolokaNormal)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(f8)}$<br/>\n      </div>\n    );\n  };\n\n}\n\n\nclass LogoutButton extends Component {\n\n  state = {\n    loggingOut: false,\n    loggedOut: false\n  };\n\n  onLogout = async () => {\n    this.setState({loggingOut: true});\n    try {\n      await AuthService.signOut();\n      this.setState({loggedOut: true});\n    } catch (e) {\n      console.error(e);\n      // TODO: Handle error\n    }\n    this.setState({loggingOut: false});\n  };\n\n  render() {\n    if (this.state.loggedOut) {\n      return this.renderRedirect();\n    }\n    return (\n      <LoadingButton isLoading={this.state.loggingOut} onClick={this.onLogout} block>Logout</LoadingButton>\n    );\n  }\n\n  renderRedirect = () => (\n    <Redirect to={LOGIN_PATH}/>\n  );\n}\n","import React, {Component} from 'react';\nimport menu from \"../../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\nimport AccountInformation from \"./AccountInformation\";\n\n\nexport default class AppBar extends Component {\n  render() {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <div className=\"mr-auto\">\n          <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n            <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n          </button>\n        </div>\n\n        <div>\n          <AccountInformation/>\n        </div>\n      </Navbar>\n    )\n  }\n\n\n}\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport {PUBLIC_WORKFLOWS_PATH, PublicWorkflows, Workflows, WORKFLOWS_PATH} from \"./Workflows/Workflows\";\nimport AuthService from '../Services/AuthService';\nimport Login, {LOGIN_PATH} from \"./Login/Login\";\nimport LoadingContainer from \"./common/LoadingContainer\";\n\n\nexport default class AuthenticatedAppRouter extends Component {\n\n  state = {\n    authServiceInitialized: false\n  };\n\n  componentDidMount = () => this.initAuthService();\n\n  initAuthService = async () => {\n    await AuthService.init();\n    this.setState({authServiceInitialized: true});\n  };\n\n  render() {\n    if (!this.state.authServiceInitialized) {\n      return this.renderInitializingAuthService();\n    }\n    return this.renderRouter();\n  }\n\n  renderInitializingAuthService() {\n    return (\n      <div style={{height: '100vh'}}>\n        <LoadingContainer loading/>\n      </div>\n    );\n  }\n\n  renderRouter() {\n    return (\n      <AppRouter/>\n    );\n  }\n}\n\nconst AppRouter = () => (\n  <Switch>\n    {/* private routes */}\n    <PrivateRoute path={PROJECTS_PATH} component={Projects}/>\n    <PrivateRoute path={WORKFLOWS_PATH} component={Workflows}/>\n\n    {/* only public routes */}\n    <NotLoggedInRoute path={LOGIN_PATH} component={Login}/>\n\n    {/* private or public routes */}\n    <Route path={PUBLIC_WORKFLOWS_PATH} component={PublicWorkflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={PROJECTS_PATH}/>)}/>\n  </Switch>\n);\n\nconst PrivateRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Component/> :\n           <Redirect to={LOGIN_PATH}/>\n         }/>\n);\n\n\nconst NotLoggedInRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Redirect to={PROJECTS_PATH}/> :\n           <Component/>\n         }/>\n);\n\n\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./Appbar/AppBar\";\nimport AuthenticatedAppRouter from \"./AppRouter\";\nimport AuthService from \"../Services/AuthService\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  componentDidMount() {\n    AuthService.addOnAuthChangeListener(() => this.forceUpdate());\n  }\n\n  render() {\n    const showSidebarAndAppBar = AuthService.isInitialized() && AuthService.isSignedIn();\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {\n            /* Left collapsable sidebar */\n            showSidebarAndAppBar &&\n            <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n          }\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            {\n              showSidebarAndAppBar &&\n              <AppBar onToggleSidebar={this.onToggleSidebar}/>\n            }\n\n            <AuthenticatedAppRouter/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n  workflowId;\n\n  constructor(id, blockRuns, createdAt, workflowId) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n    this.workflowId = workflowId;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  getWorkflowId = () => this.workflowId;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../RunnableWorkflowService/models/Run\";\nimport BlockRun from \"../RunnableWorkflowService/models/BlockRun\";\nimport Runs from \"../RunnableWorkflowService/models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at, id_workflow}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at), id_workflow);\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRuns () {\n    return await this._getRuns(`${RUNS_URL}`);\n  },\n\n  async getRunsOfWorkflow(workflowId) {\n    return await this._getRuns(`${RUNS_URL}?workflowId=${workflowId}`);\n  },\n\n  async _getRuns(url) {\n    const jsonList = await getJSON(url);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\n\nimport AuthService from \"../../Services/AuthService\";\nimport {PROJECTS_PATH} from \"../Projects/Projects\";\nimport \"./Login.css\";\n\nexport const LOGIN_PATH = \"/login\";\n\nexport default class Login extends Component {\n\n  signInButtonRendered = false;\n\n  state = {\n    loggedIn: false\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return this.renderRedirect();\n    }\n    return this.renderLogin();\n  }\n\n  renderRedirect = () => (\n    <Redirect to={PROJECTS_PATH}/>\n  );\n\n  renderLogin = () => {\n    this.renderSignInButtonIfNeeded();\n    return (\n      <Container>\n        <Jumbotron style={{marginTop: '3em', textAlign: 'center'}}>\n          <h1>Welcome to Servant</h1>\n          <p>\n            Please login with your Google account to continue\n          </p>\n          <div id=\"google-signin-button\"/>\n        </Jumbotron>\n      </Container>\n    );\n  };\n\n  renderSignInButtonIfNeeded = () => {\n    if (!this.signInButtonRendered) {\n      this.renderSignInButton();\n      this.signInButtonRendered = true;\n    }\n  };\n\n  renderSignInButton = () => setImmediate(() => {\n    AuthService.renderSignInButton('google-signin-button', this.onSignedIn)\n  });\n\n  onSignedIn = () => this.setState({loggedIn: true});\n}\n\n\n"],"sourceRoot":""}