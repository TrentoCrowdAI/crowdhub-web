{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/utils.js","Services/JobsService.js","Components/Jobs/utils/modal.js","Components/Jobs/JobsList/DeleteJobModal.js","Components/Jobs/JobsList/JobsList.js","Components/Jobs/utils/job.js","Components/Jobs/JobForm/DesignEditor/BlocksColumn.js","Components/Jobs/JobForm/DesignEditor/blocks/BlockCard.js","Components/Jobs/JobForm/DesignEditor/blocks/utils.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputDynamicText.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputStaticText.js","Components/Jobs/JobForm/DesignEditor/blocks/output/OutputOpenQuestion.js","Components/Jobs/JobForm/DesignEditor/blocks/output/OutputChoices.js","Components/Jobs/JobForm/DesignEditor/blocks/definitions.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputDynamicImage.js","Components/Jobs/JobForm/DesignEditor/DesignEditor.js","Components/Jobs/JobForm/JobForm.js","Components/common/BackButton.js","Components/Jobs/CreateJob/CreateJob.js","Components/Jobs/ViewJob/PublishButtons.js","Components/Jobs/utils/route.js","Components/Jobs/ViewJob/ViewJob.js","Components/Jobs/EditJob/EditJob.js","Components/Jobs/Jobs.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","bg","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","APP_URL","process","Errors","JSONtoJob","created_at","Date","updated_at","deleted_ad","max_votes","maxVotes","num_votes","numVotes","design","forEach","block","uuid","valid","jobToJSON","job","JobsService","getJobs","_getJobs","Object","asyncToGenerator","mark","jsonList","concat","map","getJob","_getJob","jsonJob","_x","createJob","_createJob","_x2","updateJob","_updateJob","t0","response","deleteJob","_deleteJob","publish","_publish","_callee6","platform","_context6","closeAndAfterAnimation","component","callback","setState","show","setTimeout","DeleteJobModal","state","onCancelPressed","assertThisInitialized","_this","onCancel","onConfirmPressed","onConfirmDeletion","jobToDelete","Modal","Header","Title","Body","name","Footer","Button","variant","JobsList","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchJobs","componentWillUnmount","pendingJobsRequest","onUserWantToDeleteJob","onOpenJobView","history","push","onOpenEditJob","onUserConfirmDeletion","jobs","inherits","createClass","key","value","_fetchJobs","fetchError","_this2","Container","DeleteJobModal_DeleteJobModal","Row","Col","Link_default","JobsList_FetchingJobs","JobsList_FetchJobsError","JobsList_NoJobs","JobsList_JobsTable","FetchingJobs","NoJobs","FetchJobsError","Alert","JobsTable","_ref2","Table","hover","JobsList_JobsTableRow","ignoreEventAnd","e","stopPropagation","JobsTableRow","_ref3","description","rewardIntegerToString","reward","rewardFloatToInteger","int","Math","floor","BlocksColumn","handleBlockDataChange","index","blocks","blocksList","onChange","Card","title","ref","componentsContainerRef","definition","blockDefinitionsMap","type","_Component2","expandable","BlocksColumn_ComponentNotFoundError","ComponentNotFoundError","_ref","BlockCard","toggleExpansion","previousState","expanded","onToggleExpansion","data-block-type","data-block-id","Collapse","in","children","textChangeHandler","field","target","defineProperty","checkboxChangeHandler","checked","validateAndNotify","selectChangeHandler","textBlurHandler","toggleExpansionHandler","validate","blockState","blockSpecificConfig","objectSpread","input_InputDynamicText","blockTypeName","InputDynamicText","csvVariable","csvTitleVariable","highlightable","question","highlightedCsvVariable","onChangeHighlightable","BlockCard_BlockCard","assign","md","lg","Form","Group","Label","Control","onBlur","Check","label","input_InputStaticText","InputStaticText","handleEditorChange","text","es2015","onEditorChange","initialValue","init","menubar","output_OutputOpenQuestion","OutputOpenQuestion","required","size","ChoiceTypes","OutputChoices","onChoicesChanged","choices","choice_type","choice","OutputChoices_Choices","Choices","newLabel","newValue","onAddChoice","onRemoveChoice","splice","isNewChoiceValid","trim","_this3","striped","bordered","disabled","output_OutputChoices","mapBlocksDefinitionArrayToMap","blockDefinitions","blockDefinition","InputDynamicImage","tools","keys","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","setupDragula","toolsBlocks","toolsBlocksRef","current","designBlocks","designBlocksRef","containers","drake","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockDataByIdAndNotify","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlockDataAndNotify","initialBlocks","nextSibling","findIndex","b","temp","blockToRemoveIndex","React","createRef","BlocksColumn_BlocksColumn","JobForm","handleSubmit","values","formikBag","designValid","valuesToJobData","onSubmit","_instructions","items_csv","items_gold_csv","instructions","jobDataToValues","jobDataFromProps","validationSchema","Yup","shape","integer","positive","min","html","css","js","onDesignChanged","isDesignValid","find","jobData","formik_esm","initialValues","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","placeholder","Feedback","rows","xs","sm","step","InputGroup","Prepend","Text","textareaName","DesignEditor_DesignEditor","ButtonToolbar","cancelText","submitText","common_BackButton","es_Link","CreateJob","context","handleJobSubmission","setSubmitting","redirectToJobsList","console","log","onJobCreationFailed","creationError","CreateJob_JobCreationFailed","JobForm_JobForm_JobForm","JobCreationFailed","PublishButtons","onUserWantsToPublish","publishOn","isPublishing","published","PublishButtons_PublishJobModal","onConfirm","PublishButtons_PublishedModal","PublishJobModal","PublishedModal","onClose","_this4","ViewJob","fetchJob","pendingJobRequest","match","JobData","PublishButtons_PublishButtons","ViewJob_FetchingJob","FetchingJob","EditJob","returnToJobPage","onUpdateJobFailed","updateError","EditJob_UpdateJobError","EditJob_FetchingJob","UpdateJobError","_ref4","Jobs","Switch","Route","path","exact","Layout","BrowserRouter","Sidebar_Sidebar_Sidebar","AppBar_AppBar","render","Redirect","tinymce","selector","plugins","App","Layout_Layout","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5755836.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/jobs\">\n              Jobs\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <a className=\"navbar-toggle\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </a>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nconst isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","import {getJSON, postJSON, sendDelete, putJSON} from \"./utils\";\nimport uuid from 'uuid';\n\nexport const APP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\n\nexport const Errors = {\n    INVALID_JOB_DATA: 'invalid_job_data'\n};\n\nfunction JSONtoJob(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  json.data.max_votes = json.data.maxVotes;\n  json.data.num_votes = json.data.numVotes;\n\n  delete json.data.maxVotes;\n  delete json.data.numVotes;\n\n  if (json.data.design) {\n    json.data.design.forEach(block => {\n      // The server may have remove the id of the block, so we generate a new one\n      block.id = block.id || uuid();\n\n      // We consider valid blocks that were stored on the server\n      block.valid = true;\n    });\n  } else {\n    json.data.design = [];\n  }\n\n  return json;\n}\n\nfunction jobToJSON(job) {\n  job.data.maxVotes = job.data.max_votes;\n  job.data.numVotes = job.data.num_votes;\n\n  delete job.data.max_votes;\n  delete job.data.num_votes;\n\n  return job;\n}\n\nexport default {\n  async getJobs() {\n    const jsonList = await getJSON(`${APP_URL}/jobs`);\n    return jsonList.map(JSONtoJob);\n  },\n\n  async getJob(id) {\n    const jsonJob = await getJSON(`${APP_URL}/jobs/${id}`);\n    return JSONtoJob(jsonJob);\n  },\n\n  async createJob(job) {\n    const json = jobToJSON(job);\n    return await postJSON(`${APP_URL}/jobs`, json);\n  },\n\n  async updateJob(job) {\n    try {\n      const json = jobToJSON(job);\n      return await putJSON(`${APP_URL}/jobs/${job.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_JOB_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteJob(job) {\n    return await sendDelete(`${APP_URL}/jobs/${job.id}`);\n  },\n\n  async publish(job, platform) {\n    const jsonJob = await postJSON(`${APP_URL}/jobs/${job.id}/publish`, {platform});\n    return JSONtoJob(jsonJob);\n  }\n\n}\n","export const closeAndAfterAnimation = (component, callback) => () => {\n  component.setState({show: false});\n\n  setTimeout(callback, 100);\n};\n\n","import {Button, Modal} from \"react-bootstrap\";\nimport React, {Component} from 'react';\nimport {closeAndAfterAnimation} from \"../utils/modal\";\n\nexport default class DeleteJobModal extends Component {\n  state = {\n    show: true\n  };\n\n  onCancelPressed = closeAndAfterAnimation(this, () => this.props.onCancel());\n  onConfirmPressed = closeAndAfterAnimation(this, () => this.props.onConfirmDeletion());\n\n  render() {\n    const job = this.props.jobToDelete;\n\n    return (\n      <Modal show={this.state.show}>\n        <Modal.Header>\n          <Modal.Title>Delete job <span className=\"job-id\">#{job.id}</span></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Are you sure you want to delete \"<strong>{job.data.name}</strong>\"?\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancelPressed}>Cancel</Button>\n          <Button variant=\"danger\" onClick={this.onConfirmPressed}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport Link from \"react-router-dom/Link\";\nimport {Alert, Col, Container, Row, Table} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport DeleteJobModal from \"./DeleteJobModal\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport \"./JobsList.css\";\n\nexport class JobsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchJobs();\n\n  componentWillUnmount = () => this.pendingJobsRequest.cancel();\n\n  async fetchJobs() {\n    try {\n      this.pendingJobsRequest = makeCancellable(JobsService.getJobs());\n      const jobs = await this.pendingJobsRequest.result;\n\n      this.setState({jobs});\n    } catch (e) {\n      this.setState({\n        jobs: null,\n        fetchError: true\n      });\n    }\n  }\n\n  onUserWantToDeleteJob = (job) => this.setState({jobToDelete: job});\n\n  onOpenJobView = (job) => this.props.history.push(`/jobs/${job.id}`);\n\n  onOpenEditJob = (job) => this.props.history.push(`/jobs/${job.id}/edit`);\n\n  onUserConfirmDeletion = async () => {\n    const job = this.state.jobToDelete;\n    this.setState({jobs: null, jobToDelete: null});\n\n    await JobsService.deleteJob(job);\n\n    await this.fetchJobs();\n  };\n\n  render() {\n\n    return (\n      <Container>\n        {\n          this.state.jobToDelete &&\n          <DeleteJobModal jobToDelete={this.state.jobToDelete}\n                          onCancel={() => this.setState({jobToDelete: null})}\n                          onConfirmDeletion={this.onUserConfirmDeletion}/>\n        }\n\n        <Row>\n          <Col>\n            <h2>List</h2>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <Link to=\"/jobs/new\" className=\"btn btn-primary\">Add</Link>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.jobs && !this.state.fetchError &&\n            <FetchingJobs/>\n          }\n\n          {\n            !this.state.jobs && this.state.fetchError &&\n            <FetchJobsError/>\n          }\n\n          {\n            this.state.jobs && this.state.jobs.length === 0 &&\n            <NoJobs/>\n          }\n\n          {\n            this.state.jobs && this.state.jobs.length > 0 &&\n            <JobsTable jobs={this.state.jobs}\n                       onUserWantToDeleteJob={this.onUserWantToDeleteJob}\n                       onOpenJobView={this.onOpenJobView}\n                       onOpenEditJob={this.onOpenEditJob}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingJobs = () => (\n  <Col>\n    <p>Fetching jobs ...</p>\n  </Col>\n);\n\nexport const NoJobs = () => (\n  <Col>\n    <p>You haven't created any jobs yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchJobsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the jobs\n      </Alert>\n    </Container>\n  </Col>\n);\n\nexport const JobsTable = ({jobs, onUserWantToDeleteJob, onOpenJobView, onOpenEditJob}) => (\n  <Col>\n    <h1>Jobs</h1>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Platforms</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {jobs.map(job => (\n        <JobsTableRow job={job} key={job.id}\n                      onUserWantToDeleteJob={onUserWantToDeleteJob}\n                      onOpenEditJob={onOpenEditJob}\n                      onOpenJobView={onOpenJobView}/>\n      ))}\n      </tbody>\n    </Table>\n  </Col>\n);\n\nconst ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n\nexport const JobsTableRow = ({job, onUserWantToDeleteJob, onOpenJobView, onOpenEditJob}) => (\n  <tr onClick={() => onOpenJobView(job)} className=\"clickable-row\">\n    <td>{job.id}</td>\n    <td>{job.data.name}</td>\n    <td>{job.data.description}</td>\n    <td/>\n    <td>\n\n      <a className=\"icon-button\"\n         onClick={ignoreEventAnd(() => onOpenEditJob(job))}>\n        <i className=\"fas fa-edit\"/>\n      </a>\n\n      <a className=\"icon-button\"\n         onClick={ignoreEventAnd(() => onUserWantToDeleteJob(job))}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    </td>\n  </tr>\n);\n","\nexport const rewardIntegerToString = (reward) => `${reward / 100}`;\n\nexport const rewardFloatToInteger = (int) => Math.floor(int * 100);\n","import React, {Component} from 'react';\nimport {Card} from \"react-bootstrap\";\n\nimport './BlocksColumn.css'\n\nexport default class BlocksColumn extends Component {\n\n  handleBlockDataChange = (index) => (data) => {\n    const blocks = this.props.blocksList;\n    blocks[index] = data;\n    this.props.onChange(blocks);\n  };\n\n\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>{this.props.title}</Card.Header>\n        <Card.Body>\n          <div className=\"blocks-container\" ref={this.props.componentsContainerRef}>\n            {\n              this.props.blocksList.map((data, index) => {\n                const definition = this.props.blockDefinitionsMap[data.type];\n                const key = data.id || index;\n\n                if (definition) {\n                  const Component = definition.Component;\n                  return <Component key={key} data={data} onChange={this.handleBlockDataChange(index)}\n                                    expandable={this.props.expandable}/>\n                } else {\n                  return <ComponentNotFoundError key={key} type={data.type}/>\n                }\n              })\n            }\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst ComponentNotFoundError = ({type}) => <p>Can't render component of type {type}</p>;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './BlockCard.css';\n\n\nexport default class BlockCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: props.expanded\n    };\n  }\n\n  toggleExpansion = () => this.setState(\n    (previousState) => {\n      return {expanded: !previousState.expanded}\n    },\n    () => this.props.onToggleExpansion(this.state.expanded)\n  );\n\n  render() {\n    return (\n      <Card className=\"block-card\" data-block-type={this.props.type} data-block-id={this.props.id}>\n        <Card.Header>\n          {\n            this.props.expandable &&\n            <a onClick={this.toggleExpansion}>\n              {\n                /* Hacky: show the warning icon only if card is expandable */\n                this.props.valid === false &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n\n              <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n            </a>\n          }\n          {!this.props.expandable && this.props.title}\n\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import uuid from 'uuid';\n\nexport const textChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.value});\n};\n\nexport const checkboxChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.checked}, () => validateAndNotify(component));\n};\n\nexport const selectChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.value}, () => validateAndNotify(component));\n};\n\nexport const textBlurHandler = component => () => validateAndNotify(component);\n\nexport const toggleExpansionHandler = component => expanded => component.setState(\n  {expanded},\n  () => component.props.onChange(component.state)\n);\n\nexport const validateAndNotify = component => component.setState({\n  valid: component.validate()\n}, () => component.props.onChange(component.state));\n\n\nexport const blockState = ({data}, blockSpecificConfig) => {\n  return {\n    id: data.id,\n    type: data.type,\n    expanded: data.expanded || false,\n    valid: data.valid || false,\n\n    ...blockSpecificConfig\n  };\n};\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport BlockCard from \"../BlockCard\";\nimport {blockState, textBlurHandler, textChangeHandler, toggleExpansionHandler} from \"../utils\";\n\nconst BLOCK_TYPE = 'input_dynamic_text';\n\nclass InputDynamicText extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      csvVariable: props.data.csvVariable || '',\n      csvTitleVariable: props.data.csvTitleVariable || '',\n      highlightable: props.data.highlightable || false,\n      question: props.data.question || '',\n      highlightedCsvVariable: props.data.highlightedCsvVariable || ''\n    });\n  }\n\n  validate = () => {\n    const data = this.state;\n    if (data.csvVariable === '' || data.csvTitleVariable === '') {\n      return false;\n    }\n\n    return !(data.highlightable && (data.question === '' || data.highlightedCsvVariable === ''));\n  };\n\n  onChangeHighlightable = (e) => this.setState(\n    {highlightable: e.target.checked},\n    () => this.props.onChange(this.state)\n  );\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)}\n                 title=\"Input Dynamic Text\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Title Variable</Form.Label>\n              <Form.Control name=\"csvTitleVariable\" type=\"text\" value={this.state.csvTitleVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Form.Group>\n          <Form.Check type=\"checkbox\" name=\"highlightable\" label=\"Enable text highlighting\"\n                      checked={this.state.highlightable} onChange={this.onChangeHighlightable}/>\n        </Form.Group>\n\n        {\n          this.state.highlightable &&\n          <Row>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Question</Form.Label>\n                <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Highlighted CSV Variable</Form.Label>\n                <Form.Control name=\"highlightedCsvVariable\" type=\"text\"\n                              value={this.state.highlightedCsvVariable}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n          </Row>\n        }\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputDynamicText\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {Editor} from '@tinymce/tinymce-react';\nimport BlockCard from \"../BlockCard\";\nimport {blockState, toggleExpansionHandler} from \"../utils\";\n\nconst BLOCK_TYPE = 'input_static_text';\n\nclass InputStaticText extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      text: props.data.text || '',\n      valid: true\n    });\n  }\n\n  validate = () => true;\n\n  handleEditorChange = text => this.props.onChange({...this.state, text});\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)} title=\"Input Static Text\"\n                 type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Form.Group>\n          <Editor onEditorChange={this.handleEditorChange}\n                  initialValue={this.props.data.text}\n                  init={{menubar: false}}/>\n        </Form.Group>\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputStaticText\n}\n","import React, {Component} from 'react';\nimport {Row, Col, Form} from \"react-bootstrap\";\n\nimport BlockCard from \"../BlockCard\";\nimport {\n  blockState,\n  checkboxChangeHandler,\n  selectChangeHandler,\n  textBlurHandler,\n  textChangeHandler,\n  toggleExpansionHandler\n} from \"../utils\";\n\nconst BLOCK_TYPE = 'output_open_question';\n\nclass OutputOpenQuestion extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      question: props.data.question || '',\n      csvVariable: props.data.csvVariable || '',\n      required: props.data.required || false,\n      size: props.data.size || 'slim'\n    });\n  }\n\n  validate = () => this.state.csvVariable !== '' && this.state.question !== '';\n\n  render() {\n    return (\n      <BlockCard onToggleExpansion={toggleExpansionHandler(this)} {...this.state}\n                 title=\"Output Open Question\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Question</Form.Label>\n              <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Check type=\"checkbox\" name=\"required\" label=\"Required\"\n                          checked={this.state.required} onChange={checkboxChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Text field size</Form.Label>\n              <Form.Control as=\"select\" name=\"size\" onChange={selectChangeHandler(this)} value={this.state.size}>\n                <option value=\"slim\">Slim</option>\n                <option value=\"big\">Big</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n\n      </BlockCard>\n    );\n  }\n}\n\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: OutputOpenQuestion\n}\n","import React, {Component} from 'react';\nimport {\n  blockState,\n  checkboxChangeHandler,\n  selectChangeHandler,\n  textBlurHandler,\n  textChangeHandler,\n  toggleExpansionHandler\n} from \"../utils\";\nimport BlockCard from \"../BlockCard\";\nimport {Col, Form, Button, Table} from \"react-bootstrap\";\n\nconst BLOCK_TYPE = 'output_choices';\n\nconst ChoiceTypes = [{\n  label: 'Multiple choice</',\n  value: 'multiple_checkbox'\n}, {\n  label: 'Single choice radio',\n  value: 'single_radio'\n}, {\n  label: 'Single choice dropdown',\n  value: 'single_dropdown'\n}];\n\nclass OutputChoices extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n\n      question: props.data.question || '',\n      choices: props.data.choices || [],\n      csvVariable: props.data.csvVariable || '',\n      required: props.data.required || false,\n      choice_type: props.data.choice_type || 'multiple_checkbox'\n    });\n  }\n\n  onChoicesChanged = choices => this.setState({choices}, () => this.props.onChange(this.state));\n\n  validate = () => {\n    const data = this.state;\n\n    if (data.csvVariable === '' || data.csvTitleVariable === '') {\n      return false;\n    }\n\n    return data.choices.length !== 0;\n  };\n\n  render() {\n    return (\n      <BlockCard onToggleExpansion={toggleExpansionHandler(this)} {...this.state}\n                 title=\"Output Choices\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Question</Form.Label>\n              <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Check type=\"checkbox\" name=\"required\" label=\"Required\"\n                          checked={this.state.required} onChange={checkboxChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Choice type</Form.Label>\n              <Form.Control as=\"select\" name=\"choice_type\" onChange={selectChangeHandler(this)}\n                            value={this.state.choice_type}>\n                {\n                  ChoiceTypes.map(choice => (\n                    <option key={choice.value} value={choice.value}>{choice.label}</option>\n                  ))\n                }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Choices choices={this.state.choices} onChange={this.onChoicesChanged}/>\n      </BlockCard>\n    );\n  }\n}\n\nclass Choices extends Component {\n\n\n  state = {\n    newLabel: '',\n    newValue: ''\n  };\n\n  onAddChoice = () => {\n    const choices = this.props.choices;\n    choices.push({\n      label: this.state.newLabel,\n      value: this.state.newValue\n    });\n    this.setState({\n      newLabel: '',\n      newValue: ''\n    }, () => this.props.onChange(choices));\n  };\n\n  onRemoveChoice = (index) => {\n    const choices = this.props.choices;\n    choices.splice(index, 1);\n    this.props.onChange(choices);\n  };\n\n  isNewChoiceValid = () => this.state.newLabel.trim() !== '' && this.state.newValue.trim() !== '';\n\n  render() {\n    return (\n      <div>\n        <h5>Choices</h5>\n        <hr/>\n        <Table striped bordered hover >\n          <thead>\n          <tr>\n            <th>Label</th>\n            <th>Value</th>\n            <th/>\n          </tr>\n          </thead>\n          <tbody>\n          {this.props.choices.map((choice, index) => ( // TODO: Assert unique\n            <tr key={choice.value}>\n              <td>{choice.label}</td>\n              <td>{choice.value}</td>\n              <td>\n                <a className=\"icon-button\" onClick={() => this.onRemoveChoice(index)}>\n                  <i className=\"fas fa-trash-alt\"/>\n                </a>\n              </td>\n            </tr>\n          ))}\n          </tbody>\n        </Table>\n\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Label</Form.Label>\n              <Form.Control name=\"newLabel\" type=\"text\" value={this.state.newLabel}\n                            onChange={textChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Value</Form.Label>\n              <Form.Control name=\"newValue\" type=\"text\" value={this.state.newValue}\n                            onChange={textChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" className=\"\">\n            <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n          </Col>\n        </Form.Row>\n      </div>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: OutputChoices\n}\n","import InputDynamicText from './input/InputDynamicText';\nimport InputStaticText from \"./input/InputStaticText\";\nimport OutputOpenQuestion from \"./output/OutputOpenQuestion\";\nimport OutputChoices from \"./output/OutputChoices\";\nimport InputDynamicImage from \"./input/InputDynamicImage\";\n\nconst mapBlocksDefinitionArrayToMap = (blockDefinitions) => {\n  const map = {};\n  blockDefinitions.forEach(blockDefinition => map[blockDefinition.blockTypeName] = blockDefinition);\n  return map;\n};\n\nexport default mapBlocksDefinitionArrayToMap([\n  InputDynamicText,\n  InputStaticText,\n  InputDynamicImage,\n\n  OutputOpenQuestion,\n  OutputChoices\n]);\n","import React, {Component} from 'react';\nimport BlockCard from \"../BlockCard\";\nimport {blockState, textBlurHandler, textChangeHandler, toggleExpansionHandler} from \"../utils\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\nconst BLOCK_TYPE = \"input_dynamic_image\";\n\nclass InputDynamicImage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n\n      csvVariable: props.data.csvVariable || '',\n      highlightable: props.data.highlightable || false,\n      question: props.data.question || '',\n      highlightedCsvVariable: props.data.highlightedCsvVariable || ''\n    });\n  }\n\n  validate = () => {\n    const data = this.state;\n    if (data.csvVariable === '') {\n      return false;\n    }\n\n    return !(data.highlightable && (data.question === '' || data.highlightedCsvVariable === ''));\n  };\n\n\n  onChangeHighlightable = (e) => this.setState(\n    {highlightable: e.target.checked},\n    () => this.props.onChange(this.state)\n  );\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)}\n                 title=\"Input Dynamic Image\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n\n        <Form.Group>\n          <Form.Label>CSV Variable</Form.Label>\n          <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                        onChange={textChangeHandler(this)}\n                        onBlur={textBlurHandler(this)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Check type=\"checkbox\" name=\"highlightable\" label=\"Enable image highlighting\"\n                      checked={this.state.highlightable} onChange={this.onChangeHighlightable}/>\n        </Form.Group>\n\n        {\n          this.state.highlightable &&\n          <Row>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Question</Form.Label>\n                <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Highlighted CSV Variable</Form.Label>\n                <Form.Control name=\"highlightedCsvVariable\" type=\"text\"\n                              value={this.state.highlightedCsvVariable}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n          </Row>\n        }\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputDynamicImage\n};\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport uuid from 'uuid';\n\nimport Dragula from 'dragula';\nimport \"dragula/dist/dragula.css\";\n\nimport BlocksColumn from \"./BlocksColumn\";\nimport blockDefinitionsMap from './blocks/definitions';\n\n// Array of all the possible blocks, without any data. This array is used to show the tools column from which the user\n// drags out the tools\nconst tools = Object.keys(blockDefinitionsMap).map(type => {\n  return {type}\n});\n\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nexport default class DesignEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toolsBlocksRef = React.createRef();\n    this.designBlocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const toolsBlocks = this.toolsBlocksRef.current;\n    const designBlocks = this.designBlocksRef.current;\n    const containers = [\n      this.toolsBlocksRef.current,\n      this.designBlocksRef.current\n    ];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === toolsBlocks,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === designBlocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === designBlocks) {\n        const siblingIndex = findSiblingIndex(sibling, designBlocks);\n        const isAddingToolToDesign = source === toolsBlocks;\n\n        if (isAddingToolToDesign) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.removeBlockDataByIdAndNotify(id);\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.swapBlockDataAndNotify(blockAIndex, blockBIndex);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.props.initialBlocks.length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.props.initialBlocks.length : nextSibling - 1;\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.props.initialBlocks.length - 1 : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    return {\n      type: element.getAttribute('data-block-type'),\n      id: uuid(),\n      expanded: true,\n      valid: true\n    };\n  };\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.props.initialBlocks;\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    const blocks = this.props.initialBlocks;\n\n    blocks.splice(newBlockIndex, 0, newBlock);\n\n    this.props.onChange(blocks);\n  };\n\n  swapBlockDataAndNotify = (a, b) => {\n    const blocks = this.props.initialBlocks;\n    const temp = blocks[a];\n\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n\n    this.props.onChange(blocks);\n  };\n\n  removeBlockDataByIdAndNotify = id => {\n    const blocks = this.props.initialBlocks;\n    const blockToRemoveIndex = blocks.findIndex(data => data.id === id);\n\n    blocks.splice(blockToRemoveIndex, 1);\n\n    this.props.onChange(blocks);\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <BlocksColumn componentsContainerRef={this.toolsBlocksRef}\n                        title=\"Available blocks\"\n                        blockDefinitionsMap={blockDefinitionsMap}\n                        blocksList={tools}\n                        expandable={false}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <BlocksColumn componentsContainerRef={this.designBlocksRef}\n                        title=\"Your job design\"\n                        blockDefinitionsMap={blockDefinitionsMap}\n                        blocksList={this.props.initialBlocks}\n                        expandable={true}\n                        onChange={blocks => this.props.onChange(blocks)}/>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, ButtonToolbar, Col, Form, InputGroup, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport {Editor} from '@tinymce/tinymce-react';\n\nimport {rewardFloatToInteger, rewardIntegerToString} from '../utils/job';\nimport \"./JobForm.css\";\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport default class JobForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      design: (props.jobData && props.jobData.design) || []\n    };\n    this.state.designValid = this.isDesignValid();\n    this._instructions = (props.jobData && props.jobData.instructions) || '';\n  }\n\n  handleSubmit = (values, formikBag) => {\n    if (this.state.designValid) {\n      const job = this.valuesToJobData(values);\n      this.props.onSubmit(job, formikBag);\n    }\n  };\n\n  handleEditorChange = (e) => this._instructions = e;\n\n  valuesToJobData = (values) => {\n    return {\n      name: values.name,\n      description: values.description,\n\n      num_votes: values.num_votes,\n      max_votes: values.max_votes,\n      reward: rewardFloatToInteger(values.reward),\n\n      items_csv: values.items_csv,\n      items_gold_csv: values.items_gold_csv,\n\n      instructions: this._instructions,\n\n      design: this.state.design\n    };\n  };\n\n  jobDataToValues = (jobDataFromProps) => {\n    const data = jobDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || '',\n\n      num_votes: data.num_votes || 3,\n      max_votes: data.max_votes || 10,\n      reward: (data.reward && rewardIntegerToString(data.reward)) || 0.01,\n\n      items_csv: data.items_csv || '',\n      items_gold_csv: data.items_gold_csv || '',\n\n      instructions: data.instructions || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required'),\n\n    num_votes: Yup.number()\n      .required('Num votes must be a number')\n      .integer('Must be an integer')\n      .positive('Must be positive'),\n    max_votes: Yup.number()\n      .required('Max votes must be a number')\n      .integer('Must be an integer')\n      .positive('Must be positive'),\n    reward: Yup.number('')\n      .required('Reward must be a number')\n      .min(0.1, 'Must be greater than 0.1$')\n      .positive('Must be positive'), // TODO: Improve\n\n    items_csv: Yup.string()\n      .required('URL of CSV of items is required')\n      .url('Must be a valid URL'),\n    items_gold_csv: Yup.string()\n      .required('URL of CSV of gold items is required')\n      .url('Must be a valid URL'),\n\n    instructions: Yup.string(),\n\n    html: Yup.string(),\n    css: Yup.string(),\n    js: Yup.string()\n  });\n\n  onDesignChanged = design => {\n    const designValid = this.isDesignValid();\n    this.setState({designValid, design});\n  };\n\n  isDesignValid = () => this.state.design.find(block => !block.valid) == null;\n\n  render() {\n\n    return (\n      <div>\n\n        <Formik\n          initialValues={this.jobDataToValues(this.props.jobData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Job name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Job description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n\n                {/* CSV items */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Path to CSV file</Form.Label>\n                      <Form.Control name=\"items_csv\" type=\"text\" value={values.items_csv}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('items_csv')}\n                                    isValid={isValid('items_csv')}\n                                    placeholder=\"Ex: https://raw.githubusercontent.com/...\"/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.items_csv}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* CSV gold items */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Path to GOLD CSV file</Form.Label>\n                      <Form.Control name=\"items_gold_csv\" type=\"text\" value={values.items_gold_csv}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('items_gold_csv')}\n                                    isValid={isValid('items_gold_csv')}\n                                    placeholder=\"Ex: https://raw.githubusercontent.com/...\"/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.items_gold_csv}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* number of votes and reward */}\n                <Row>\n                  {/* votes per item */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Votes for item</Form.Label>\n                      <Form.Control type=\"number\" name=\"num_votes\" value={values.num_votes} onChange={handleChange}\n                                    isInvalid={isInvalid('num_votes')} isValid={isValid('num_votes')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.num_votes}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n\n                  {/* votes per worker */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Max votes per worker</Form.Label>\n                      <Form.Control type=\"number\" step=\"1\" name=\"max_votes\" value={values.max_votes}\n                                    onChange={handleChange} isInvalid={isInvalid('max_votes')}\n                                    isValid={isValid('max_votes')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.max_votes}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n\n                  {/* reward */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Reward</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>$</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"reward\" value={values.reward}\n                                      onChange={handleChange} isInvalid={isInvalid('reward')}\n                                      isValid={isValid('reward')}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.reward}\n                        </Form.Control.Feedback>\n                      </InputGroup>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n\n                {/* instructions */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Instructions</Form.Label>\n                      <Editor textareaName=\"instructions\" onEditorChange={this.handleEditorChange}\n                              initialValue={values.instructions}\n                              init={{menubar: false}}/>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Label>Design</Form.Label>\n                    <DesignEditor initialBlocks={this.state.design} onChange={this.onDesignChanged}/>\n                  </Col>\n\n                </Row>\n                {\n                  !this.state.designValid &&\n                  <Row>\n                    <Col>\n                      <Alert variant=\"danger\">\n                        One or more blocks are not correctly configured.\n                      </Alert>\n                    </Col>\n                  </Row>\n                }\n\n                <ButtonToolbar className=\"form-buttons\">\n                  {\n                    this.props.cancelText &&\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}\n                            className=\"cancel-job-form\">\n                      {this.props.cancelText}\n                    </Button>\n                  }\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-job-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import {Col, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Row>\n    <Col>\n      <Link to={to} className=\"btn btn-outline-info back-button\">\n        <i className=\"fas fa-arrow-left\"/> {text}\n      </Link>\n    </Col>\n  </Row>\n);","import React, {Component} from 'react';\nimport {Alert, Col, Row, Container} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport JobForm from \"../JobForm/JobForm\";\nimport BackButton from \"../../common/BackButton\";\n\nexport default class CreateJob extends Component {\n\n  constructor(props, context) {\n    super(props);\n    this.context = context;\n    this.state = {\n      creationError: false\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <BackButton to=\"/jobs\" text=\"Return to jobs list\"/>\n\n        <Row>\n          <Col><h1>Create new job</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <JobCreationFailed/>\n        }\n\n        <JobForm onSubmit={this.handleJobSubmission}\n                 onCancel={this.onCancel}\n                 submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleJobSubmission = async (jobData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await JobsService.createJob({data: jobData});\n      this.redirectToJobsList();\n    } catch (e) {\n      console.log(e);\n      this.onJobCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onJobCreationFailed = () => this.setState({creationError: true});\n\n  redirectToJobsList = () => this.props.history.push('/jobs');\n\n}\n\nexport const JobCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the job\n    </Alert>\n  </Col>\n);\n","import React, {Component} from \"react\";\nimport {Button, Col, Row, Modal, Container} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport {closeAndAfterAnimation} from \"../utils/modal\";\nimport \"./PublishButtons.css\";\n\nexport default class PublishButtons extends Component {\n\n  state = {};\n\n  onUserWantsToPublish = publishOn => () => this.setState({publishOn});\n\n  publish = async () => {\n    const platform = this.state.publishOn;\n    this.setState({\n      publishOn: null,\n      isPublishing: true\n    });\n\n    await JobsService.publish(this.props.job, platform);\n\n    this.setState({\n      isPublishing: false,\n      published: true\n    });\n  };\n\n  render() {\n    return (\n      <Container className=\"publish-buttons\">\n        <Row>\n          <Col><h4>Publish</h4></Col>\n        </Row>\n\n        {\n          this.state.publishOn &&\n          <PublishJobModal job={this.props.job}\n                           onCancel={() => this.setState({publishOn: null})}\n                           onConfirm={this.publish}/>\n        }\n\n        {\n          this.state.published &&\n          <PublishedModal job={this.props.job}/>\n        }\n\n        <Row>\n          <Col md=\"4\">\n            <Button onClick={this.onUserWantsToPublish('MTurk')} block>Amazon Mechanical Turk</Button>\n          </Col>\n          <Col md=\"4\">\n            <Button onClick={this.onUserWantsToPublish('F8')} block>Figure Eight</Button>\n          </Col>\n          <Col md=\"4\">\n            <Button onClick={this.onUserWantsToPublish('Toloka')} block>Yandex.Toloka</Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nclass PublishJobModal extends Component {\n\n  state = {show: true};\n\n  onCancelPressed = closeAndAfterAnimation(this, () => this.props.onCancel());\n\n  onConfirmPressed = closeAndAfterAnimation(this, () => this.props.onConfirm());\n\n  render() {\n    const job = this.props.job;\n    return (\n      <Modal show={this.state.show}>\n        <Modal.Header>\n          <Modal.Title>Publish job <span className=\"job-id\">#{job.id}</span></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Are you sure you want to publish \"<strong>{job.data.name}</strong>\"?\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancelPressed}>Cancel</Button>\n          <Button variant=\"primary\" onClick={this.onConfirmPressed}>Publish</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n}\n\nclass PublishedModal extends Component {\n\n  state = {show: true};\n\n  onClose = closeAndAfterAnimation(this, () => {});\n\n  render() {\n    const job = this.props.job;\n    return (\n      <Modal show={this.state.show}>\n        <Modal.Header>\n          <Modal.Title>Job #{job.id} published</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Job \"<strong>{job.data.name}</strong>\" was published!\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.onClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","\nexport const redirectToJobsList = component => component.props.history.push(`/jobs`);\n","import React, {Component} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {rewardIntegerToString} from \"../utils/job\";\nimport PublishButtons from \"./PublishButtons\";\nimport BackButton from \"../../common/BackButton\";\nimport {redirectToJobsList} from \"../utils/route\";\n\n\nexport default class ViewJob extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchJob();\n\n  componentWillUnmount = () => this.pendingJobRequest.cancel();\n\n  async fetchJob() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingJobRequest = makeCancellable(JobsService.getJob(id));\n      const job = await this.pendingJobRequest.result;\n\n      this.setState({job});\n    } catch (e) {\n      redirectToJobsList(this);\n    }\n  }\n\n  render() {\n    if (!this.state.job) {\n      return <FetchingJob/>;\n    } else {\n      return (\n        <Container>\n          <Row>\n            <JobData job={this.state.job}/>\n          </Row>\n          <hr/>\n          <Row>\n            <PublishButtons job={this.state.job}/>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nconst FetchingJob = () => (\n  <Container>\n    <p>Fetching ...</p>\n  </Container>\n);\n\nfunction JobData({job}) {\n  return (\n    <Container>\n      <BackButton to=\"/jobs\" text=\"Return to jobs list\"/>\n\n      <Row>\n        <Col><h2>Job #{job.id}</h2></Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`/jobs/${job.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col><h2>{job.data.name}</h2></Col>\n      </Row>\n\n      <Row>\n        <Col md=\"3\" lg=\"2\">\n          <strong>Description:</strong>\n        </Col>\n        <Col>{job.data.description}</Col>\n      </Row>\n\n      <Row>\n        <Col md=\"3\" lg=\"2\">\n          <strong>Reward:</strong>\n        </Col>\n        <Col>{rewardIntegerToString(job.data.reward)} $</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Container, Row, Col, Alert} from \"react-bootstrap\";\n\nimport JobsService, {Errors} from \"../../../Services/JobsService\";\nimport JobForm from \"../JobForm/JobForm\";\nimport BackButton from \"../../common/BackButton\";\nimport {redirectToJobsList} from \"../utils/route\";\n\nexport default class EditJob extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchJob();\n\n  fetchJob = async () => {\n    try {\n      const job = await JobsService.getJob(this.state.id);\n      this.setState({job});\n    } catch (e) {\n      redirectToJobsList(this);\n    }\n  };\n\n  handleJobSubmission = async (jobData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await JobsService.updateJob({\n        id: this.state.job.id,\n        data: jobData\n      });\n      this.returnToJobPage();\n    } catch (e) {\n      this.onUpdateJobFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToJobPage();\n\n  returnToJobPage = () => this.props.history.push(`/jobs/${this.state.job.id}`);\n\n  onUpdateJobFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n        <BackButton to={`/jobs/${this.state.id}`} text=\"Cancel\"/>\n\n        <Row>\n          <Col>\n            <h1>\n              Edit job {this.state.job && `#${this.state.id}`}\n            </h1>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateJobError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.job &&\n          <FetchingJob/>\n        }\n        {\n          this.state.job &&\n          <JobForm jobData={this.state.job.data}\n                   onSubmit={this.handleJobSubmission}\n                   onCancel={this.onCancel}\n                   submitText=\"Save\"/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingJob() {\n  return (<p>Fetching job...</p>);\n}\n\n\nexport const UpdateJobError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      {\n        error === Errors.INVALID_JOB_DATA ?\n          \"Validation of the Job failer. Please check all the data\" :\n          \"There's been an error while creating the job\"\n      }\n\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {JobsList} from \"./JobsList/JobsList\";\nimport CreateJob from \"./CreateJob/CreateJob\";\nimport ViewJob from \"./ViewJob/ViewJob\";\nimport EditJob from \"./EditJob/EditJob\";\n\nexport const Jobs = () => (\n  <Switch>\n    <Route path=\"/jobs\" exact component={JobsList}/>\n    <Route path=\"/jobs/new\" component={CreateJob}/>\n    <Route path=\"/jobs/:id/edit\" exact component={EditJob}/>\n    <Route path=\"/jobs/:id\" component={ViewJob}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport {Jobs} from \"./Jobs/Jobs\";\n\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\">\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <Switch>\n              <Route path=\"/jobs\" component={Jobs}/>\n              <Route render={() => (<Redirect to=\"/jobs\"/>)}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}