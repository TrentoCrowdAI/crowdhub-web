{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/rest/utils.js","config.js","Services/rest/ProjectsService.js","Components/common/Breadcrumbs.js","Components/common/DeleteButtonAndModal.js","Components/utils/events.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Services/rest/WorkflowsService.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","models/Runs.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","models/BlockRun.js","adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","models/Run.js","Services/rest/RunsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/common/LoadingButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","models/RunnableWorkflow.js","Services/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/WorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","API_URL","process","PROJECTS_URL","concat","Errors","INVALID_WORKFLOW_DATA","JSONtoProject","parseInt","created_at","Date","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","Object","asyncToGenerator","mark","jsonList","map","getProject","_getProject","jsonJob","_x","createProject","_createProject","project","_x2","updateProject","_updateProject","t0","response","INVALID_PROJECT_DATA","deleteProject","_deleteProject","LinkBreadcrumb","_ref","children","Link","SimpleBreadcrumb","_ref2","DeleteButtonAndModal","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","DeleteButtonAndModal_DeleteModal","assign","onCancel","callback","e","stopPropagation","DeleteModal","_Component2","_getPrototypeOf3","_this2","_len2","_key2","deleting","deleteError","onConfirmDeletion","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","variant","Footer","Button","disabled","ProjectsTable","projects","onProjectDeleted","Col","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","editProjectLink","name","description","ProjectsTable_DeleteProjectButton","DeleteProjectButton","_ref3","DeleteButtonAndModal_DeleteButtonAndModal","Title","ProjectsList","componentDidMount","fetchProjects","componentWillUnmount","pendingProjectsRequest","fetchError","Container","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","Row","ProjectsList_FetchingProjects","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","FetchingProjects","NoProjects","FetchProjectsError","common_BackButton","text","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","Form","noValidate","Group","Label","Control","type","onChange","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","push","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WORKFLOWS_URL","JSONtoWorkflow","id_project","objectSpread","projectId","workflowToJSON","graph","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","getWorkflow","_getWorkflow","workflow","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","info","deleteWorkflow","_deleteWorkflow","startWorkflow","_startWorkflow","_callee6","startedRunId","_context6","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","path","bem","strokeWidth","width","stroke","d","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","event","target","getModel","onModelUpdated","Model","parameters_Number","isRequired","isNaN","NumberWidget","parameters_Boolean","BooleanWidget","checked","Check","label","TextFromDropdownModel","getChoices","find","choice","choices","TextFromDropdown","onChangeValue","HtmlModel","Html","handleEditorChange","es2015","onEditorChange","initialValue","init","menubar","ChoiceBuilderModel","index","splice","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","striped","bordered","AddChoice","isNewChoiceValid","_this3","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onImport","onFilePicked","InputGroup","Prepend","style","display","accept","multiple","FormControl","readOnly","Append","height","boxSizing","CodeEditorModalAndButton","hideModal","onSave","code","onUpdateCode","CodeEditorModal_CodeEditorModal","onClose","CodeEditorModal","onCodeEdited","size","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","react_ace_lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","b","Math","floor","random","toString","slice","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","PrimitiveParameters","parameters","forEach","parameter","mapParametersArrayToMap","Number","Boolean","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","title","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","getId","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","ParameterContainerLineSeparator","_ref4","UnsupportedParameter","_ref5","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","block","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","findIndex","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","prevProps","prevState","snapshot","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","_this$props","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","get","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","setTimeout","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","xs","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","keys","Runs","runs","getLatestRun","containsRun","run","getBlockRuns","blockId","getBlockRun","filter","blockRun","getFinishedRuns","isFinished","DefaultBlockNodeModel","_DefaultNodeModel","blockRuns","_runs","getLabel","setId","setLabel","blockTypeDefinition","latestBlockRun","wasStarted","isRunning","isFailed","getRunnableBlocksCount","getAllParentBlocks","assertThisInitialized","getRunningBlocksCount","toConsumableArray","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","DefaultNodeModel","parents","blockParents","parent","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","Spinner","animation","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","RunStates","freeze","FAILED","RUNNING","FINISHED","NOT_STARTED","BlockRun","runId","cacheId","getBlockId","getState","getRunId","getCacheId","DoBlockRunAdapter","publishRun","waitRun","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","installFactories","installDefaultFactories","registerLinkFactory","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","Run","createdAt","getCreatedAt","getRunningBlockRuns","getFailedBlockRuns","getFinishedBlockRuns","RUNS_URL","JSONtoRun","id_cache","runsComparator","RunsService","getRunsOfWorkflow","_getRunsOfWorkflow","workflowId","sort","getDownloadLink","format","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadNameFactory","downloadLinkFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ToggleButtonGroup","defaultValue","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","downloadName","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","href","download","DropdownDownload","LoadingButton","isSaving","role","aria-hidden","RunsControls_RunsControls","onStart","isStarting","startText","RunsControls_RunsProgressBar","common_LoadingButton","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","ProgressBar","animated","now","max","WorkflowRunsControls","startError","waitForRunStateReceived","runnableWorkflow","addRunsListener","listener","getRuns","removeRunsListener","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","onInputChange","_this$state","aria-describedby","CreateBlockingContext","onShowPopover","onCreated","onAdd","Overlay","placement","constainer","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","Popover","RandomColorPicker_RandomColorPicker","BlockingContextsCRUD","onAddBlockingContext","addContext","log","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","onRemoveContext","removeContext","WorkflowBlockingSettings","onModelUpdate","WorkflowBlockingSettings_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","areSomeBlockingContextsEnabled","mutateToSingleBlockingContextForAllDoBlocks","removeAllBlockingContexts","renderCheckboxIndeterminateState","checkbox","indeterminate","isSignleBlockingContextEnabledForAllDoBlocks","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getBlockModel","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","BlockingContextsModel","setContexts","toRemove","indexOf","_disableBlockingContext","getDefaultContext","_enableContextForAllDoBlocks","WorkflowGraphModel","blockingContexts","getBlocksArray","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","onWorkflowEdited","serializeDiagram","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditorContainer_LoadingWorkflowEditor","WorkflowEditor_WorkflowEditor_WorkflowEditor","LoadingWorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","slicedToArray","startWatchingRunsStatus","setInterval","stopWatchRunsStatus","clearInterval","WorkflowDashboard","saveError","fetchRunnableWorkflow","getWorkflowIdFromUrl","match","runnableWorkflowRequest","WorkflowEditorContainer_WorkflowEditorContainer","Workflows","Switch","Route","exact","WorkflowsTable","workflows","onWorkflowDeleted","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflows","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflows","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","aria-label","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ItemsTable","columnNames","getColumnNames","ItemsTable_DeleteItemButton","onItemDeleted","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","ItemsImporter_ItemsImporter","ItemsView_FetchingItems","ItemsTable_ItemsTable","FetchingItems","ProjectView","fetchProject","pendingProjectRequest","ProjectView_FetchingProject","ProjectData","Tabs","defaultActiveKey","Tab","eventKey","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","FetchingProject","EditProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","EditProject_FetchingProject","UpdateProjectError","Projects","AppRouter","render","Redirect","Layout","previousState","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","tinymce","selector","plugins","App","Layout_Layout","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0eb17391.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <Button variant=\"danger\" className=\"confirm\" onClick={this.onConfirmDeletion} disabled={this.state.deleting}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n  return (\n    <tr>\n\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td>\n\n        <Link to={editProjectLink} className=\"icon-button\">\n          <i className=\"fas fa-edit\"/>\n        </Link>\n\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.projects && !this.state.fetchError &&\n            <FetchingProjects/>\n          }\n\n          {\n            !this.state.projects && this.state.fetchError &&\n            <FetchProjectsError/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length === 0 &&\n            <NoProjects/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length > 0 &&\n            <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingProjects = () => (\n  <Col>\n    <p>Fetching projects ...</p>\n  </Col>\n);\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async startWorkflow(workflow) {\n    const startedRunId = await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n    return startedRunId;\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <Editor onEditorChange={this.handleEditorChange}\n                initialValue={model.getValue()}\n                init={{menubar: false}}\n                disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </Form.Group>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext\n]);\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n}\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = run.getBlockRun(blockId);\n    this.waitRun = run.getBlockRun(`${blockId}_wait`);\n  }\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.installFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  installFactories() {\n    this.installDefaultFactories();\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.forceUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n\n  constructor(id, blockRuns, createdAt) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../../models/Run\";\nimport BlockRun from \"../../models/BlockRun\";\nimport Runs from \"../../models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at));\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRunsOfWorkflow(workflowId) {\n    const jsonList = await getJSON(`${RUNS_URL}?workflowId=${workflowId}`);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n}\n","import React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadNameFactory, downloadLinkFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                downloadName={downloadNameFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  downloadName={downloadNameFactory(run, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, downloadName, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} download={downloadName}>\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, downloadName, isLatest, id}) => (\n  <Dropdown.Item href={link} download={downloadName}>\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isSaving, disabled, onClick, children, block}) => (\n  <Button disabled={disabled || isSaving} onClick={onClick} className={block ? 'btn-block' : ''}>\n    {\n      isSaving &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default ({runnable, downloadNameFactory, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <div>\n    <Card>\n      <Card.Header>Execution</Card.Header>\n\n      <Card.Body>\n        {\n          runnable.isRunning() &&\n          <div>\n            Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n            Progress:<br/>\n            <RunsProgressBar runnable={runnable}/>\n          </div>\n        }\n\n        <LoadingButton block onClick={onStart}\n                       disabled={!runnable.canStart()}\n                       isSaving={isStarting}>{startText}</LoadingButton>\n\n      </Card.Body>\n    </Card>\n\n    <Card className=\"mt-2\">\n      <Card.Header>Results</Card.Header>\n      <Card.Body>\n        <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                          downloadNameFactory={downloadNameFactory}\n                          runnable={runnable}/>\n      </Card.Body>\n    </Card>\n  </div>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.startWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      downloadNameFactory={(run, format) => `${workflow.name} #${run.id}.${format}`}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\n\nexport default class CreateBlockingContext extends Component {\n\n  state = {\n    show: false\n  };\n\n  container = React.createRef();\n\n  // TODO: Fix position of popver\n\n  onShowPopover = ({target}) => this.setState({show: true, target});\n\n  onCreated = (context) => {\n    this.setState({show: false});\n    this.props.onAdd(context);\n  };\n\n  render() {\n    return (\n      <div >\n        <Button className=\"btn-block\" onClick={this.onShowPopover} ref={this.container}>Add blocking context</Button>\n        {\n          this.container.current &&\n          <Overlay\n            show={this.state.show}\n            placement=\"left-start\"\n            constainer={this.container.current}\n            target={this.container.current}>\n\n            <CreateBlockingContextPopover onCreated={this.onCreated}/>\n          </Overlay>\n        }\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n\n  state = {\n    name: '',\n    color: null\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  isValid = () => this.state.name.length > 0;\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      name: this.state.name,\n      color: this.state.color\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Popover title=\"Create blocking context\" id=\"a\">\n        <Form.Row>\n          <Col xs=\"12\">\n            <Form.Group>\n              <Form.Control name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Blocking context name\"\n                            value={name}\n                            onChange={this.onNameChange}/>\n            </Form.Group>\n\n          </Col>\n          <Col xs=\"8\">\n            <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n          </Col>\n          <Col xs=\"4\">\n            <Button className=\"btn-block\"\n                    disabled={!this.isValid()}\n                    onClick={this.onAdd}>Add</Button>\n          </Col>\n        </Form.Row>\n      </Popover>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.forceUpdate();\n    console.log(context);\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Blocking contexts</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}/>\n        <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.forceUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.model;\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const contexts = model.getContexts();\n\n    if (contexts.length <= 0) {\n      return (\n        <Form.Text className=\"text-muted\">\n          No blocking contexts created yet in this workflow\n        </Form.Text>\n      )\n    }\n\n    return (\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n        <tr>\n          <th/>\n          <th>Name</th>\n          <th/>\n        </tr>\n        </thead>\n        <tbody>\n\n        {\n          contexts.map(context => (\n            <tr key={context.id}>\n              <td className=\"color-box-container\">\n                <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n              </td>\n              <td>{context.name}</td>\n              <td>\n                <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n                  <i className=\"fas fa-trash-alt\"/>\n                </a>\n              </td>\n            </tr>\n          ))\n        }\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\n\nexport default class WorkflowBlockingSettings extends Component {\n\n  render() {\n    const {graphModel, onModelUpdate} = this.props;\n    return (\n      <ParameterContainerCard title=\"Blocking workers\">\n        <WorkflowBlockingCheckbox graphModel={graphModel} onModelUpdate={onModelUpdate}/>\n        <BlockingContextsCRUD graphModel={graphModel} onModelUpdate={onModelUpdate}/>\n      </ParameterContainerCard>\n    );\n  }\n\n}\n\n\nclass WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            If checked, one worker will be able to work only on one job of this workflow. When indeterminate, workers\n            won't be able to work on job of the same blocking context\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Block workers\"\n                      value={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSignleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={runnableWorkflow.isRunning()}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         downloadNameFactory={(run, format) => `${blockModel.getLabel()} #${run.getRunId()}.${format}`}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={!runnableWorkflow.canBeEdited()}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={!runnableWorkflow.canBeEdited()}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block} runnableWorkflow={runnableWorkflow}/>\n      </div>\n    }\n  />\n);\n\n","export default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById (id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableBlockingContext(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  _disableBlockingContext(context) {\n    // TODO: Search all do block that use this and disable\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    name: 'Default',\n    color: '#ffaff3'\n  });\n\n  _enableContextForAllDoBlocks() {\n\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => this.removeContext(context));\n  }\n\n  isSignleBlockingContextEnabledForAllDoBlocks() {\n\n  }\n\n  areSomeBlockingContextsEnabled() {\n\n  }\n\n\n}\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel();\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed}) => {\n  const isValid = graphModel.isValid();\n  const isRunning = runnableWorkflow.isRunning();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span>\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          isRunning &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || isRunning}\n                     isSaving={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    // TODO: The logic to block edit is spread everywhere, can we group it somewhere?\n    this.graphModel.setLocked(!runnableWorkflow.canBeEdited());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onWorkflowEdited();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            runnableWorkflow.canBeEdited() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n\n            <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                             graphModel={this.graphModel}\n                             onSavePressed={this.onSavePressed}\n                             isSaving={this.props.isSaving}/>\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={() => this.forceUpdate()}\n                                          runnableWorkflow={runnableWorkflow}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={() => this.forceUpdate()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\nimport {Spinner} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    // TODO: Handle error\n    if (this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow) {\n      return <LoadingWorkflowEditor/>\n    } else {\n      return <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n    }\n  }\n}\n\nconst LoadingWorkflowEditor = () => (\n  <div className=\"loading-spinner-container\">\n    <Spinner animation=\"border\" variant=\"primary\"/>\n  </div>\n);\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"./rest/WorkflowsService\";\nimport RunnableWorkflow from \"../models/RunnableWorkflow\";\nimport RunsService from \"./rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class WorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null,\n    isSaving: false,\n    saveError: false,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WorkflowDashboard from \"./WorkflowDashboard/WorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={WorkflowDashboard}/>\n  </Switch>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            {\n              !this.state.workflows &&\n              <FetchingWorkflows/>\n            }\n\n            {\n              this.state.fetchError &&\n              <FetchingWorkflowsError/>\n            }\n\n            {\n              this.state.workflows &&\n              <WorkflowsTable workflows={this.state.workflows}\n                              onWorkflowDeleted={this.fetchWorkflows}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport const FetchingWorkflows = () => <p>Fetching workflows...</p>;\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container className=\"items-table-container\">\n          {\n            !this.state.items &&\n            <FetchingItems/>\n          }\n\n          {\n            this.state.items &&\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst FetchingItems = () => (\n  <Container><p>Loading items ...</p></Container>\n);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n\n        {\n          this.state.project &&\n          <Row>\n            <ProjectData project={this.state.project}/>\n\n            <div style={{width: '100%'}}>\n              <hr/>\n\n              <Tabs defaultActiveKey=\"workflow\">\n                <Tab eventKey=\"workflow\" title=\"Workflows\">\n                  <EmbeddableWorkflowsList project={this.state.project}/>\n                </Tab>\n\n                <Tab eventKey=\"items\" title=\"Items\">\n                  <ItemsView project={this.state.project}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </Row>\n        }\n\n      </Container>\n    );\n  }\n}\n\nconst FetchingProject = () => (<p>Fetching ...</p>);\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}