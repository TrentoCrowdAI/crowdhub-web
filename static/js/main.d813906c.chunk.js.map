{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/utils.js","Services/JobsService.js","Components/Jobs/JobsList/DeleteJobModal.js","Components/Jobs/CreateJob/Templates.js","Components/Jobs/JobsList/CreateJobButton.js","Components/Jobs/JobsList/JobsList.js","Components/Jobs/utils/job.js","Components/Jobs/JobForm/DesignEditor/BlocksColumn.js","Components/Jobs/JobForm/DesignEditor/blocks/BlockCard.js","Components/Jobs/JobForm/DesignEditor/blocks/utils.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputDynamicText.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputStaticText.js","Components/Jobs/JobForm/DesignEditor/blocks/output/OutputOpenQuestion.js","Components/Jobs/JobForm/DesignEditor/blocks/output/OutputChoices.js","Components/Jobs/JobForm/DesignEditor/blocks/definitions.js","Components/Jobs/JobForm/DesignEditor/blocks/input/InputDynamicImage.js","Components/Jobs/JobForm/DesignEditor/DesignEditor.js","Components/Jobs/JobForm/JobForm.js","Components/common/BackButton.js","Components/Jobs/CreateJob/CreateJob.js","Components/Jobs/ViewJob/PublishButtons.js","Components/Jobs/utils/route.js","Components/Jobs/ViewJob/ViewJob.js","Components/Jobs/EditJob/EditJob.js","Components/Jobs/Jobs.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","bg","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","APP_URL","process","Errors","JSONtoJob","created_at","Date","updated_at","deleted_ad","max_votes","maxVotes","num_votes","numVotes","design","forEach","block","uuid","valid","jobToJSON","job","JobsService","getJobs","_getJobs","Object","asyncToGenerator","mark","jsonList","concat","map","getJob","_getJob","jsonJob","_x","createJob","_createJob","_x2","updateJob","_updateJob","t0","response","deleteJob","_deleteJob","publish","_publish","_callee6","platform","_context6","DeleteJobModal","_ref","show","jobToDelete","onCancel","onConfirmDeletion","Modal","Header","Title","Body","name","Footer","Button","variant","Templates","text_highlighting","description","type","question","csvVariable","highlightable","csvTitleVariable","highlightedCsvVariable","choices","label","value","required","choice_type","size","image_classification","image_highlighting","blank","values","template","expanded","CreateJobButton","state","showModal","_this2","CreateJobButton_SelectTemplateModal","setState","SelectTemplateModal","Alert","Row","keys","Col","xs","sm","xl","key","Card","Text","Link","JobsList","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchJobs","componentWillUnmount","pendingJobsRequest","onUserWantToDeleteJob","onOpenJobView","history","push","onOpenEditJob","onUserConfirmDeletion","jobs","inherits","createClass","_fetchJobs","fetchError","Container","CreateJobButton_CreateJobButton","JobsList_FetchingJobs","JobsList_FetchJobsError","JobsList_NoJobs","JobsList_JobsTable","FetchingJobs","NoJobs","FetchJobsError","JobsTable","_ref2","Table","hover","JobsList_JobsTableRow","ignoreEventAnd","callback","e","stopPropagation","JobsTableRow","_ref3","rewardIntegerToString","reward","rewardFloatToInteger","int","Math","floor","BlocksColumn","handleBlockDataChange","index","blocks","blocksList","onChange","title","ref","componentsContainerRef","definition","blockDefinitionsMap","_Component2","expandable","BlocksColumn_ComponentNotFoundError","ComponentNotFoundError","BlockCard","toggleExpansion","previousState","onToggleExpansion","data-block-type","data-block-id","Collapse","in","children","textChangeHandler","component","field","target","defineProperty","checkboxChangeHandler","checked","validateAndNotify","selectChangeHandler","textBlurHandler","toggleExpansionHandler","validate","blockState","blockSpecificConfig","objectSpread","input_InputDynamicText","blockTypeName","InputDynamicText","onChangeHighlightable","BlockCard_BlockCard","assign","md","lg","Form","Group","Label","Control","onBlur","Check","input_InputStaticText","InputStaticText","handleEditorChange","text","es2015","onEditorChange","initialValue","init","menubar","output_OutputOpenQuestion","OutputOpenQuestion","ChoiceTypes","OutputChoices","onChoicesChanged","choice","OutputChoices_Choices","Choices","newLabel","newValue","onAddChoice","onRemoveChoice","splice","isNewChoiceValid","trim","_this3","striped","bordered","disabled","output_OutputChoices","mapBlocksDefinitionArrayToMap","blockDefinitions","blockDefinition","InputDynamicImage","tools","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","setupDragula","toolsBlocks","toolsBlocksRef","current","designBlocks","designBlocksRef","containers","drake","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockDataByIdAndNotify","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlockDataAndNotify","initialBlocks","nextSibling","findIndex","b","temp","blockToRemoveIndex","React","createRef","BlocksColumn_BlocksColumn","JobForm","handleSubmit","formikBag","designValid","valuesToJobData","onSubmit","_instructions","items_csv","items_gold_csv","instructions","jobDataToValues","jobDataFromProps","validationSchema","Yup","shape","integer","positive","min","html","css","js","onDesignChanged","isDesignValid","find","jobData","formik_esm","initialValues","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","placeholder","Feedback","rows","step","InputGroup","Prepend","textareaName","DesignEditor_DesignEditor","ButtonToolbar","cancelText","submitText","common_BackButton","DEFAULT_TEMPLATE_ID","CreateJob","buildJobStartingFromTemplate","handleJobSubmission","setSubmitting","redirectToJobsList","onJobCreationFailed","creationError","templateId","match","template_id","CreateJob_JobCreationFailed","JobForm_JobForm_JobForm","JobCreationFailed","PublishButtons","openConfirmDialogForPlatform","publishOnPlatform","onPublishing","onJobPublished","onPublishError","isPublishing","published","publishError","PublishButtons_PublishJobModal","onConfirm","PublishButtons_PublishingModal","PublishButtons_PublishedModal","onClose","PublishButtons_PublishFailedModal","PublishJobModal","PublishingModal","ProgressBar","animated","now","PublishedModal","_ref4","PublishFailedModal","_ref5","ViewJob","fetchJob","pendingJobRequest","JobData","PublishButtons_PublishButtons","ViewJob_FetchingJob","FetchingJob","EditJob","assertThisInitialized","returnToJobPage","onUpdateJobFailed","updateError","EditJob_UpdateJobError","EditJob_FetchingJob","UpdateJobError","Jobs","Switch","Route","path","exact","Layout","BrowserRouter","Sidebar_Sidebar_Sidebar","AppBar_AppBar","render","Redirect","tinymce","selector","plugins","App","Layout_Layout","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d813906c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/jobs\">\n              Jobs\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","import {getJSON, postJSON, sendDelete, putJSON} from \"./utils\";\nimport uuid from 'uuid';\n\nexport const APP_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:4000\";\n\nexport const Errors = {\n    INVALID_JOB_DATA: 'invalid_job_data'\n};\n\nfunction JSONtoJob(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  json.data.max_votes = json.data.maxVotes;\n  json.data.num_votes = json.data.numVotes;\n\n  delete json.data.maxVotes;\n  delete json.data.numVotes;\n\n  if (json.data.design) {\n    json.data.design.forEach(block => {\n      // The server may have remove the id of the block, so we generate a new one\n      block.id = block.id || uuid();\n\n      // We consider valid blocks that were stored on the server\n      block.valid = true;\n    });\n  } else {\n    json.data.design = [];\n  }\n\n  return json;\n}\n\nfunction jobToJSON(job) {\n  job.data.maxVotes = job.data.max_votes;\n  job.data.numVotes = job.data.num_votes;\n\n  delete job.data.max_votes;\n  delete job.data.num_votes;\n\n  return job;\n}\n\nexport default {\n  async getJobs() {\n    const jsonList = await getJSON(`${APP_URL}/jobs`);\n    return jsonList.map(JSONtoJob);\n  },\n\n  async getJob(id) {\n    const jsonJob = await getJSON(`${APP_URL}/jobs/${id}`);\n    return JSONtoJob(jsonJob);\n  },\n\n  async createJob(job) {\n    const json = jobToJSON(job);\n    return await postJSON(`${APP_URL}/jobs`, json);\n  },\n\n  async updateJob(job) {\n    try {\n      const json = jobToJSON(job);\n      return await putJSON(`${APP_URL}/jobs/${job.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_JOB_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteJob(job) {\n    return await sendDelete(`${APP_URL}/jobs/${job.id}`);\n  },\n\n  async publish(job, platform) {\n    const jsonJob = await postJSON(`${APP_URL}/jobs/${job.id}/publish`, {platform});\n    return JSONtoJob(jsonJob);\n  }\n\n}\n","import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\n\nexport default ({show, jobToDelete, onCancel, onConfirmDeletion}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Delete job <span className=\"job-id\">#{show && jobToDelete.id}</span></Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Are you sure you want to delete \"<strong>{show && jobToDelete.data.name}</strong>\"?\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onCancel}>Cancel</Button>\n      <Button variant=\"danger\" onClick={onConfirmDeletion}>Delete</Button>\n    </Modal.Footer>\n  </Modal>\n);\n","const Templates = {\n\n  text_highlighting: {\n    name: 'Text Highlighting',\n    description: 'Show text to users and ask them questions about it. Users will be able to highlight the text to answer the questions.',\n    design: [{\n      type: \"input_dynamic_text\",\n      question: \"Select which phrase best summarizes the abstract\",\n      csvVariable: \"abstract\",\n      highlightable: true,\n      csvTitleVariable: \"title\",\n      highlightedCsvVariable: \"highlighted_parts\"\n    }, {\n      type: \"output_choices\",\n      question: \"Does the paper describe a study that involves older adults?\",\n      choices: [{\n        label: \"Yes\",\n        value: \"Yes\"\n      }, {\n        label: \"No\",\n        value: \"No\"\n      }, {\n        label: \"Maybe\",\n        value: \"Maybe\"\n      }],\n      required: true,\n      choice_type: \"single_radio\",\n      csvVariable: \"in_out_radio\"\n    }, {\n      size: \"big\",\n      type: \"output_open_question\",\n      question: \"Explain your decision.\",\n      required: false,\n      csvVariable: \"decision_explaination\"\n    }]\n  },\n\n  image_classification: {\n    name: 'Image Classification',\n    description: 'Show images to users and ask them to answer to a multiple choice question.',\n    design: [{\n      type: \"input_dynamic_image\",\n      csvVariable: \"image_url\",\n      highlightable: false\n    }, {\n      type: \"output_choices\",\n      choices: [{\n        label: \"Yes\",\n        value: \"yes\"\n      }, {\n        label: \"No\",\n        value: \"no\"\n      }],\n      question: \"Does this image contain a cat?\",\n      required: true,\n      choice_type: \"single_radio\",\n      csvVariable: \"cat_radio\"\n    }]\n  },\n\n  image_highlighting: {\n    name: 'Image Highlighting',\n    description: 'Show images to users and ask them to highlight portion of the images to answer a question.',\n    design: [{\n      type: \"input_dynamic_image\",\n      question: \"Select the person in the photo.\",\n      csvVariable: \"image_url\",\n      highlightable: true,\n      highlightedCsvVariable: \"annotation\"\n    }]\n  },\n\n  blank: {\n    name: 'Blank',\n    description: 'Design from scratch the design of your Job to mix different type of questions as you like.',\n    design: []\n  }\n\n};\n\n\n// Set all the templates designs valid and expanded\nObject.values(Templates).forEach(template => {\n  template.design.forEach(block => {\n    block.valid = true;\n    block.expanded = true;\n  });\n});\n\n\nexport default Templates;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Button, Modal, Row, Col, Card, Alert} from \"react-bootstrap\";\n\nimport Templates from '../CreateJob/Templates';\nimport './CreateJobButtons.css';\n\nexport default class CreateJobButton extends Component {\n\n  state = {\n    showModal: false\n  };\n\n  render() {\n    return (\n      <div>\n        <SelectTemplateModal show={this.state.showModal} onCancel={() => this.setState({showModal: false})}/>\n\n        <Button onClick={() => this.setState({showModal: true})}>New</Button>\n      </div>\n    );\n  }\n}\n\n\nconst SelectTemplateModal = ({show, onCancel}) => (\n  <Modal show={show} size=\"lg\">\n    <Modal.Header>\n      <Modal.Title>Create a new Job</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      You are creating a new Job. Select a template to start with:\n\n      <Alert className=\"mt-1\" variant=\"primary\">\n        <i className=\"fas fa-info-circle mr-2\"/>\n        You can always edit the job design and CSV variable names later.\n      </Alert>\n\n      <Row>\n        {\n          Object.keys(Templates).map(id => {\n            const template = Templates[id];\n            return (\n              <Col xs=\"12\" sm={6} xl={3} key={id} className=\"template-card\">\n                <Card>\n                  <Card.Body>\n                    <Card.Title>{template.name}</Card.Title>\n                    <Card.Text>{template.description}</Card.Text>\n\n                    <div className=\"select-template-button-container\">\n                      <Link to={`/jobs/new/${id}`} className=\"btn btn-primary\">Choose</Link>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )\n          })\n        }\n      </Row>\n\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onCancel}>Cancel</Button>\n    </Modal.Footer>\n  </Modal>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport Link from \"react-router-dom/Link\";\nimport {Alert, Col, Container, Row, Table} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport DeleteJobModal from \"./DeleteJobModal\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport \"./JobsList.css\";\nimport CreateJobButton from \"./CreateJobButton\";\n\nexport class JobsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchJobs();\n\n  componentWillUnmount = () => this.pendingJobsRequest.cancel();\n\n  async fetchJobs() {\n    try {\n      this.pendingJobsRequest = makeCancellable(JobsService.getJobs());\n      const jobs = await this.pendingJobsRequest.result;\n\n      this.setState({jobs});\n    } catch (e) {\n      this.setState({\n        jobs: null,\n        fetchError: true\n      });\n    }\n  }\n\n  onUserWantToDeleteJob = (job) => this.setState({jobToDelete: job});\n\n  onOpenJobView = (job) => this.props.history.push(`/jobs/${job.id}`);\n\n  onOpenEditJob = (job) => this.props.history.push(`/jobs/${job.id}/edit`);\n\n  onUserConfirmDeletion = async () => {\n    const job = this.state.jobToDelete;\n    this.setState({jobs: null, jobToDelete: null});\n\n    await JobsService.deleteJob(job);\n\n    await this.fetchJobs();\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        { /* Confirm delete job modal */}\n        <DeleteJobModal jobToDelete={this.state.jobToDelete} show={!!this.state.jobToDelete}\n                        onCancel={() => this.setState({jobToDelete: null})}\n                        onConfirmDeletion={this.onUserConfirmDeletion}/>\n\n        <Row>\n          <Col>\n            <h2>List</h2>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <CreateJobButton/>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.jobs && !this.state.fetchError &&\n            <FetchingJobs/>\n          }\n\n          {\n            !this.state.jobs && this.state.fetchError &&\n            <FetchJobsError/>\n          }\n\n          {\n            this.state.jobs && this.state.jobs.length === 0 &&\n            <NoJobs/>\n          }\n\n          {\n            this.state.jobs && this.state.jobs.length > 0 &&\n            <JobsTable jobs={this.state.jobs}\n                       onUserWantToDeleteJob={this.onUserWantToDeleteJob}\n                       onOpenJobView={this.onOpenJobView}\n                       onOpenEditJob={this.onOpenEditJob}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingJobs = () => (\n  <Col>\n    <p>Fetching jobs ...</p>\n  </Col>\n);\n\nexport const NoJobs = () => (\n  <Col>\n    <p>You haven't created any jobs yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchJobsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the jobs\n      </Alert>\n    </Container>\n  </Col>\n);\n\nexport const JobsTable = ({jobs, onUserWantToDeleteJob, onOpenJobView, onOpenEditJob}) => (\n  <Col>\n    <h1>Jobs</h1>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Platforms</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {jobs.map(job => (\n        <JobsTableRow job={job} key={job.id}\n                      onUserWantToDeleteJob={onUserWantToDeleteJob}\n                      onOpenEditJob={onOpenEditJob}\n                      onOpenJobView={onOpenJobView}/>\n      ))}\n      </tbody>\n    </Table>\n  </Col>\n);\n\nconst ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n\nexport const JobsTableRow = ({job, onUserWantToDeleteJob, onOpenJobView, onOpenEditJob}) => (\n  <tr onClick={() => onOpenJobView(job)} className=\"clickable-row\">\n    <td>{job.id}</td>\n    <td>{job.data.name}</td>\n    <td>{job.data.description}</td>\n    <td/>\n    <td>\n\n      <a className=\"icon-button\"\n         onClick={ignoreEventAnd(() => onOpenEditJob(job))}>\n        <i className=\"fas fa-edit\"/>\n      </a>\n\n      <a className=\"icon-button\"\n         onClick={ignoreEventAnd(() => onUserWantToDeleteJob(job))}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    </td>\n  </tr>\n);\n","\nexport const rewardIntegerToString = (reward) => `${reward / 100}`;\n\nexport const rewardFloatToInteger = (int) => Math.floor(int * 100);\n","import React, {Component} from 'react';\nimport {Card} from \"react-bootstrap\";\n\nimport './BlocksColumn.css'\n\nexport default class BlocksColumn extends Component {\n\n  handleBlockDataChange = (index) => (data) => {\n    const blocks = this.props.blocksList;\n    blocks[index] = data;\n    this.props.onChange(blocks);\n  };\n\n\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>{this.props.title}</Card.Header>\n        <Card.Body>\n          <div className=\"blocks-container\" ref={this.props.componentsContainerRef}>\n            {\n              this.props.blocksList.map((data, index) => {\n                const definition = this.props.blockDefinitionsMap[data.type];\n                const key = data.id || index;\n\n                if (definition) {\n                  const Component = definition.Component;\n                  return <Component key={key} data={data} onChange={this.handleBlockDataChange(index)}\n                                    expandable={this.props.expandable}/>\n                } else {\n                  return <ComponentNotFoundError key={key} type={data.type}/>\n                }\n              })\n            }\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst ComponentNotFoundError = ({type}) => <p>Can't render component of type {type}</p>;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './BlockCard.css';\n\n\nexport default class BlockCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: props.expanded\n    };\n  }\n\n  toggleExpansion = () => this.setState(\n    (previousState) => {\n      return {expanded: !previousState.expanded}\n    },\n    () => this.props.onToggleExpansion(this.state.expanded)\n  );\n\n  render() {\n    return (\n      <Card className=\"block-card\" data-block-type={this.props.type} data-block-id={this.props.id}>\n        <Card.Header>\n          {\n            this.props.expandable &&\n            <div onClick={this.toggleExpansion}>\n              <div>\n                {\n                  /* Hacky: show the warning icon only if card is expandable */\n                  this.props.valid === false &&\n                  <i className=\"fas fa-exclamation-triangle\"/>\n                }\n\n                {this.props.title}\n              </div>\n\n              <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n            </div>\n          }\n          {!this.props.expandable && this.props.title}\n\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","\nexport const textChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.value});\n};\n\nexport const checkboxChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.checked}, () => validateAndNotify(component));\n};\n\nexport const selectChangeHandler = component => e => {\n  const field = e.target;\n  component.setState({[field.name]: field.value}, () => validateAndNotify(component));\n};\n\nexport const textBlurHandler = component => () => validateAndNotify(component);\n\nexport const toggleExpansionHandler = component => expanded => component.setState(\n  {expanded},\n  () => component.props.onChange(component.state)\n);\n\nexport const validateAndNotify = component => component.setState({\n  valid: component.validate()\n}, () => component.props.onChange(component.state));\n\n\nexport const blockState = ({data}, blockSpecificConfig) => {\n  return {\n    id: data.id,\n    type: data.type,\n    expanded: data.expanded || false,\n    valid: data.valid || false,\n\n    ...blockSpecificConfig\n  };\n};\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport BlockCard from \"../BlockCard\";\nimport {blockState, textBlurHandler, textChangeHandler, toggleExpansionHandler} from \"../utils\";\n\nconst BLOCK_TYPE = 'input_dynamic_text';\n\nclass InputDynamicText extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      csvVariable: props.data.csvVariable || '',\n      csvTitleVariable: props.data.csvTitleVariable || '',\n      highlightable: props.data.highlightable || false,\n      question: props.data.question || '',\n      highlightedCsvVariable: props.data.highlightedCsvVariable || ''\n    });\n  }\n\n  validate = () => {\n    const data = this.state;\n    if (data.csvVariable === '' || data.csvTitleVariable === '') {\n      return false;\n    }\n\n    return !(data.highlightable && (data.question === '' || data.highlightedCsvVariable === ''));\n  };\n\n  onChangeHighlightable = (e) => this.setState(\n    {highlightable: e.target.checked},\n    () => this.props.onChange(this.state)\n  );\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)}\n                 title=\"Input Dynamic Text\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Title Variable</Form.Label>\n              <Form.Control name=\"csvTitleVariable\" type=\"text\" value={this.state.csvTitleVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Form.Group>\n          <Form.Check type=\"checkbox\" name=\"highlightable\" label=\"Enable text highlighting\"\n                      checked={this.state.highlightable} onChange={this.onChangeHighlightable}/>\n        </Form.Group>\n\n        {\n          this.state.highlightable &&\n          <Row>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Question</Form.Label>\n                <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Highlighted CSV Variable</Form.Label>\n                <Form.Control name=\"highlightedCsvVariable\" type=\"text\"\n                              value={this.state.highlightedCsvVariable}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n          </Row>\n        }\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputDynamicText\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {Editor} from '@tinymce/tinymce-react';\nimport BlockCard from \"../BlockCard\";\nimport {blockState, toggleExpansionHandler} from \"../utils\";\n\nconst BLOCK_TYPE = 'input_static_text';\n\nclass InputStaticText extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      text: props.data.text || '',\n      valid: true\n    });\n  }\n\n  validate = () => true;\n\n  handleEditorChange = text => this.props.onChange({...this.state, text});\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)} title=\"Input Static Text\"\n                 type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Form.Group>\n          <Editor onEditorChange={this.handleEditorChange}\n                  initialValue={this.props.data.text}\n                  init={{menubar: false}}/>\n        </Form.Group>\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputStaticText\n}\n","import React, {Component} from 'react';\nimport {Row, Col, Form} from \"react-bootstrap\";\n\nimport BlockCard from \"../BlockCard\";\nimport {\n  blockState,\n  checkboxChangeHandler,\n  selectChangeHandler,\n  textBlurHandler,\n  textChangeHandler,\n  toggleExpansionHandler\n} from \"../utils\";\n\nconst BLOCK_TYPE = 'output_open_question';\n\nclass OutputOpenQuestion extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n      question: props.data.question || '',\n      csvVariable: props.data.csvVariable || '',\n      required: props.data.required || false,\n      size: props.data.size || 'slim'\n    });\n  }\n\n  validate = () => this.state.csvVariable !== '' && this.state.question !== '';\n\n  render() {\n    return (\n      <BlockCard onToggleExpansion={toggleExpansionHandler(this)} {...this.state}\n                 title=\"Output Open Question\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Question</Form.Label>\n              <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Check type=\"checkbox\" name=\"required\" label=\"Required\"\n                          checked={this.state.required} onChange={checkboxChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Text field size</Form.Label>\n              <Form.Control as=\"select\" name=\"size\" onChange={selectChangeHandler(this)} value={this.state.size}>\n                <option value=\"slim\">Slim</option>\n                <option value=\"big\">Big</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n\n      </BlockCard>\n    );\n  }\n}\n\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: OutputOpenQuestion\n}\n","import React, {Component} from 'react';\nimport {\n  blockState,\n  checkboxChangeHandler,\n  selectChangeHandler,\n  textBlurHandler,\n  textChangeHandler,\n  toggleExpansionHandler\n} from \"../utils\";\nimport BlockCard from \"../BlockCard\";\nimport {Col, Form, Button, Table} from \"react-bootstrap\";\n\nconst BLOCK_TYPE = 'output_choices';\n\nconst ChoiceTypes = [{\n  label: 'Multiple choice',\n  value: 'multiple_checkbox'\n}, {\n  label: 'Single choice radio',\n  value: 'single_radio'\n}, {\n  label: 'Single choice dropdown',\n  value: 'single_dropdown'\n}];\n\nclass OutputChoices extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n\n      question: props.data.question || '',\n      choices: props.data.choices || [],\n      csvVariable: props.data.csvVariable || '',\n      required: props.data.required || false,\n      choice_type: props.data.choice_type || 'multiple_checkbox'\n    });\n  }\n\n  onChoicesChanged = choices => this.setState({choices}, () => this.props.onChange(this.state));\n\n  validate = () => {\n    const data = this.state;\n\n    if (data.csvVariable === '' || data.question === '') {\n      return false;\n    }\n\n    return data.choices.length !== 0;\n  };\n\n  render() {\n    return (\n      <BlockCard onToggleExpansion={toggleExpansionHandler(this)} {...this.state}\n                 title=\"Output Choices\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Question</Form.Label>\n              <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>CSV Variable</Form.Label>\n              <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                            onChange={textChangeHandler(this)}\n                            onBlur={textBlurHandler(this)}/>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Check type=\"checkbox\" name=\"required\" label=\"Required\"\n                          checked={this.state.required} onChange={checkboxChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Choice type</Form.Label>\n              <Form.Control as=\"select\" name=\"choice_type\" onChange={selectChangeHandler(this)}\n                            value={this.state.choice_type}>\n                {\n                  ChoiceTypes.map(choice => (\n                    <option key={choice.value} value={choice.value}>{choice.label}</option>\n                  ))\n                }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Choices choices={this.state.choices} onChange={this.onChoicesChanged}/>\n      </BlockCard>\n    );\n  }\n}\n\nclass Choices extends Component {\n\n\n  state = {\n    newLabel: '',\n    newValue: ''\n  };\n\n  onAddChoice = () => {\n    const choices = this.props.choices;\n    choices.push({\n      label: this.state.newLabel,\n      value: this.state.newValue\n    });\n    this.setState({\n      newLabel: '',\n      newValue: ''\n    }, () => this.props.onChange(choices));\n  };\n\n  onRemoveChoice = (index) => {\n    const choices = this.props.choices;\n    choices.splice(index, 1);\n    this.props.onChange(choices);\n  };\n\n  isNewChoiceValid = () => this.state.newLabel.trim() !== '' && this.state.newValue.trim() !== '';\n\n  render() {\n    return (\n      <div>\n        <h5>Choices</h5>\n        <hr/>\n        <Table striped bordered hover >\n          <thead>\n          <tr>\n            <th>Label</th>\n            <th>Value</th>\n            <th/>\n          </tr>\n          </thead>\n          <tbody>\n          {this.props.choices.map((choice, index) => ( // TODO: Assert unique\n            <tr key={choice.value}>\n              <td>{choice.label}</td>\n              <td>{choice.value}</td>\n              <td>\n                <button className=\"icon-button button-link\" onClick={() => this.onRemoveChoice(index)}>\n                  <i className=\"fas fa-trash-alt\"/>\n                </button>\n              </td>\n            </tr>\n          ))}\n          </tbody>\n        </Table>\n\n        <Form.Row>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Label</Form.Label>\n              <Form.Control name=\"newLabel\" type=\"text\" value={this.state.newLabel}\n                            onChange={textChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" lg=\"6\">\n            <Form.Group>\n              <Form.Label>Value</Form.Label>\n              <Form.Control name=\"newValue\" type=\"text\" value={this.state.newValue}\n                            onChange={textChangeHandler(this)}/>\n            </Form.Group>\n          </Col>\n          <Col md=\"12\" className=\"\">\n            <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n          </Col>\n        </Form.Row>\n      </div>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: OutputChoices\n}\n","import InputDynamicText from './input/InputDynamicText';\nimport InputStaticText from \"./input/InputStaticText\";\nimport OutputOpenQuestion from \"./output/OutputOpenQuestion\";\nimport OutputChoices from \"./output/OutputChoices\";\nimport InputDynamicImage from \"./input/InputDynamicImage\";\n\nconst mapBlocksDefinitionArrayToMap = (blockDefinitions) => {\n  const map = {};\n  blockDefinitions.forEach(blockDefinition => map[blockDefinition.blockTypeName] = blockDefinition);\n  return map;\n};\n\nexport default mapBlocksDefinitionArrayToMap([\n  InputDynamicText,\n  InputStaticText,\n  InputDynamicImage,\n\n  OutputOpenQuestion,\n  OutputChoices\n]);\n","import React, {Component} from 'react';\nimport BlockCard from \"../BlockCard\";\nimport {blockState, textBlurHandler, textChangeHandler, toggleExpansionHandler} from \"../utils\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\nconst BLOCK_TYPE = \"input_dynamic_image\";\n\nclass InputDynamicImage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = blockState(props, {\n\n      csvVariable: props.data.csvVariable || '',\n      highlightable: props.data.highlightable || false,\n      question: props.data.question || '',\n      highlightedCsvVariable: props.data.highlightedCsvVariable || ''\n    });\n  }\n\n  validate = () => {\n    const data = this.state;\n    if (data.csvVariable === '') {\n      return false;\n    }\n\n    return !(data.highlightable && (data.question === '' || data.highlightedCsvVariable === ''));\n  };\n\n\n  onChangeHighlightable = (e) => this.setState(\n    {highlightable: e.target.checked},\n    () => this.props.onChange(this.state)\n  );\n\n  render() {\n    return (\n      <BlockCard {...this.state} onToggleExpansion={toggleExpansionHandler(this)}\n                 title=\"Input Dynamic Image\" type={BLOCK_TYPE} expandable={this.props.expandable}>\n\n        <Form.Group>\n          <Form.Label>CSV Variable</Form.Label>\n          <Form.Control name=\"csvVariable\" type=\"text\" value={this.state.csvVariable}\n                        onChange={textChangeHandler(this)}\n                        onBlur={textBlurHandler(this)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Check type=\"checkbox\" name=\"highlightable\" label=\"Enable image highlighting\"\n                      checked={this.state.highlightable} onChange={this.onChangeHighlightable}/>\n        </Form.Group>\n\n        {\n          this.state.highlightable &&\n          <Row>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Question</Form.Label>\n                <Form.Control name=\"question\" type=\"text\" value={this.state.question}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n            <Col md=\"12\" lg=\"6\">\n              <Form.Group>\n                <Form.Label>Highlighted CSV Variable</Form.Label>\n                <Form.Control name=\"highlightedCsvVariable\" type=\"text\"\n                              value={this.state.highlightedCsvVariable}\n                              onChange={textChangeHandler(this)}\n                              onBlur={textBlurHandler(this)}/>\n              </Form.Group>\n            </Col>\n          </Row>\n        }\n      </BlockCard>\n    );\n  }\n}\n\nexport default {\n  blockTypeName: BLOCK_TYPE,\n  Component: InputDynamicImage\n};\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport uuid from 'uuid';\n\nimport Dragula from 'dragula';\nimport \"dragula/dist/dragula.css\";\n\nimport BlocksColumn from \"./BlocksColumn\";\nimport blockDefinitionsMap from './blocks/definitions';\n\n// Array of all the possible blocks, without any data. This array is used to show the tools column from which the user\n// drags out the tools\nconst tools = Object.keys(blockDefinitionsMap).map(type => {\n  return {type}\n});\n\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nexport default class DesignEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toolsBlocksRef = React.createRef();\n    this.designBlocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const toolsBlocks = this.toolsBlocksRef.current;\n    const designBlocks = this.designBlocksRef.current;\n    const containers = [\n      this.toolsBlocksRef.current,\n      this.designBlocksRef.current\n    ];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === toolsBlocks,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === designBlocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === designBlocks) {\n        const siblingIndex = findSiblingIndex(sibling, designBlocks);\n        const isAddingToolToDesign = source === toolsBlocks;\n\n        if (isAddingToolToDesign) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.removeBlockDataByIdAndNotify(id);\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.swapBlockDataAndNotify(blockAIndex, blockBIndex);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.props.initialBlocks.length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.props.initialBlocks.length : nextSibling - 1;\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.props.initialBlocks.length - 1 : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    return {\n      type: element.getAttribute('data-block-type'),\n      id: uuid(),\n      expanded: true,\n      valid: true\n    };\n  };\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.props.initialBlocks;\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    const blocks = this.props.initialBlocks;\n\n    blocks.splice(newBlockIndex, 0, newBlock);\n\n    this.props.onChange(blocks);\n  };\n\n  swapBlockDataAndNotify = (a, b) => {\n    const blocks = this.props.initialBlocks;\n    const temp = blocks[a];\n\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n\n    this.props.onChange(blocks);\n  };\n\n  removeBlockDataByIdAndNotify = id => {\n    const blocks = this.props.initialBlocks;\n    const blockToRemoveIndex = blocks.findIndex(data => data.id === id);\n\n    blocks.splice(blockToRemoveIndex, 1);\n\n    this.props.onChange(blocks);\n  };\n\n  render() {\n    return (\n      <Row className=\"job-design-editor-container\">\n        <Col md=\"6\" lg=\"4\">\n          <BlocksColumn componentsContainerRef={this.toolsBlocksRef}\n                        title=\"Available blocks\"\n                        blockDefinitionsMap={blockDefinitionsMap}\n                        blocksList={tools}\n                        expandable={false}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <BlocksColumn componentsContainerRef={this.designBlocksRef}\n                        title=\"Your job design\"\n                        blockDefinitionsMap={blockDefinitionsMap}\n                        blocksList={this.props.initialBlocks}\n                        expandable={true}\n                        onChange={blocks => this.props.onChange(blocks)}/>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, ButtonToolbar, Col, Form, InputGroup, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport {Editor} from '@tinymce/tinymce-react';\n\nimport {rewardFloatToInteger, rewardIntegerToString} from '../utils/job';\nimport \"./JobForm.css\";\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport default class JobForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      design: (props.jobData && props.jobData.design) || []\n    };\n    this.state.designValid = this.isDesignValid();\n    this._instructions = (props.jobData && props.jobData.instructions) || '';\n  }\n\n  handleSubmit = (values, formikBag) => {\n    if (this.state.designValid) {\n      const job = this.valuesToJobData(values);\n      this.props.onSubmit(job, formikBag);\n    }\n  };\n\n  handleEditorChange = (e) => this._instructions = e;\n\n  valuesToJobData = (values) => {\n    return {\n      name: values.name,\n      description: values.description,\n\n      num_votes: values.num_votes,\n      max_votes: values.max_votes,\n      reward: rewardFloatToInteger(values.reward),\n\n      items_csv: values.items_csv,\n      items_gold_csv: values.items_gold_csv,\n\n      instructions: this._instructions,\n\n      design: this.state.design\n    };\n  };\n\n  jobDataToValues = (jobDataFromProps) => {\n    const data = jobDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || '',\n\n      num_votes: data.num_votes || 3,\n      max_votes: data.max_votes || 10,\n      reward: (data.reward && rewardIntegerToString(data.reward)) || 0.01,\n\n      items_csv: data.items_csv || '',\n      items_gold_csv: data.items_gold_csv || '',\n\n      instructions: data.instructions || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required'),\n\n    num_votes: Yup.number()\n      .required('Num votes must be a number')\n      .integer('Must be an integer')\n      .positive('Must be positive'),\n    max_votes: Yup.number()\n      .required('Max votes must be a number')\n      .integer('Must be an integer')\n      .positive('Must be positive'),\n    reward: Yup.number('')\n      .required('Reward must be a number')\n      .min(0.1, 'Must be greater than 0.1$')\n      .positive('Must be positive'), // TODO: Improve\n\n    items_csv: Yup.string()\n      .required('URL of CSV of items is required')\n      .url('Must be a valid URL'),\n    items_gold_csv: Yup.string()\n      .required('URL of CSV of gold items is required')\n      .url('Must be a valid URL'),\n\n    instructions: Yup.string(),\n\n    html: Yup.string(),\n    css: Yup.string(),\n    js: Yup.string()\n  });\n\n  onDesignChanged = design => {\n    const designValid = this.isDesignValid();\n    this.setState({designValid, design});\n  };\n\n  isDesignValid = () => this.state.design.find(block => !block.valid) == null;\n\n  render() {\n\n    return (\n      <div className=\"job-form-container\">\n\n        <Formik\n          initialValues={this.jobDataToValues(this.props.jobData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Job name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Job description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n\n                {/* CSV items */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Path to CSV file</Form.Label>\n                      <Form.Control name=\"items_csv\" type=\"text\" value={values.items_csv}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('items_csv')}\n                                    isValid={isValid('items_csv')}\n                                    placeholder=\"Ex: https://raw.githubusercontent.com/...\"/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.items_csv}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* CSV gold items */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Path to GOLD CSV file</Form.Label>\n                      <Form.Control name=\"items_gold_csv\" type=\"text\" value={values.items_gold_csv}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('items_gold_csv')}\n                                    isValid={isValid('items_gold_csv')}\n                                    placeholder=\"Ex: https://raw.githubusercontent.com/...\"/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.items_gold_csv}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* number of votes and reward */}\n                <Row>\n                  {/* votes per item */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Votes for item</Form.Label>\n                      <Form.Control type=\"number\" name=\"num_votes\" value={values.num_votes} onChange={handleChange}\n                                    isInvalid={isInvalid('num_votes')} isValid={isValid('num_votes')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.num_votes}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n\n                  {/* votes per worker */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Max votes per worker</Form.Label>\n                      <Form.Control type=\"number\" step=\"1\" name=\"max_votes\" value={values.max_votes}\n                                    onChange={handleChange} isInvalid={isInvalid('max_votes')}\n                                    isValid={isValid('max_votes')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.max_votes}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n\n                  {/* reward */}\n                  <Col xs=\"12\" sm=\"4\">\n                    <Form.Group>\n                      <Form.Label>Reward</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>$</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"reward\" value={values.reward}\n                                      onChange={handleChange} isInvalid={isInvalid('reward')}\n                                      isValid={isValid('reward')}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                          {errors.reward}\n                        </Form.Control.Feedback>\n                      </InputGroup>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n\n                {/* instructions */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Instructions</Form.Label>\n                      <Editor textareaName=\"instructions\" onEditorChange={this.handleEditorChange}\n                              initialValue={values.instructions}\n                              init={{menubar: false}}/>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Label>Design</Form.Label>\n                    <DesignEditor initialBlocks={this.state.design} onChange={this.onDesignChanged}/>\n                  </Col>\n\n                </Row>\n                {\n                  !this.state.designValid &&\n                  <Row>\n                    <Col>\n                      <Alert variant=\"danger\">\n                        One or more blocks are not correctly configured.\n                      </Alert>\n                    </Col>\n                  </Row>\n                }\n\n                <ButtonToolbar className=\"form-buttons\">\n                  {\n                    this.props.cancelText &&\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}\n                            className=\"cancel-job-form\">\n                      {this.props.cancelText}\n                    </Button>\n                  }\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-job-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import {Col, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Row>\n    <Col>\n      <Link to={to} className=\"btn btn-outline-primary back-button\">\n        <i className=\"fas fa-arrow-left\"/> {text}\n      </Link>\n    </Col>\n  </Row>\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Row, Container} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport JobForm from \"../JobForm/JobForm\";\nimport BackButton from \"../../common/BackButton\";\nimport Templates from \"./Templates\";\n\nconst DEFAULT_TEMPLATE_ID = 'blank';\n\nexport default class CreateJob extends Component {\n\n  constructor(props) {\n    super(props);\n    const templateId = props.match.params.template_id || DEFAULT_TEMPLATE_ID;\n    const template = Templates[templateId] || Templates[DEFAULT_TEMPLATE_ID];\n\n    this.state = {\n      creationError: false,\n      jobData: this.buildJobStartingFromTemplate(template)\n    }\n  }\n\n  buildJobStartingFromTemplate = template => {\n    return {\n      name: `My ${template.name}`,\n      design: template.design\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <BackButton to=\"/jobs\" text=\"Return to jobs list\"/>\n\n        <Row>\n          <Col><h1>Create new job</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <JobCreationFailed/>\n        }\n\n        <JobForm jobData={this.state.jobData}\n                 onSubmit={this.handleJobSubmission}\n                 onCancel={this.onCancel}\n                 submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleJobSubmission = async (jobData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await JobsService.createJob({data: jobData});\n      this.redirectToJobsList();\n    } catch (e) {\n      this.onJobCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onJobCreationFailed = () => this.setState({creationError: true});\n\n  redirectToJobsList = () => this.props.history.push('/jobs');\n\n}\n\nexport const JobCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the job\n    </Alert>\n  </Col>\n);\n","import React, {Component} from \"react\";\nimport {Button, Col, Row, Modal, Container, ProgressBar} from \"react-bootstrap\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport \"./PublishButtons.css\";\n\nexport default class PublishButtons extends Component {\n\n  state = {};\n\n  openConfirmDialogForPlatform = platform => () => this.setState({publishOnPlatform: platform});\n\n  publish = async () => {\n    const platform = this.state.publishOnPlatform;\n    this.onPublishing();\n\n    try {\n      await JobsService.publish(this.props.job, platform);\n      this.onJobPublished();\n    } catch (e) {\n      this.onPublishError();\n    }\n  };\n\n  onPublishing = () => this.setState({\n    publishOnPlatform: null, // closes the modal\n    isPublishing: true\n  });\n\n  onJobPublished = () => this.setState({\n    isPublishing: false,\n    published: true\n  });\n\n  onPublishError = () => this.setState({\n    isPublishing: false,\n    publishError: true,\n    published: false\n  });\n\n  render() {\n    return (\n      <Container className=\"publish-buttons\">\n        <Row>\n          <Col><h4>Publish</h4></Col>\n        </Row>\n\n        { /* Confirm to publish on platform modal */}\n        <PublishJobModal job={this.props.job} show={!!this.state.publishOnPlatform}\n                         onCancel={() => this.setState({publishOnPlatform: null})}\n                         onConfirm={this.publish}/>\n\n        { /* Publishing job modal */}\n        <PublishingModal job={this.props.job} show={this.state.isPublishing}/>\n\n        { /* Job published modal */}\n        <PublishedModal job={this.props.job} show={this.state.published}\n                        onClose={() => this.setState({published: false})}/>\n\n        { /* Error while published job modal */}\n        <PublishFailedModal job={this.props.job} show={this.state.publishError}\n                            onClose={() => this.setState({publishError: false})}/>\n\n        { /* Buttons to select the platform */}\n        <Row>\n          <Col md=\"4\">\n            <Button className=\"MTurk-publish\" onClick={this.openConfirmDialogForPlatform('MTurk')} block>Amazon\n              Mechanical Turk</Button>\n          </Col>\n          <Col md=\"4\">\n            <Button className=\"F8-publish\" onClick={this.openConfirmDialogForPlatform('F8')} block>Figure Eight</Button>\n          </Col>\n          <Col md=\"4\">\n            <Button className=\"Toloka-publish\" onClick={this.openConfirmDialogForPlatform('Toloka')}\n                    block>Yandex.Toloka</Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport const PublishJobModal = ({show, job, onCancel, onConfirm}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Publish job <span className=\"job-id\">#{job.id}</span></Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Are you sure you want to publish \"<strong>{job.data.name}</strong>\"?\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"secondary\" className=\"cancel\" onClick={onCancel}>Cancel</Button>\n      <Button variant=\"primary\" className=\"confirm\" onClick={onConfirm}>Publish</Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport const PublishingModal = ({show, job}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Publishing Job #{job.id}</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Please wait while Job #{job.id} is being published.\n      <ProgressBar animated now={100}/>\n    </Modal.Body>\n  </Modal>\n);\n\nexport const PublishedModal = ({show, job, onClose}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Job #{job.id} published</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Job \"<strong>{job.data.name}</strong>\" was published!\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={onClose}>Close</Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport const PublishFailedModal = ({show, job, onClose}) => (\n  <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Something went wrong</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      Something went wrong while publishing Job #{job.id}.\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={onClose}>Close</Button>\n    </Modal.Footer>\n  </Modal>\n);\n","\nexport const redirectToJobsList = component => component.props.history.push(`/jobs`);\n","import React, {Component} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport JobsService from \"../../../Services/JobsService\";\nimport {makeCancellable} from \"../../../Services/utils\";\nimport {rewardIntegerToString} from \"../utils/job\";\nimport PublishButtons from \"./PublishButtons\";\nimport BackButton from \"../../common/BackButton\";\nimport {redirectToJobsList} from \"../utils/route\";\n\n\nexport default class ViewJob extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchJob();\n\n  componentWillUnmount = () => this.pendingJobRequest.cancel();\n\n  async fetchJob() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingJobRequest = makeCancellable(JobsService.getJob(id));\n      const job = await this.pendingJobRequest.result;\n\n      this.setState({job});\n    } catch (e) {\n      redirectToJobsList(this);\n    }\n  }\n\n  render() {\n    if (!this.state.job) {\n      return <FetchingJob/>;\n    } else {\n      return (\n        <Container>\n          <Row>\n            <JobData job={this.state.job}/>\n          </Row>\n          <hr/>\n          <Row>\n            <PublishButtons job={this.state.job}/>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nconst FetchingJob = () => (\n  <Container>\n    <p>Fetching ...</p>\n  </Container>\n);\n\nfunction JobData({job}) {\n  return (\n    <Container>\n      <BackButton to=\"/jobs\" text=\"Return to jobs list\"/>\n\n      <Row>\n        <Col><h2>Job #{job.id}</h2></Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`/jobs/${job.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col><h2>{job.data.name}</h2></Col>\n      </Row>\n\n      <Row>\n        <Col md=\"3\" lg=\"2\">\n          <strong>Description:</strong>\n        </Col>\n        <Col>{job.data.description}</Col>\n      </Row>\n\n      <Row>\n        <Col md=\"3\" lg=\"2\">\n          <strong>Reward:</strong>\n        </Col>\n        <Col>{rewardIntegerToString(job.data.reward)} $</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Container, Row, Col, Alert} from \"react-bootstrap\";\n\nimport JobsService, {Errors} from \"../../../Services/JobsService\";\nimport JobForm from \"../JobForm/JobForm\";\nimport BackButton from \"../../common/BackButton\";\nimport {redirectToJobsList} from \"../utils/route\";\n\nexport default class EditJob extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchJob();\n\n  fetchJob = async () => {\n    try {\n      const job = await JobsService.getJob(this.state.id);\n      this.setState({job});\n    } catch (e) {\n      redirectToJobsList(this);\n    }\n  };\n\n  handleJobSubmission = async (jobData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await JobsService.updateJob({\n        id: this.state.job.id,\n        data: jobData\n      });\n      this.returnToJobPage();\n    } catch (e) {\n      this.onUpdateJobFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToJobPage();\n\n  returnToJobPage = () => this.props.history.push(`/jobs/${this.state.job.id}`);\n\n  onUpdateJobFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n        <BackButton to={`/jobs/${this.state.id}`} text=\"Cancel\"/>\n\n        <Row>\n          <Col>\n            <h1>\n              Edit job {this.state.job && `#${this.state.id}`}\n            </h1>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateJobError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.job &&\n          <FetchingJob/>\n        }\n        {\n          this.state.job &&\n          <JobForm jobData={this.state.job.data}\n                   onSubmit={this.handleJobSubmission}\n                   onCancel={this.onCancel}\n                   submitText=\"Save\"/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingJob() {\n  return (<p>Fetching job...</p>);\n}\n\n\nexport const UpdateJobError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      {\n        error === Errors.INVALID_JOB_DATA ?\n          \"Validation of the Job failer. Please check all the data\" :\n          \"There's been an error while creating the job\"\n      }\n\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {JobsList} from \"./JobsList/JobsList\";\nimport CreateJob from \"./CreateJob/CreateJob\";\nimport ViewJob from \"./ViewJob/ViewJob\";\nimport EditJob from \"./EditJob/EditJob\";\n\nexport const Jobs = () => (\n  <Switch>\n    <Route path=\"/jobs\" exact component={JobsList}/>\n    <Route path=\"/jobs/new/:template_id\" component={CreateJob}/>\n    <Route path=\"/jobs/:id/edit\" exact component={EditJob}/>\n    <Route path=\"/jobs/:id\" component={ViewJob}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport {Jobs} from \"./Jobs/Jobs\";\n\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\">\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <Switch>\n              <Route path=\"/jobs\" component={Jobs}/>\n              <Route render={() => (<Redirect to=\"/jobs\"/>)}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}