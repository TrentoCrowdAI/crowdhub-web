{"version":3,"sources":["images/menu.svg","Components/Sidebar/Sidebar.js","Components/AppBar.js","Services/rest/utils.js","config.js","Services/rest/ProjectsService.js","Components/common/Breadcrumbs.js","Components/common/DeleteButtonAndModal.js","Components/utils/events.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/common/BackButton.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Projects/utils/route.js","Services/rest/WorkflowsService.js","Components/Workflows/WorkflowForm/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","models/Runs.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/BlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","models/Run.js","models/BlockRun.js","Services/rest/RunsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/common/LoadingButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithBottomBox.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","models/RunnableWorkflow.js","Services/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/WorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","id","className","this","props","sidebarOpen","ListGroup_default","as","Item","NavLink","to","Component","AppBar","Navbar","expand","onClick","onToggleSidebar","src","menu","alt","sendAndParseJSON","_callee","url","params","res","error","regenerator_default","wrap","_context","prev","next","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","headers","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","API_URL","process","PROJECTS_URL","concat","Errors","INVALID_WORKFLOW_DATA","JSONtoProject","parseInt","created_at","Date","updated_at","deleted_ad","projectToJSON","job","ProjectsService","getProjects","_getProjects","Object","asyncToGenerator","mark","jsonList","map","getProject","_getProject","jsonJob","_x","createProject","_createProject","project","_x2","updateProject","_updateProject","t0","response","INVALID_PROJECT_DATA","deleteProject","_deleteProject","LinkBreadcrumb","_ref","children","Link","SimpleBreadcrumb","_ref2","DeleteButtonAndModal","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","DeleteButtonAndModal_DeleteModal","assign","onCancel","callback","e","stopPropagation","DeleteModal","_Component2","_getPrototypeOf3","_this2","_len2","_key2","deleting","deleteError","onConfirmDeletion","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","variant","Footer","Button","disabled","ProjectsTable","projects","onProjectDeleted","Col","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","editProjectLink","name","description","ProjectsTable_DeleteProjectButton","DeleteProjectButton","_ref3","DeleteButtonAndModal_DeleteButtonAndModal","Title","ProjectsList","componentDidMount","fetchProjects","componentWillUnmount","pendingProjectsRequest","fetchError","Container","Breadcrumb","Breadcrumbs_SimpleBreadcrumb","Row","ProjectsList_FetchingProjects","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","FetchingProjects","NoProjects","FetchProjectsError","common_BackButton","text","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","Form","noValidate","Group","Label","Control","type","onChange","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","redirectToProjectsList","onProjectCreationFailed","history","push","Breadcrumbs_LinkBreadcrumb","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","component","WORKFLOWS_URL","JSONtoWorkflow","id_project","objectSpread","projectId","workflowToJSON","graph","WorkflowsService","getWorkflowsOfProject","_getWorkflowsOfProject","getWorkflow","_getWorkflow","workflow","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","info","deleteWorkflow","_deleteWorkflow","startWorkflow","_startWorkflow","_callee6","startedRunId","_context6","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","event","target","getModel","onModelUpdated","model","Model","parameters_Number","isRequired","isNaN","NumberWidget","parameters_Boolean","BooleanWidget","checked","Check","label","TextFromDropdownModel","getChoices","find","choice","choices","TextFromDropdown","onChangeValue","HtmlModel","Html","handleEditorChange","es2015","onEditorChange","initialValue","init","menubar","ChoiceBuilderModel","index","splice","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","striped","bordered","AddChoice","isNewChoiceValid","_this3","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onImport","onFilePicked","InputGroup","Prepend","style","display","accept","multiple","FormControl","readOnly","Append","height","boxSizing","CodeEditorModalAndButton","hideModal","onSave","code","onUpdateCode","CodeEditorModal_CodeEditorModal","onClose","CodeEditorModal","onCodeEdited","size","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","react_ace_lib_default","width","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","PrimitiveParameters","parameters","forEach","parameter","mapParametersArrayToMap","Number","Boolean","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","title","Collapse","in","ParametersEngine","parametrizedBlock","onParameterModelUpdate","getId","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_UnsupportedParameter","UnsupportedParameter","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","block","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","findIndex","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","prevProps","prevState","snapshot","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","_this$props","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","b","temp","DoDesignModel","_AbstractParameterMod","get","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","setTimeout","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","xs","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","keys","Runs","runs","getLatestRun","containsRun","run","getBlockRuns","blockId","getBlockRun","filter","blockRun","getFinishedRuns","isFinished","BlockNodeModel","_DefaultNodeModel","blockRuns","_runs","getLabel","setId","setLabel","blockTypeDefinition","setRuns","latestBlockRun","wasStarted","isRunning","isFailed","getRunnableBlocksCount","getAllParentBlocks","assertThisInitialized","getRunningBlocksCount","toConsumableArray","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","DefaultNodeModel","parents","blockParents","parent","BlackLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","BlockNodeWidget","_DefaultNodeWidget","node","main","Spinner","animation","DefaultNodeWidget","BlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","installFactories","installDefaultFactories","registerLinkFactory","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","x","y","addNode","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","Run","createdAt","getRunId","getBlockId","getCreatedAt","getRunningBlockRuns","getFailedBlockRuns","getFinishedBlockRuns","RunStates","freeze","FAILED","RUNNING","FINISHED","NOT_STARTED","BlockRun","runId","cacheId","getState","getCacheId","RUNS_URL","JSONtoRun","id_cache","runsComparator","RunsService","getRunsOfWorkflow","_getRunsOfWorkflow","workflowId","sort","getDownloadLink","ResultDownloader","runnable","downloadNameFactory","downloadLinkFactory","ResultDownloader_NoResultsMessage","latestFinishedRun","Dropdown","ButtonGroup","ResultDownloader_LatestDownloadButton","downloadName","isLatest","Toggle","split","Menu","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","href","download","DropdownDownload","LoadingButton","isSaving","role","aria-hidden","RunsControls_RunsControls","onStart","isStarting","startText","RunsControls_RunsProgressBar","common_LoadingButton","RunsProgressBar","finishedPercentage","Math","ceil","runningPercentage","ProgressBar","animated","now","max","WorkflowRunsControls","startError","waitForRunStateReceived","runnableWorkflow","addRunsListener","listener","getRuns","removeRunsListener","common_SidebarWithBottomBox","center","bottom","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getBlockModel","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","BlockRunsControls","BlockSidebar_BlockSidebar","onModelUpdate","onKeyUp","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","WorkflowGraphModel","getBlocksArray","blockWithSameLabel","getBlockByLabelOrNull","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","onWorkflowEdited","serializeDiagram","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditorContainer_LoadingWorkflowEditor","WorkflowEditor_WorkflowEditor_WorkflowEditor","LoadingWorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","indexOf","nodes","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","slicedToArray","startWatchingRunsStatus","setInterval","stopWatchRunsStatus","clearInterval","WorkflowDashboard","saveError","fetchRunnableWorkflow","getWorkflowIdFromUrl","match","runnableWorkflowRequest","_this$state","WorkflowEditorContainer_WorkflowEditorContainer","Workflows","Switch","Route","exact","WorkflowsTable","workflows","onWorkflowDeleted","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflows","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflows","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","onInputChange","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","aria-label","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ItemsTable","columnNames","getColumnNames","ItemsTable_DeleteItemButton","onItemDeleted","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","ItemsImporter_ItemsImporter","ItemsView_FetchingItems","ItemsTable_ItemsTable","FetchingItems","ProjectView","fetchProject","pendingProjectRequest","ProjectView_FetchingProject","ProjectData","Tabs","defaultActiveKey","Tab","eventKey","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","FetchingProject","EditProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","EditProject_FetchingProject","UpdateProjectError","_ref4","Projects","AppRouter","render","Redirect","Layout","previousState","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","tinymce","selector","plugins","App","Layout_Layout","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f10e78e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ListGroup as=\"ul\">\n          <ListGroup.Item as=\"li\" className=\"sidebar-link\">\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </ListGroup.Item>\n        </ListGroup>\n      </nav>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport menu from \"../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nexport default class AppBar extends Component {\n  render () {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n          <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n        </button>\n      </Navbar>\n    )\n  }\n}\n","async function sendAndParseJSON(url, params) {\n  const res = await fetch(url, params);\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, params) {\n  return await sendAndParseJSON(url, params);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <Button variant=\"danger\" className=\"confirm\" onClick={this.onConfirmDeletion} disabled={this.state.deleting}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n\n  return (\n    <tr>\n\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td>\n\n        <Link to={editProjectLink} className=\"icon-button\">\n          <i className=\"fas fa-edit\"/>\n        </Link>\n\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n        <Row>\n          {\n            !this.state.projects && !this.state.fetchError &&\n            <FetchingProjects/>\n          }\n\n          {\n            !this.state.projects && this.state.fetchError &&\n            <FetchProjectsError/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length === 0 &&\n            <NoProjects/>\n          }\n\n          {\n            this.state.projects && this.state.projects.length > 0 &&\n            <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n          }\n\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport const FetchingProjects = () => (\n  <Col>\n    <p>Fetching projects ...</p>\n  </Col>\n);\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async startWorkflow(workflow) {\n    const startedRunId = await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n    return startedRunId;\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">{this.props.submitText}</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"../../WorkflowForm/WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            submitText=\"Create\"\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>\n          {definition.displayName}\n        </Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <Editor onEditorChange={this.handleEditorChange}\n                initialValue={model.getValue()}\n                init={{menubar: false}}\n                disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code\n]);\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <div key={key}>\n                {\n                  parameterModel.shouldDisplay() &&\n                  <div>\n                    <hr/>\n                    <Component model={parameterModel}\n                               onModelUpdated={onParameterModelUpdate}\n                               disabled={disabled}/>\n                  </div>\n                }\n              </div>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Label>{definition.displayName}</Form.Label>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n}\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../models/Runs\";\n\n\nexport class BlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns = (runs) => {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + BlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...BlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...BlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => BlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './BlockNode.css';\n\nexport class BlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n    return (\n      <Card className=\"block\">\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {BlockNodeModel} from \"../models/BlockNodeModel\";\nimport React from \"react\";\nimport {BlockNodeWidget} from \"../widgets/BlockNodeWidget\";\n\nexport class BlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new BlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(BlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport {BlockNodeFactory} from \"./factories/BlockNodeFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.installFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  installFactories() {\n    this.installDefaultFactories();\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => this.registerNodeFactory(\n      new BlockNodeFactory(blockTypeDefinition.name)\n    ));\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {BlockNodeModel} from \"./models/BlockNodeModel\";\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => {\n    const node = new BlockNodeModel();\n\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.forceUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Workflow blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                            onBlur={this.onBlur} disabled={this.props.disabled}/>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        {/* Description */}\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                            onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n            </Form.Group>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n\n  constructor(id, blockRuns, createdAt) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../../models/Run\";\nimport BlockRun from \"../../models/BlockRun\";\nimport Runs from \"../../models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at));\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRunsOfWorkflow(workflowId) {\n    const jsonList = await getJSON(`${RUNS_URL}?workflowId=${workflowId}`);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run) {\n    return `${RUNS_URL}/${run.id}/result?format=csv`;\n  }\n}\n","import React from \"react\";\nimport {ButtonGroup, Dropdown} from \"react-bootstrap\";\n\n\nexport default ({runnable, downloadNameFactory, downloadLinkFactory}) => {\n  if (runnable.getFinishedRuns().length <= 0) {\n    return (\n      <NoResultsMessage/>\n    );\n  }\n  const latestFinishedRun = runnable.getFinishedRuns()[0];\n  return (\n    <div>\n      Download results as a CSV file\n      <Dropdown as={ButtonGroup} className=\"btn-block\">\n        <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun)}\n                              downloadName={downloadNameFactory(latestFinishedRun)}\n                              isLatest={!runnable.isRunning()}\n                              id={latestFinishedRun.getRunId()}/>\n\n        <Dropdown.Toggle split variant=\"success\"/>\n\n        <Dropdown.Menu>\n          {\n            runnable.getFinishedRuns().map((run, index) => (\n              <DropdownDownload key={run.getRunId()}\n                                link={downloadLinkFactory(run)}\n                                downloadName={downloadNameFactory(run)}\n                                isLatest={!runnable.isRunning() && index === 0}\n                                id={run.getRunId()}/>\n            ))\n          }\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, downloadName, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} download={downloadName}>\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, downloadName, isLatest, id}) => (\n  <Dropdown.Item href={link} download={downloadName}>\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isSaving, disabled, onClick, children, block}) => (\n  <Button disabled={disabled || isSaving} onClick={onClick} className={block ? 'btn-block' : ''}>\n    {\n      isSaving &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default ({runnable, downloadNameFactory, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <div>\n    <Card>\n      <Card.Header>Execution</Card.Header>\n\n      <Card.Body>\n        {\n          runnable.isRunning() &&\n          <div>\n            Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n            Progress:<br/>\n            <RunsProgressBar runnable={runnable}/>\n          </div>\n        }\n\n        <LoadingButton block onClick={onStart}\n                       disabled={!runnable.canStart()}\n                       isSaving={isStarting}>{startText}</LoadingButton>\n\n      </Card.Body>\n    </Card>\n\n    <Card className=\"mt-2\">\n      <Card.Header>Results</Card.Header>\n      <Card.Body>\n        <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                          downloadNameFactory={downloadNameFactory}\n                          runnable={runnable}/>\n      </Card.Body>\n    </Card>\n  </div>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.startWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={run => RunsService.getDownloadLink(run)}\n                      downloadNameFactory={run => `${workflow.name} #${run.id}.csv`}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithBottomBox.css\";\n\nexport default ({title, center, bottom}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n\n    <div className=\"bottom-container\">\n      <hr/>\n      {bottom}\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithBottomBox from \"../common/SidebarWithBottomBox\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <SidebarWithBottomBox\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={runnableWorkflow.isRunning()}/>\n        </div>}\n      bottom={<WorkflowRunsControls runnableWorkflow={runnableWorkflow}/>}/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <Form.Group>\n        <Form.Label>Label</Form.Label>\n        <Form.Text className=\"text-muted\">\n          Label of the block\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.label}\n                      onChange={this.onChange}\n                      isInvalid={!this.isNewLabelValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          The label must be unique to all the blocks and must be at least one character long.\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId) {\n    return `${CACHE_URL}/${cacheId}?format=csv`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={run => CacheService.getDownloadLink(run.getCacheId())}\n                         downloadNameFactory={run => `${blockModel.getLabel()} #${run.getRunId()}.csv`}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithBottomBox from \"../common/SidebarWithBottomBox\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow}) => (\n\n  <SidebarWithBottomBox\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={!runnableWorkflow.canBeEdited()}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={!runnableWorkflow.canBeEdited()}/>\n      </div>\n    }\n    bottom={<BlockRunsControls blockModel={block} runnableWorkflow={runnableWorkflow}/>}\n  />\n);\n\n","import {DiagramModel} from \"storm-react-diagrams\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed}) => {\n  const isValid = graphModel.isValid();\n  const isRunning = runnableWorkflow.isRunning();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span>\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          isRunning &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || isRunning}\n                     isSaving={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    // TODO: The logic to block edit is spread everywhere, can we group it somewhere?\n    this.graphModel.setLocked(!runnableWorkflow.canBeEdited());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onWorkflowEdited();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            runnableWorkflow.canBeEdited() &&\n            <Col xs={2} className=\"light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col xs={7} className=\"graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n\n            <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                             graphModel={this.graphModel}\n                             onSavePressed={this.onSavePressed}\n                             isSaving={this.props.isSaving}/>\n          </Col>\n\n          {/* Right sidebar */}\n          <Col xs={3} className=\"light-background right-sidebar\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={() => this.forceUpdate()}\n                                          runnableWorkflow={runnableWorkflow}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n","import React, {Component} from 'react';\nimport {Spinner} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    // TODO: Handle error\n    if (this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow) {\n      return <LoadingWorkflowEditor/>\n    } else {\n      return <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n    }\n  }\n}\n\nconst LoadingWorkflowEditor = () => (\n  <div className=\"loading-spinner-container\">\n    <Spinner animation=\"border\" variant=\"primary\"/>\n  </div>\n);\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"./rest/WorkflowsService\";\nimport RunnableWorkflow from \"../models/RunnableWorkflow\";\nimport RunsService from \"./rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class WorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null,\n    isSaving: false,\n    saveError: false,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WorkflowDashboard from \"./WorkflowDashboard/WorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\n\n\nexport default () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={WorkflowDashboard}/>\n  </Switch>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowDeleted}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            {\n              !this.state.workflows &&\n              <FetchingWorkflows/>\n            }\n\n            {\n              this.state.fetchError &&\n              <FetchingWorkflowsError/>\n            }\n\n            {\n              this.state.workflows &&\n              <WorkflowsTable workflows={this.state.workflows}\n                              onWorkflowDeleted={this.fetchWorkflows}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport const FetchingWorkflows = () => <p>Fetching workflows...</p>;\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container className=\"items-table-container\">\n          {\n            !this.state.items &&\n            <FetchingItems/>\n          }\n\n          {\n            this.state.items &&\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst FetchingItems = () => (\n  <Container><p>Loading items ...</p></Container>\n);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n\n        {\n          this.state.project &&\n          <Row>\n            <ProjectData project={this.state.project}/>\n\n            <div style={{width: '100%'}}>\n              <hr/>\n\n              <Tabs defaultActiveKey=\"workflow\">\n                <Tab eventKey=\"workflow\" title=\"Workflows\">\n                  <EmbeddableWorkflowsList project={this.state.project}/>\n                </Tab>\n\n                <Tab eventKey=\"items\" title=\"Items\">\n                  <ItemsView project={this.state.project}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </Row>\n        }\n\n      </Container>\n    );\n  }\n}\n\nconst FetchingProject = () => (<p>Fetching ...</p>);\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport Workflows, {WORKFLOWS_PATH} from \"./Workflows/Workflows\";\n\nexport default () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} component={Projects}/>\n    <Route path={`${WORKFLOWS_PATH}`} component={Workflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={`${PROJECTS_PATH}`}/>)}/>\n  </Switch>\n);\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./AppBar\";\nimport AppRouter from \"./AppRouter\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {/* Left collapsable sidebar */}\n          <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            <AppBar onToggleSidebar={this.onToggleSidebar}/>\n\n            <AppRouter />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}