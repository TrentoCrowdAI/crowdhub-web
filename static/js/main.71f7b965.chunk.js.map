{"version":3,"sources":["Components/common/BackButton.js","Services/rest/utils.js","config.js","Components/common/LoadingContainer.js","images/menu.svg","Services/rest/WorkflowsService.js","Services/AuthService.js","Components/common/Breadcrumbs.js","Components/common/LoadingButton.js","Components/common/DeleteButtonAndModal.js","Services/rest/UsersService.js","Services/rest/ProjectCollaborationsService.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/AddNewCollaboration.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/CollaborationsList.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/ShareProjectButtonAndModal.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Workflows/WorkflowsList/CreateWorkflow/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/ShareWorkflowButtonAndModal.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Services/rest/ProjectsService.js","Components/utils/events.js","Components/Sidebar/Sidebar.js","Services/rest/AccountBalanceService.js","Components/Appbar/AccountInformation.js","Components/Appbar/AppBar.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/HtmlModalEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoBlockCost.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","Services/RunnableWorkflowService/adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockPortModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockPortFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","Services/DownloadsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/EditBlockingContextModalAndButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingCheckbox.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowInstructions.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","Services/RunnableWorkflowService/models/RunnableWorkflow.js","Services/RunnableWorkflowService/RunnableWorkflowService.js","Services/rest/PublicWorkflowsService.js","Components/Workflows/WorkflowDashboard/ReadOnlyWorkflowDashboard.js","Components/Workflows/WorkflowDashboard/EditableWorkflowDashboard.js","Components/Workflows/Workflows.js","Services/RunnableWorkflowService/models/Run.js","Services/rest/RunsService.js","Services/RunnableWorkflowService/models/BlockRun.js","Services/RunnableWorkflowService/models/Runs.js","Components/Projects/utils/route.js","Components/Login/Login.js"],"names":["react_router_dom__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","__webpack_exports__","_ref","to","text","a","createElement","className","sendAndParseJSON","_callee","url","options","res","error","_Users_jorge_Development_work_trento_crowdhub_web_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","getOptionsWithAuthorizationHeadersIfSignedIn","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","AuthService","isInitialized","isSignedIn","getOptionsWithAuthorizationHeaders","headers","Authorization","concat","getBearerToken","getJSON","_x3","_x4","_getJSON","apply","this","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","d","WEBAPP_URL","API_URL","process","react_bootstrap__WEBPACK_IMPORTED_MODULE_0__","LoadingContainer","loading","children","animation","variant","module","exports","p","WORKFLOWS_URL","Errors","JSONtoWorkflow","id","id_project","Object","_Users_jorge_Development_work_trento_crowdhub_web_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","projectId","parseInt","workflowToJSON","_ref2","name","description","graph","shared","getWorkflowsOfProject","_getWorkflowsOfProject","_Users_jorge_Development_work_trento_crowdhub_web_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","project","jsonList","map","_x","getWorkflow","_getWorkflow","workflow","_x2","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","log","info","t0","response","deleteWorkflow","_deleteWorkflow","saveAndStartWorkflow","_saveAndStartWorkflow","_callee6","_context6","startWorkflow","_startWorkflow","_callee7","_context7","estimateDoBlockCost","_estimateDoBlockCost","_callee8","workflowId","blockId","_context8","_authChangeListeners","auth2","init","_init","_waitForGapiToLoad","_loadAuth2Api","_notifyListeners","interval","setInterval","window","gapi","clearInterval","load","addOnAuthChangeListener","listener","push","renderSignInButton","containerId","onSignedIn","_this","assertInitialized","signin2","render","onSuccess","forEach","get","signOut","_this2","currentUser","getAuthResponse","id_token","getUserInfo","getBasicProfile","LinkBreadcrumb","SimpleBreadcrumb","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","LoadingButton","isLoading","disabled","onClick","block","as","size","role","aria-hidden","DeleteButtonAndModal","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","react_default","DeleteButtonAndModal_DeleteModal","assign","onCancel","props","ignoreEventAnd","Component","DeleteModal","_Component2","_getPrototypeOf3","_len2","_key2","deleting","deleteError","onConfirmDeletion","asyncToGenerator","regenerator_default","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","Footer","Button","USERS_URL","JSONtoUser","email","imageUrl","picture","USER_SUGGETION_MIN_EMAIL_LENGTH","UsersService","findUsersByEmail","_findUsersByEmail","getById","_getById","PROJECT_COLLABORATIONS_URL","JSONToProjectCollaboration","userId","id_user","ProjectCollaborationsService","getCollaborationsOfProject","_getCollaborationsOfProject","createCollaboration","_createCollaboration","jsonToSend","receivedJSON","deleteCollaboration","_deleteCollaboration","collaborationId","AddNewCollaboration","fetchSuggestions","input","fetchSuggestionsFromService","users","filterUserAlreadyCollaborating","collaboratorIds","getUserIdsOfCollaborators","filter","user","ownerId","find","collaboratorId","getCollaborations","collaboration","collaborations","Form","Group","Label","AddNewCollaboration_AutocompleteField","renderSuggestion","AddNewCollaboration_SuggestedUser","onCollaborationAdded","onSuggestionSelected","onAddUser","SuggestedUser","isAdding","added","_this3$props","_this3","_this$state","_this$props","ListGroupItem","Row","Col","xs","alt","src","AutocompleteField","DEFAULT_TIMEOUT","timeout","suggestions","isFetching","onInputChange","_this4","isTimeoutRunning","cancelTimeout","startTimeout","clearTimeout","setTimeout","onTimeoutElapsed","suggestion","_this5","_this$state2","fetchError","Control","onChange","e","target","ListGroup","CollaborationsList","onCollaborationDeleted","CollaborationsList_Collaboration","Collaboration","isRemoving","componentDidMount","fetchUser","getUserId","onRemoveUser","getCollaborationId","_ref4","ShareProjectButtonAndModal","ShareProjectButtonAndModal_ShareProjectModal","onClose","ShareProjectModal","fetchCollaborations","getProject","toConsumableArray","index","findIndex","splice","AddNewCollaboration_AddNewCollaboration","ProjectsTable","projects","onProjectDeleted","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","Link","ShareProjectButtonAndModal_ShareProjectButtonAndModal_ShareProjectButtonAndModal","ProjectsTable_EditButton","ProjectsTable_DeleteProjectButton","EditButton","_ref3","editProjectLink","DeleteProjectButton","DeleteButtonAndModal_DeleteButtonAndModal","ProjectsService","deleteProject","Title","ProjectsList","fetchProjects","componentWillUnmount","pendingProjectsRequest","getProjects","Container","Breadcrumb","Breadcrumbs","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","NoProjects","FetchProjectsError","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","type","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","BackButton","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","createProject","redirectToProjectsList","onProjectCreationFailed","history","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","WorkflowsService","objectSpread","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","ShareWorkflowButtonAndModal","ShareWorkflowButtonAndModal_ShareWorkflowModal","ShareWorkflowModal","isSaving","saveError","fetchWorkflow","getWorkflowId","shareWorkflow","unshareWorkflow","onSave","onWorkflowSharedOrUnshared","prevProps","prevState","snapshot","ShareWorkflowButtonAndModal_SharingPreferenceControl","SharingPreferenceControl","publicLink","getPublicLink","Check","checked","label","href","rel","PUBLIC_WORKFLOWS_PATH","WorkflowsTable","workflows","onWorkflowDeleted","onWorkflowUpdated","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WORKFLOWS_PATH","ShareWorkflowButtonAndModal_ShareWorkflowButtonAndModal","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","created_at","Date","updated_at","deleted_ad","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","csv_url","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","event","onImport","items","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","InputGroup","FormControl","aria-label","Append","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","striped","bordered","ItemsTable_DeleteItemButton","onItemDeleted","keys","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsTable_ItemsTable","ProjectView","fetchProject","pendingProjectRequest","match","params","ProjectData","style","width","Tabs","defaultActiveKey","Tab","eventKey","title","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","EditProject","assertThisInitialized","updateProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","FetchingProject","UpdateProjectError","Projects_Projects","Projects","Switch","Route","path","exact","component","PROJECTS_URL","INVALID_WORKFLOW_DATA","JSONtoProject","projectToJSON","job","_getProjects","_getProject","jsonJob","_createProject","_updateProject","INVALID_PROJECT_DATA","_deleteProject","callback","stopPropagation","Sidebar","runs","fetchRuns","RunsService","getRuns","sidebarOpen","NavLink","Sidebar_LatestFinishedRunsList","Sidebar_RunningRunsList","LatestFinishedRunsList","Sidebar_JobsList","getFinishedRuns","slice","RunningRunsList","getRunningRuns","JobsList","run","ACCOUNT_BALANCE_URL","JSONtoBalances","AccountBalanceService","_cachedBalance","getBalances","_getBalances","balances","_isBalancesCached","_getCachedBalance","_cacheBalances","AccountInformation","OverlayTrigger","placement","trigger","overlay","Popover","AccountInformation_AccountInformationPopoverContent","AccountInformation_AccountInformationPreview","AccountInformationPreview","userInfo","getName","getImageUrl","AccountInformationPopoverContent","_Component3","AccountInformation_PlatformBalances","AccountInformation_LogoutButton","PlatformBalances","_Component4","fetchBalances","pendingBalancesRequest","renderBalances","_this$state$balances","tolokaSandbox","tolokaNormal","f8","prepareNumber","balance","toFixed","LogoutButton","loggingOut","loggedOut","onLogout","renderRedirect","Redirect","LOGIN_PATH","AppBar","Navbar","expand","onToggleSidebar","menu","AccountInformation_AccountInformation","AuthenticatedAppRouter","authServiceInitialized","initAuthService","renderRouter","renderInitializingAuthService","height","AppRouter_AppRouter","AppRouter","AppRouter_PrivateRoute","Workflows","AppRouter_NotLoggedInRoute","Login","PublicWorkflows","PrivateRoute","NotLoggedInRoute","Layout","previousState","forceUpdate","showSidebarAndAppBar","HashRouter","Sidebar_Sidebar_Sidebar","display","flexDirection","AppBar_AppBar","AppRouter_AuthenticatedAppRouter","tinymce","selector","plugins","App","Layout_Layout","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","bem","strokeWidth","stroke","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","getModel","onModelUpdated","Model","parameters_Number","isRequired","isNaN","NumberWidget","BooleanWidget","TextFromDropdownModel","getChoices","choice","choices","TextFromDropdown","onChangeValue","HtmlModalEditor","hideModal","es2015","HtmlModel","Html","handleEditorChange","EditorComponent","getEditor","onEditorChange","initialValue","menubar","editorInModal","Editor","ChoiceBuilderModel","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","AddChoice","isNewChoiceValid","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","t1","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onFilePicked","Prepend","accept","multiple","readOnly","boxSizing","CodeEditorModalAndButton","code","onUpdateCode","CodeEditorModal_CodeEditorModal","CodeEditorModal","onCodeEdited","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","b","Math","floor","random","toString","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","isDisabled","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","Item","BlockingContext_BlockingContext","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","BlockingContext","DoBlockCostWidget","estimateCost","estimatedCost","estimationError","estimating","getBlockId","onCostEstimated","getEstimatedCost","getBlockModel","parent","setEstimatedCost","renderEstimatedCost","renderCostNeverEstimated","renderLatestEstimatedCost","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","getId","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","ParameterContainerLineSeparator","UnsupportedParameter","_ref5","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","DefaultBlockNodeModel","_DefaultNodeModel","blockRuns","_runs","Runs","getLabel","setId","setLabel","blockTypeDefinition","getBlockRuns","getLatestRun","latestBlockRun","wasStarted","isRunning","isFailed","isFinished","getRunnableBlocksCount","getAllParentBlocks","getRunningBlocksCount","getFinishedBlocksCount","canStart","canBeEdited","blockRun","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","getPorts","getBlockRun","DefaultNodeModel","parents","blockParents","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","Spinner","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","FAILED","RunStates","RUNNING","FINISHED","NOT_STARTED","DoBlockRunAdapter","getRunId","publishRun","getCacheId","getState","waitRun","_getBlockRunOrNotStarted","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","BlockPortModel","linkWouldCreateRecursiveDependence","blockDependsOnItself","getBlock","getLinksAsList","sourcePort","targetPort","visitedBlockIds","connectedBlocks","getConnectedBlocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","connectedBlock","return","DefaultPortModel","BlockPortFactory","initialConfig","DefaultPortFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","registerFactories","registerLinkFactory","registerPortFactory","registerLabelFactory","DefaultLabelFactory","registerNodeFactories","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","onModelUpdate","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","DownloadsService","downloadAndSave","_downloadAndSave","download","save","_download","linkSource","btoa","downloadLink","click","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadLinkFactory","downloadNameFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ButtonToolbar","ToggleButtonGroup","defaultValue","format","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","DropdownDownload","RunsControls_RunsControls","RunsControls_ExecutionCard","RunsControls_ResultsCard","ExecutionCard","onStart","isStarting","startText","RunsControls_RunsProgressBar","ResultsCard","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","max","WorkflowRunsControls","startError","startedRunId","waitForRunStateReceived","runnableWorkflow","addRunsListener","containsRun","removeRunsListener","getDownloadLink","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","borderColor","aria-describedby","DEFAULT_WORKER_BLOCKED_MESSAGE","BlockingContextsModel","_enableContextForAllDoBlocks","getBlockingContextModelsOfDoBlocks","getDoBlockModels","_disableContextForAllDoBlocks","isSingleBlockingContextEnabledForAllDoBlocks","onlyOneContext","getBlocksArray","blocksWithEnabledBlockingContext","areSomeBlockingContextsEnabled","setContexts","toRemove","removeAllBlockingContexts","getDefaultContext","addContext","removeContext","workerBlockedMessage","isBlockingContextValid","CreateBlockingContext","togglePopoverButton","popoverContent","showPopover","registerListenerToClosePopoverWhenUserClicksOutside","clickListenerToClosePopoverWhenUserClicksOutside","composedPath","hidePopover","onCreated","onAdd","unregisterListenerToClosePopoverWhenUserClicksOutside","removeEventListener","Overlay","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","getBlockingContextFromState","RandomColorPicker_RandomColorPicker","EditBlockingContextModalAndButton","EditBlockingContextModalAndButton_EditBlockingContextModal","EditBlockingContextModal","resetInputFields","updatePropsContext","_this2$state","onColorChange","onWorkerBlockedMessageChange","BlockingContextsCRUD","onAddBlockingContext","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","renderNoBlockingContextsYet","renderTable","BlockingContextsCRUD_BlockingContextsTableRow","BlockingContextsTableRow","EditBlockingContextModalAndButton_EditBlockingContextModalAndButton","BlockingContextsCRUD_DeleteBlockingContextCell","DeleteBlockingContextCell","onRemoveContext","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","mutateToSingleBlockingContextForAllDoBlocks","renderCheckboxIndeterminateState","checkbox","indeterminate","WorkflowBlockingSettings","WorkflowBlockingCheckbox_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowSidebar_WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","cacheId","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","WorkflowGraphModel","blockingContexts","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","WorkflowEditor_WorkflowInstructions","Tooltip","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","isEditDisabled","onWorkflowEdited","serializeDiagram","isReadOnly","getStyleClasses","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","classes","join","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditor_WorkflowEditor_WorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","getRunningBlockRuns","getFinishedBlockRuns","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","getRunsOfWorkflow","slicedToArray","startWatchingRunsStatus","stopWatchRunsStatus","PUBLIC_WORKFLOWS_URL","PublicWorkflowsService","ReadOnlyWorkflowDashboard","fetchRunnableWorkflow","getWorkflowIdFromUrl","getWorkflowIdFromSpecifiedProps","runnableWorkflowRequest","initializeRunnableWorkflowService","WorkflowEditorContainer_WorkflowEditorContainer","EditableWorkflowDashboard","Workflows_Workflows","Workflows_PublicWorkflows","Run","createdAt","getCreatedAt","getFailedBlockRuns","RUNS_URL","JSONtoRun","id_workflow","BlockRun","id_cache","runsComparator","_getRuns","_getRunsOfWorkflow","_getRuns2","sort","freeze","runId","_Users_jorge_Development_work_trento_crowdhub_web_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Projects__WEBPACK_IMPORTED_MODULE_0__","signInButtonRendered","loggedIn","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","renderLogin","renderSignInButtonIfNeeded","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","marginTop","textAlign","setImmediate"],"mappings":"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","file":"static/js/main.71f7b965.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import AuthService from \"../AuthService\";\n\nasync function sendAndParseJSON(url, options) {\n  options = getOptionsWithAuthorizationHeadersIfSignedIn(options);\n  const res = await fetch(url, options);\n\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nexport const getOptionsWithAuthorizationHeadersIfSignedIn = (options) => {\n  if (!AuthService.isInitialized() || !AuthService.isSignedIn()) {\n    return options;\n  }\n  return getOptionsWithAuthorizationHeaders(options);\n};\n\nconst getOptionsWithAuthorizationHeaders = (options) => {\n  options = options || {};\n  options.headers = options.headers || {};\n  options.headers.Authorization = `Bearer ${AuthService.getBearerToken()}`\n  return options;\n};\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, options) {\n  return await sendAndParseJSON(url, options);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","export const WEBAPP_URL = process.env.REACT_APP_WEBAPP_URL || \"http://localhost:4000\";\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingContainer = ({loading, children}) => {\n  if (loading) {\n    return (\n      <div className=\"loading-spinner-container\">\n        <Spinner animation=\"border\" variant=\"primary\"/>\n      </div>\n    );\n  }\n  return children;\n};\n\n\nexport default LoadingContainer;\n","module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nexport const JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph, shared}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph,\n    shared\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] updateWorkflow()\");\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async saveAndStartWorkflow (workflow) {\n    console.log(\"[WorkflowsSerivice] saveAndStartWorkflow()\");\n    await this.updateWorkflow(workflow);\n    return await this.startWorkflow(workflow);\n  },\n\n  async startWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] startWorkflow()\");\n    return await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n  },\n\n  async estimateDoBlockCost (workflowId, blockId) {\n    return await postJSON(`${WORKFLOWS_URL}/${workflowId}/${blockId}/estimated-cost`);\n  }\n}\n","/* global gapi */\n\n/**\n * AuthService uses the Google Platform Library to authenticate users. This library is loaded from a script specified in\n * the index.html, where you can also find the client id.\n * Since the script exposes a global object gapi at an unknown time, this Service need to be initialized.\n * The initialization process will periodically check if the library is loaded until it can find the gapi global object\n */\nconst AuthService = {\n\n  _authChangeListeners: [],\n  auth2: null,\n\n  async init() {\n    await this._waitForGapiToLoad();\n    this.auth2 = await this._loadAuth2Api();\n    this._notifyListeners();\n  },\n\n  /**\n   * Wait until the Google Platform Library exposes the gapi global object\n   * @returns {Promise<any>}\n   * @private\n   */\n  _waitForGapiToLoad() {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (window.gapi) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n  },\n\n  /**\n   * Request to the Google Platform Library to load the auth2 module\n   * @returns {Promise<any>}\n   * @private\n   */\n  _loadAuth2Api() {\n    return new Promise(resolve => {\n      gapi.load('auth2', function () {\n        const auth2 = gapi.auth2.init();\n        resolve(auth2);\n      });\n    });\n  },\n\n  addOnAuthChangeListener(listener) {\n    this._authChangeListeners.push(listener);\n  },\n\n  renderSignInButton(containerId, onSignedIn) {\n    this.assertInitialized();\n    gapi.signin2.render(containerId, {\n      onSuccess: () => {\n        onSignedIn();\n        this._notifyListeners();\n      }\n    });\n  },\n\n  _notifyListeners() {\n    this._authChangeListeners.forEach(listener => listener())\n  },\n\n  isInitialized() {\n    return !!this.auth2;\n  },\n\n  isSignedIn() {\n    this.assertInitialized();\n    return this.auth2.isSignedIn.get();\n  },\n\n  signOut() {\n    this.assertInitialized();\n    return new Promise(resolve => this.auth2.signOut().then(() => {\n      resolve();\n      this._notifyListeners();\n    }));\n  },\n\n  getBearerToken () {\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getAuthResponse().id_token;\n  },\n\n  getUserInfo(){\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getBasicProfile();\n  },\n\n  assertInitialized () {\n    if(!this.isInitialized()) {\n      throw new Error('AuthService not initialized');\n    }\n  }\n\n};\n\nexport default AuthService;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isLoading, disabled, onClick, children, block, variant}) => (\n  <Button disabled={disabled || isLoading}\n          onClick={onClick}\n          className={block ? 'btn-block' : ''}\n          variant={variant || 'primary'}>\n    {\n      isLoading &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\nimport LoadingButton from \"./LoadingButton\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <LoadingButton variant=\"danger\"\n                         className=\"confirm\"\n                         onClick={this.onConfirmDeletion}\n                         isLoading={this.state.deleting}>Delete</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst USERS_URL = `${API_URL}/users`;\n\nconst JSONtoUser = ({id, data}) => ({\n  id,\n  email: data.email,\n  imageUrl: data.picture\n});\n\nexport const USER_SUGGETION_MIN_EMAIL_LENGTH = 4;\n\nexport default {\n  async findUsersByEmail(email) {\n    const jsonList = await getJSON(`${USERS_URL}?email=${email}`);\n    return jsonList.map(JSONtoUser);\n  },\n\n  async getById(id) {\n    const json = await getJSON(`${USERS_URL}/${id}`);\n    return JSONtoUser(json);\n  }\n};\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst PROJECT_COLLABORATIONS_URL = `${API_URL}/project-collaborations`;\n\nconst JSONToProjectCollaboration = ({id, id_project, id_user}) => ({\n  id,\n  projectId: id_project,\n  userId: id_user\n});\n\nexport const ProjectCollaborationToJSON = ({id, projectId, userId}) => ({\n  id,\n  projectId,\n  userId\n});\n\nexport default {\n  async getCollaborationsOfProject(projectId) {\n    const jsonList = await getJSON(`${PROJECT_COLLABORATIONS_URL}?projectId=${projectId}`);\n    return jsonList.map(JSONToProjectCollaboration);\n  },\n\n  async createCollaboration(projectId, userId) {\n    const jsonToSend = ProjectCollaborationToJSON({projectId, userId});\n    const receivedJSON = await postJSON(PROJECT_COLLABORATIONS_URL, jsonToSend);\n    return JSONToProjectCollaboration(receivedJSON);\n  },\n\n  async deleteCollaboration(collaborationId) {\n    await sendDelete(`${PROJECT_COLLABORATIONS_URL}/${collaborationId}`);\n  }\n};\n\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\nimport UsersService, {USER_SUGGETION_MIN_EMAIL_LENGTH} from \"../../../../Services/rest/UsersService\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\n\nexport default class AddNewCollaboration extends Component {\n\n  state = {};\n\n  fetchSuggestions = async (input) => {\n    if (input.length >= USER_SUGGETION_MIN_EMAIL_LENGTH) {\n      return await this.fetchSuggestionsFromService(input);\n    }\n    return [];\n  };\n\n  fetchSuggestionsFromService = async (input) => {\n    const users = await UsersService.findUsersByEmail(input);\n    return this.filterUserAlreadyCollaborating(users);\n  };\n\n  filterUserAlreadyCollaborating = (users) => {\n    const collaboratorIds = this.getUserIdsOfCollaborators();\n    return users\n      .filter(user => this.props.project.ownerId !== user.id)\n      .filter(user => collaboratorIds.find(collaboratorId => collaboratorId === user.id) == null);\n  };\n\n  getUserIdsOfCollaborators = () => this.getCollaborations().map(collaboration => collaboration.userId);\n\n  getCollaborations = () => this.props.collaborations;\n\n  render() {\n    const {project} = this.props;\n    return (\n      <div>\n        <h4>Add a new collaboration</h4>\n        <Form.Group>\n          <Form.Label>User email</Form.Label>\n          <AutocompleteField\n            fetchSuggestions={this.fetchSuggestions}\n            renderSuggestion={user => <SuggestedUser key={user.id}\n                                                     {...user}\n                                                     projectId={project.id}\n                                                     onCollaborationAdded={this.props.onCollaborationAdded}/>}\n            onSuggestionSelected={this.onAddUser}\n          />\n        </Form.Group>\n      </div>\n    );\n  }\n}\n\nclass SuggestedUser extends Component {\n\n  state = {\n    isAdding: false,\n    added: false\n  };\n\n  onAddUser = async () => {\n    const {projectId, id: userId} = this.props;\n    this.setState({isAdding: true});\n    try {\n      const collaboration = await ProjectCollaborationsService.createCollaboration(projectId, userId);\n      this.props.onCollaborationAdded(collaboration);\n      this.setState({added: true});\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isAdding: false});\n  };\n\n  render() {\n    const {isAdding, added} = this.state;\n    const {email, imageUrl} = this.props;\n    return (\n      <ListGroupItem className=\"collaborator-row\">\n        <Row>\n          <Col xs={2}>\n            <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n          </Col>\n          <Col xs={7}>{email}</Col>\n          <Col xs={3} className=\"action\">\n            {\n              added ?\n                <Button className=\"btn-block\" disabled variant=\"success\">Added</Button> :\n                <LoadingButton block isLoading={isAdding} onClick={this.onAddUser}>Add</LoadingButton>\n            }\n          </Col>\n        </Row>\n      </ListGroupItem>\n    )\n  }\n}\n\nclass AutocompleteField extends Component {\n\n  DEFAULT_TIMEOUT = 300;\n\n  timeout = null;\n\n  state = {\n    suggestions: [],\n    isFetching: false,\n\n    value: '',\n  };\n\n  onInputChange = (input) => {\n    this.setState({value: input});\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.startTimeout(input);\n  };\n\n  isTimeoutRunning = () => this.timeout !== null;\n\n  cancelTimeout = () => {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n  };\n\n  startTimeout = (input) => this.timeout = setTimeout(\n    () => this.onTimeoutElapsed(input),\n    this.DEFAULT_TIMEOUT\n  );\n\n  onTimeoutElapsed = async (input) => {\n    this.setState({isFetching: true});\n    try {\n      const suggestions = await this.props.fetchSuggestions(input);\n      this.setState({suggestions, isFetching: false});\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  onSuggestionSelected = (suggestion) => {\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.setState({\n      value: '',\n      suggestions: [],\n      isFetching: false\n    });\n    this.props.onSuggestionSelected(suggestion);\n  };\n\n  render() {\n    const {value, suggestions, isFetching, fetchError} = this.state;\n    const {renderSuggestion} = this.props;\n    return (\n      <div>\n        <Form.Control\n          className=\"mb-2\"\n          value={value}\n          onChange={(e) => this.onInputChange(e.target.value)}/>\n\n\n        <LoadingContainer loading={isFetching}>\n          {\n            fetchError &&\n            <span>Can't suggest users</span>\n          }\n\n          <ListGroup>\n            {\n              !fetchError &&\n              suggestions.map(renderSuggestion)\n            }\n          </ListGroup>\n        </LoadingContainer>\n      </div>\n    );\n  }\n}\n\n","import React, {Component} from \"react\";\nimport {Col, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\n\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport UsersService from \"../../../../Services/rest/UsersService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\n\n\nexport default ({collaborations, onCollaborationDeleted}) => (\n  <div>\n    <h4>Collaborations</h4>\n    <ListGroup>\n      {\n        collaborations.length <= 0 &&\n        <span>No collaborations</span>\n      }\n      {\n        collaborations.length > 0 && collaborations.map(collaboration => (\n          <Collaboration key={collaboration.id} {...collaboration} onCollaborationDeleted={onCollaborationDeleted}/>\n        ))\n      }\n    </ListGroup>\n  </div>\n);\n\nclass Collaboration extends Component {\n\n  state = {\n    isFetching: false,\n    user: null,\n\n    isRemoving: false\n  };\n\n  componentDidMount = () => this.fetchUser();\n\n  fetchUser = async () => {\n    this.setState({isFetching: true});\n    try {\n      const user = await UsersService.getById(this.getUserId());\n      this.setState({user});\n    } catch (e) {\n      console.log(e);\n      // TODO: Handle error\n    }\n    this.setState({isFetching: false});\n  };\n\n  getUserId = () => this.props.userId;\n\n  onRemoveUser = async () => {\n    this.setState({isRemoving: true});\n    try {\n      const id = this.getCollaborationId();\n      await ProjectCollaborationsService.deleteCollaboration(id);\n      this.props.onCollaborationDeleted(id);\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isRemoving: false})\n  };\n\n  getCollaborationId = () => this.props.id;\n\n  render() {\n    const {isRemoving, isFetching, user} = this.state;\n    const {email, imageUrl} = user || {};\n    return (\n      (\n        <ListGroupItem className=\"collaborator-row\">\n          <LoadingContainer loading={isFetching}>\n            <Row>\n              <Col xs={2}>\n                <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n              </Col>\n              <Col xs={7}>{email}</Col>\n              <Col xs={3} className=\"action\">\n                <LoadingButton isLoading={isRemoving} onClick={this.onRemoveUser}\n                               variant=\"danger\">Remove</LoadingButton>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </ListGroupItem>\n      )\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../../utils/events\";\nimport AddNewCollaboration from \"./AddNewCollaboration\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport CollaborationsList from \"./CollaborationsList\";\nimport \"./ShareProjectButtonAndModal.css\";\n\nexport default class ShareProjectButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareProjectModal show={this.state.show}\n                           onClose={this.onCloseModal}\n                           {...this.props}/>\n\n          <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass ShareProjectModal extends Component {\n\n  state = {\n    collaborations: null,\n    isFetching: false,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchCollaborations();\n\n  fetchCollaborations = async () => {\n    this.setState({collaborations: null, isFetching: true, fetchError: false});\n    try {\n      const collaborations = await ProjectCollaborationsService.getCollaborationsOfProject(this.getProject().id);\n      this.setState({collaborations});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n    this.setState({isFetching: false});\n  };\n\n  getProject = () => this.props.project;\n\n  onClose = () => this.props.onClose();\n\n  onCollaborationAdded = (collaboration) => this.setState({collaborations: [...this.state.collaborations, collaboration]});\n\n  onCollaborationDeleted = (id) => {\n    const {collaborations} = this.state;\n    const index = collaborations.findIndex(collaboration => collaboration.id === id);\n    if(index >= 0) {\n      collaborations.splice(index, 1);\n      this.setState({collaborations});\n    }\n  };\n\n  render() {\n    const {fetchError, collaborations, isFetching} = this.state;\n    const project = this.getProject();\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>Sharing preferences of project #{project.id}</Modal.Header>\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            <AddNewCollaboration collaborations={collaborations}\n                                 project={project}\n                                 onCollaborationAdded={this.onCollaborationAdded}/>\n            <CollaborationsList collaborations={collaborations}\n                                onCollaborationDeleted={this.onCollaborationDeleted}/>\n          </LoadingContainer>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ShareProjectButtonAndModal from \"./ShareProjectButtonAndModal/ShareProjectButtonAndModal\";\nimport \"./ProjectsTable.css\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td className=\"actions-cell\">\n        <ShareProjectButtonAndModal project={project}/>\n        <EditButton project={project}/>\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst EditButton = ({project}) => {\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n  return (\n    <Link to={editProjectLink} className=\"icon-button\">\n      <i className=\"fas fa-edit\"/>\n    </Link>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.projects && !this.state.fetchError}>\n          <Row>\n            {\n              !this.state.projects && this.state.fetchError &&\n              <FetchProjectsError/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length === 0 &&\n              <NoProjects/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length > 0 &&\n              <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n            }\n          </Row>\n        </LoadingContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">Create</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"./WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Alert, Button, Form, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport LoadingButton from \"../../common/LoadingButton\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport \"./ShareWorkflowButtonAndModal.css\";\nimport {PUBLIC_WORKFLOWS_PATH} from \"../Workflows\";\nimport {WEBAPP_URL} from \"../../../config\";\n\nexport class ShareWorkflowButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareWorkflowModal show={this.state.show}\n                            onClose={this.onCloseModal}\n                            {...this.props}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class ShareWorkflowModal extends Component {\n\n  state = {\n    workflow: null,\n\n    isFetching: false,\n    fetchError: false,\n\n    isSaving: false,\n    saveError: false\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.show && !prevProps.show) {\n      this.fetchWorkflow();\n    }\n  }\n\n  fetchWorkflow = async () => {\n    try {\n      this.setState({isFetching: true, fetchError: false});\n      const workflow = await WorkflowsService.getWorkflow(this.getWorkflowId());\n      this.setState({isFetching: false, fetchError: false, workflow});\n    } catch (e) {\n      this.setState({isFetching: false, fetchError: true});\n    }\n  };\n\n  getWorkflowId = () => this.props.workflow.id;\n\n  shareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: true}});\n\n  unshareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: false}});\n\n  onCancel = () => this.props.onClose();\n\n  onSave = async () => {\n    try {\n      this.setState({isSaving: true, saveError: false});\n      await WorkflowsService.updateWorkflow(this.state.workflow);\n      this.setState({isSaving: false, saveError: false});\n      this.props.onWorkflowSharedOrUnshared();\n      this.props.onClose();\n    } catch (e) {\n      this.setState({isSaving: false, saveError: true});\n    }\n  };\n\n  render() {\n    const {isFetching, fetchError, isSaving, saveError, workflow} = this.state;\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          Sharing preferences of workflow #{this.getWorkflowId()}\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            {\n              saveError &&\n              <Alert variant=\"danger\">\n                An error occurred while saving the sharing preferences.\n              </Alert>\n            }\n\n            {\n              workflow &&\n              <SharingPreferenceControl workflowId={workflow.id}\n                                        shared={!!workflow.shared}\n                                        shareWorkflow={this.shareWorkflow}\n                                        unshareWorkflow={this.unshareWorkflow}/>\n            }\n          </LoadingContainer>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={isSaving}>Cancel</Button>\n          <LoadingButton onClick={this.onSave} disabled={isFetching} isLoading={isSaving}>Save</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nconst SharingPreferenceControl = ({shared, workflowId, shareWorkflow, unshareWorkflow}) => {\n  const publicLink = getPublicLink(workflowId);\n  return (\n    <div>\n      <Form.Group>\n        <Form.Check\n          checked={!shared}\n          type=\"radio\"\n          label=\"Private Workflow\"\n          onChange={unshareWorkflow}\n        />\n        <p className=\"description-of-radio\">Workflow visible and editable only by the owner and collaborators</p>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Check\n          checked={shared}\n          type=\"radio\"\n          label=\"Public Workflow\"\n          onChange={shareWorkflow}\n        />\n        <p className=\"description-of-radio\">\n          Workflow visible by anyone and editable only by the owner and collaborators.\n          Public Link: <a href={publicLink} target=\"_blank\" rel=\"noopener noreferrer\">{publicLink}</a>\n        </p>\n      </Form.Group>\n    </div>\n  );\n};\n\nconst getPublicLink = (workflowId) => `${WEBAPP_URL}/#${PUBLIC_WORKFLOWS_PATH}/${workflowId}`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {ShareWorkflowButtonAndModal} from \"./ShareWorkflowButtonAndModal\";\nimport \"./WorkflowTable.css\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowUpdated, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}\n                           onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n        <i className={`share-status-icon fas ${workflow.shared ? 'fa-unlock' : 'fa-lock'}`}/>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <ShareWorkflowButtonAndModal workflow={workflow} onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id,\n      workflows: null,\n      fetchError:false\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.workflows && !this.state.fetchError}>\n          <Row>\n            <Col>\n              {\n                this.state.fetchError &&\n                <FetchingWorkflowsError/>\n              }\n\n              {\n                this.state.workflows &&\n                <WorkflowsTable workflows={this.state.workflows}\n                                onWorkflowDeleted={this.fetchWorkflows}\n                                onWorkflowSharedOrUnshared={this.fetchWorkflows}/>\n              }\n            </Col>\n          </Row>\n        </LoadingContainer>\n      </Container>\n    );\n  }\n}\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      csv_url: csvUrl\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <LoadingContainer loading={!this.state.items}>\n          <Container className=\"items-table-container\">\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          </Container>\n        </LoadingContainer>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <LoadingContainer loading={!this.state.project}>\n            <Row>\n              <ProjectData project={this.state.project}/>\n\n              <div style={{width: '100%'}}>\n                <hr/>\n\n                <Tabs defaultActiveKey=\"workflow\">\n                  <Tab eventKey=\"workflow\" title=\"Workflows\">\n                    <EmbeddableWorkflowsList project={this.state.project}/>\n                  </Tab>\n\n                  <Tab eventKey=\"items\" title=\"Items\">\n                    <ItemsView project={this.state.project}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Row>\n        </LoadingContainer>\n\n      </Container>\n    );\n  }\n}\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n  json.ownerId = json.id_user;\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Sidebar.css';\nimport RunsService from \"../../Services/rest/RunsService\";\nimport {WORKFLOWS_PATH} from \"../Workflows/Workflows\";\n\nconst MAX_RUNS_IN_LIST = 5;\n\nexport default class Sidebar extends Component {\n\n  state = {\n    runs: null\n  };\n\n  componentDidMount = () => this.fetchRuns();\n\n  async fetchRuns() {\n    try {\n      const runs = await RunsService.getRuns();\n      this.setState({runs});\n    } catch (e) {\n      // TODO: Handle error\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ul className=\"sidebar-list\">\n          <li>\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </li>\n\n          <li>\n            <LatestFinishedRunsList runs={this.state.runs}/>\n          </li>\n\n          <li>\n            <RunningRunsList runs={this.state.runs}/>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\nconst LatestFinishedRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching latest finished runs ...</p>;\n  }\n  return (\n    <div>\n      Latest finished runs\n      <JobsList runs={runs.getFinishedRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst RunningRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching running runs ...</p>;\n  }\n  return (\n    <div>\n      Running runs\n      <JobsList runs={runs.getRunningRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst JobsList = ({runs}) => (\n  <ul>\n    {\n      runs.map(run => (\n        <li key={run.id}>\n          <NavLink to={`${WORKFLOWS_PATH}/${run.getWorkflowId()}`}>\n            #{run.id}\n          </NavLink>\n        </li>\n      ))\n    }\n  </ul>\n);\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ACCOUNT_BALANCE_URL = `${API_URL}/account-balance`;\n\n\nexport const JSONtoBalances = json => json;\n\nexport default {\n\n  _cachedBalance: null,\n\n  async getBalances() {\n    if (this._isBalancesCached()) {\n      return this._getCachedBalance();\n    }\n    const json = await getJSON(ACCOUNT_BALANCE_URL);\n    const balances = JSONtoBalances(json);\n    this._cacheBalances(balances);\n    return balances;\n  },\n\n  _isBalancesCached() {\n    return !!this._getCachedBalance();\n  },\n\n  _getCachedBalance() {\n    return this._cachedBalance;\n  },\n\n  _cacheBalances(balances) {\n    this._cachedBalance = balances;\n  }\n}\n\n","import React, {Component} from 'react';\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\nimport \"./AccountInformation.css\";\nimport {makeCancellable} from \"../../Services/rest/utils\";\nimport AccountBalanceService from \"../../Services/rest/AccountBalanceService\";\nimport LoadingContainer from \"../common/LoadingContainer\";\nimport AuthService from \"../../Services/AuthService\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport {LOGIN_PATH} from \"../Login/Login\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class AccountInformation extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        overlay={\n          <Popover id=\"account-information-popover\"\n                   title=\"Account information\">\n            <AccountInformationPopoverContent/>\n          </Popover>\n        }>\n\n        <div>\n          <AccountInformationPreview/>\n        </div>\n      </OverlayTrigger>\n    );\n  }\n}\n\nclass AccountInformationPreview extends Component {\n  render() {\n    const userInfo = AuthService.getUserInfo();\n    return (\n      <div>\n        <span>{userInfo.getName()}</span>\n        <img className=\"user-avatar\" src={userInfo.getImageUrl()} alt=\"user avatar\"/>\n      </div>\n    );\n  }\n}\n\n\nexport class AccountInformationPopoverContent extends Component {\n  render() {\n    return (\n      <div>\n        <PlatformBalances/>\n\n        <hr/>\n\n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n\n\nexport class PlatformBalances extends Component {\n\n  pendingBalancesRequest;\n\n  state = {\n    balances: null,\n    fetchError: false\n  };\n\n  componentDidMount = async () => await this.fetchBalances();\n\n  componentWillUnmount = () => this.pendingBalancesRequest.cancel();\n\n  fetchBalances = async () => {\n    this.setState({balances: null, fetchError: false});\n    try {\n      this.pendingBalancesRequest = makeCancellable(AccountBalanceService.getBalances());\n      const balances = await this.pendingBalancesRequest.result;\n      this.setState({balances, fetchError: false});\n    } catch (e) {\n      this.setState({balances: null, fetchError: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"balances-container\">\n        <h6>Balances</h6>\n\n        <LoadingContainer loading={!this.state.balances && !this.state.fetchError}>\n          {\n            !this.state.balances && this.state.fetchError &&\n            <p>Error</p>\n          }\n\n          {\n            this.state.balances && !this.state.fetchError &&\n            this.renderBalances()\n          }\n        </LoadingContainer>\n      </div>\n    );\n  }\n\n  static prepareNumber = (balance) => typeof balance === \"number\" ? balance.toFixed(2) : \"not available\";\n\n  renderBalances = () => {\n    const {tolokaSandbox, tolokaNormal, f8} = this.state.balances;\n    return (\n      <div>\n        <strong>Toloka Sandbox</strong>: {PlatformBalances.prepareNumber(tolokaSandbox)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(tolokaNormal)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(f8)}$<br/>\n      </div>\n    );\n  };\n\n}\n\n\nclass LogoutButton extends Component {\n\n  state = {\n    loggingOut: false,\n    loggedOut: false\n  };\n\n  onLogout = async () => {\n    this.setState({loggingOut: true});\n    try {\n      await AuthService.signOut();\n      this.setState({loggedOut: true});\n    } catch (e) {\n      console.error(e);\n      // TODO: Handle error\n    }\n    this.setState({loggingOut: false});\n  };\n\n  render() {\n    if (this.state.loggedOut) {\n      return this.renderRedirect();\n    }\n    return (\n      <LoadingButton isLoading={this.state.loggingOut} onClick={this.onLogout} block>Logout</LoadingButton>\n    );\n  }\n\n  renderRedirect = () => (\n    <Redirect to={LOGIN_PATH}/>\n  );\n}\n","import React, {Component} from 'react';\nimport menu from \"../../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\nimport AccountInformation from \"./AccountInformation\";\n\n\nexport default class AppBar extends Component {\n  render() {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <div className=\"mr-auto\">\n          <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n            <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n          </button>\n        </div>\n\n        <div>\n          <AccountInformation/>\n        </div>\n      </Navbar>\n    )\n  }\n\n\n}\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport {PUBLIC_WORKFLOWS_PATH, PublicWorkflows, Workflows, WORKFLOWS_PATH} from \"./Workflows/Workflows\";\nimport AuthService from '../Services/AuthService';\nimport Login, {LOGIN_PATH} from \"./Login/Login\";\nimport LoadingContainer from \"./common/LoadingContainer\";\n\n\nexport default class AuthenticatedAppRouter extends Component {\n\n  state = {\n    authServiceInitialized: false\n  };\n\n  componentDidMount = () => this.initAuthService();\n\n  initAuthService = async () => {\n    await AuthService.init();\n    this.setState({authServiceInitialized: true});\n  };\n\n  render() {\n    if (!this.state.authServiceInitialized) {\n      return this.renderInitializingAuthService();\n    }\n    return this.renderRouter();\n  }\n\n  renderInitializingAuthService() {\n    return (\n      <div style={{height: '100vh'}}>\n        <LoadingContainer loading/>\n      </div>\n    );\n  }\n\n  renderRouter() {\n    return (\n      <AppRouter/>\n    );\n  }\n}\n\nconst AppRouter = () => (\n  <Switch>\n    {/* private routes */}\n    <PrivateRoute path={PROJECTS_PATH} component={Projects}/>\n    <PrivateRoute path={WORKFLOWS_PATH} component={Workflows}/>\n\n    {/* only public routes */}\n    <NotLoggedInRoute path={LOGIN_PATH} component={Login}/>\n\n    {/* private or public routes */}\n    <Route path={PUBLIC_WORKFLOWS_PATH} component={PublicWorkflows}/>\n\n    <Route path=\"/semplice\" component={() => <p>ok</p>}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={PROJECTS_PATH}/>)}/>\n  </Switch>\n);\n\nconst PrivateRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Component/> :\n           <Redirect to={LOGIN_PATH}/>\n         }/>\n);\n\n\nconst NotLoggedInRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Redirect to={PROJECTS_PATH}/> :\n           <Component/>\n         }/>\n);\n\n\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./Appbar/AppBar\";\nimport AuthenticatedAppRouter from \"./AppRouter\";\nimport AuthService from \"../Services/AuthService\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  componentDidMount() {\n    AuthService.addOnAuthChangeListener(() => this.forceUpdate());\n  }\n\n  render() {\n    const showSidebarAndAppBar = AuthService.isInitialized() && AuthService.isSignedIn();\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {\n            /* Left collapsable sidebar */\n            showSidebarAndAppBar &&\n            <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n          }\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            {\n              showSidebarAndAppBar &&\n              <AppBar onToggleSidebar={this.onToggleSidebar}/>\n            }\n\n            <AuthenticatedAppRouter/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nexport default class HtmlModalEditor extends Component {\n\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <div>\n        <Button disabled={this.props.disabled} className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n\n        <Modal show={this.state.show} size=\"lg\">\n          <Modal.Header>{this.props.title}</Modal.Header>\n\n          <Modal.Body>\n            <Editor {...this.props}/>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button onClick={this.hideModal}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport HtmlModalEditor from \"./HtmlModalEditor\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const EditorComponent = this.getEditor();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <EditorComponent onEditorChange={this.handleEditorChange}\n                         initialValue={model.getValue()}\n                         init={{menubar: false}}\n                         disabled={this.props.disabled}\n                         title={definition.displayName}/>\n      </Form.Group>\n    );\n  }\n\n  getEditor() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    if (definition.editorInModal) {\n      return HtmlModalEditor;\n    }\n    return Editor;\n  }\n\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle disabled={this.isDisabled()} className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle disabled={this.isDisabled()}\n                       className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html/Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\nimport DoBlockCost from \"./DoBlockCost\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext,\n  DoBlockCost\n]);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\n\nclass DoBlockCostWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimatedCost: this.getModel().getEstimatedCost(),\n      estimationError: false,\n      estimating: false\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  estimateCost = async () => {\n    this.setState({estimatedCost: null, estimationError: false, estimating: true});\n    try {\n      const estimatedCost = await WorkflowsService.estimateDoBlockCost(\n        this.getWorkflowId(), this.getBlockId()\n      );\n      this.onCostEstimated(estimatedCost);\n    } catch (e) {\n      this.setState({estimatedCost: null, estimationError: true, estimating: false});\n    }\n  };\n\n  getWorkflowId() { // TODO: Clear\n    const blockModel = this.getBlockModel();\n    const workflowModel = blockModel.parent;\n    return workflowModel.workflowId;\n  }\n\n  getBlockModel() {\n    return this.getModel().blockModel;\n  }\n\n  getBlockId() {\n    const blockModel = this.getBlockModel();\n    return blockModel.id;\n  }\n\n  onCostEstimated(estimatedCost) {\n    this.setState({estimatedCost, estimationError: false, estimating: false});\n    this.getModel().setEstimatedCost(estimatedCost);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderEstimatedCost()}\n\n        <LoadingButton block onClick={this.estimateCost}\n                       isLoading={this.state.estimating}\n                       disabled={this.props.disabled}>\n          Estimate cost\n        </LoadingButton>\n      </div>\n    );\n  }\n\n  renderEstimatedCost() {\n    if (this.state.estimatedCost === null) {\n      return this.renderCostNeverEstimated();\n    }\n    return this.renderLatestEstimatedCost();\n  }\n\n  renderCostNeverEstimated() {\n    return (\n      <Form.Text className=\"text-muted\">\n        The cost of this block has never been estimated. Click the button below to estimate it.\n      </Form.Text>\n    );\n  }\n\n  renderLatestEstimatedCost() {\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          The latest estimated cost is: <strong>{this.state.estimatedCost}$</strong>.\n          Click the button below to estimate it again.\n        </Form.Text>\n      </div>\n    );\n  }\n}\n\nclass DoBlockCostModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n\n  setEstimatedCost(estimatedCost) {\n    if (estimatedCost) {\n      estimatedCost = estimatedCost.toFixed(2);\n    }\n    this.setValue(estimatedCost);\n  }\n\n  getEstimatedCost() {\n    return this.getValue();\n  }\n}\n\nexport default {\n  type: 'doBlockCost',\n  Widget: DoBlockCostWidget,\n  Model: DoBlockCostModel\n}\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../Services/RunnableWorkflowService/models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getPortsAsList () {\n    return Object.values(this.getPorts());\n  }\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED, NOT_STARTED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, blockId);\n    this.waitRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, `${blockId}_wait`);\n  }\n\n  static _getBlockRunOrNotStarted = (run, blockId) => run.getBlockRun(blockId) || {getState: () => NOT_STARTED};\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../Services/RunnableWorkflowService/adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DefaultPortModel} from \"storm-react-diagrams\";\n\nexport default class BlockPortModel extends DefaultPortModel {\n\n  canLinkToPort(port) {\n    if (!super.canLinkToPort(port)) {\n      return false;\n    }\n    const linkWouldCreateRecursiveDependence = BlockPortModel.blockDependsOnItself(this.getBlock());\n    if (linkWouldCreateRecursiveDependence) {\n      console.info(\"Link prevented to avoid recursive dependencies\");\n    }\n    return !linkWouldCreateRecursiveDependence;\n  }\n\n  getBlock() {\n    return this.parent;\n  }\n\n  getConnectedBlocks() {\n    return this.getLinksAsList()\n      .map(link => link.sourcePort === this ? link.targetPort : link.sourcePort)\n      .map(port => port.getBlock());\n  }\n\n  getLinksAsList() {\n    return Object.values(this.getLinks());\n  }\n\n  static blockDependsOnItself(block, visitedBlockIds = {}) {\n    visitedBlockIds[block.getId()] = true;\n    const outPort = block.getPort('out');\n    const connectedBlocks = outPort.getConnectedBlocks();\n    for (let connectedBlock of connectedBlocks) {\n      if (visitedBlockIds[connectedBlock.getId()]) {\n        return true;\n      }\n      if (BlockPortModel.blockDependsOnItself(connectedBlock, visitedBlockIds)) {\n        return true;\n      }\n    }\n    visitedBlockIds[block.getId()] = false;\n    return false;\n  }\n\n}\n","import {DefaultPortFactory} from \"storm-react-diagrams\";\nimport BlockPortModel from \"../models/BlockPortModel\";\n\nexport default class BlockPortFactory extends DefaultPortFactory{\n\n  getNewInstance(initialConfig) {\n    return new BlockPortModel();\n  }\n}\n","import {DefaultLabelFactory, DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\nimport BlockPortFactory from \"./factories/BlockPortFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.registerFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  registerFactories() {\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.registerPortFactory(new BlockPortFactory());\n    this.registerLabelFactory(new DefaultLabelFactory());\n    this.registerNodeFactories();\n  }\n\n  registerNodeFactories () {\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.props.onModelUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","import {getOptionsWithAuthorizationHeadersIfSignedIn} from \"./rest/utils\";\n\nexport default {\n  async downloadAndSave (link, name) {\n    const content = await this.download(link);\n    this.save(content, name);\n  },\n\n  async download (link) {\n    const res = await fetch(link, getOptionsWithAuthorizationHeadersIfSignedIn({}));\n    return await res.text();\n  },\n\n  save(content, name) {\n    const linkSource = `data:application/pdf;base64,${btoa(content)}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = name;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\nimport {ignoreEventAnd} from \"../../../../../utils/events\";\nimport DownloadsService from \"../../../../../../Services/DownloadsService\";\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadLinkFactory, downloadNameFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                name={downloadNameFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  name={downloadNameFactory(latestFinishedRun, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, name, isLatest, id}) => (\n  <a className=\"btn btn-success\"\n     style={{color: 'white'}}\n     onClick={ignoreEventAnd(() => DownloadsService.downloadAndSave(link, name))}>\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, name, isLatest, id}) => (\n  <Dropdown.Item onClick={ignoreEventAnd(() => DownloadsService.download(link, name))}>\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default (props) => (\n  <div>\n    {\n      !props.readOnly &&\n      <ExecutionCard {...props}/>\n    }\n\n    <ResultsCard {...props}/>\n  </div>\n);\n\nconst ExecutionCard = ({runnable, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <Card>\n    <Card.Header>Execution</Card.Header>\n\n    <Card.Body>\n      {\n        runnable.isRunning() &&\n        <div>\n          Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n          Progress:<br/>\n          <RunsProgressBar runnable={runnable}/>\n        </div>\n      }\n\n      <LoadingButton block onClick={onStart}\n                     disabled={!runnable.canStart()}\n                     isLoading={isStarting}>{startText}</LoadingButton>\n\n    </Card.Body>\n  </Card>\n);\n\nconst ResultsCard = ({runnable, downloadLinkFactory, downloadNameFactory}) => (\n  <Card className=\"mt-2\">\n    <Card.Header>Results</Card.Header>\n    <Card.Body>\n      <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                        downloadNameFactory={downloadNameFactory}\n                        runnable={runnable}/>\n    </Card.Body>\n  </Card>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.saveAndStartWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow, readOnly} = this.props;\n    const workflow = this.getWorkflow();\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      downloadNameFactory={(run, format) => `${workflow.name} #${run.id}.${format}`}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}\n                      readOnly={readOnly}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    borderColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import {DoBlockNodeModel} from \"./DoBlockNodeModel\";\n\nexport const DEFAULT_WORKER_BLOCKED_MESSAGE = \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\";\n\nexport default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById(id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableContextForAllDoBlocks(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    id: 'default-blocking-context',\n    name: 'Default',\n    color: '#ffaff3',\n    workerBlockedMessage: \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\"\n  });\n\n  _enableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(context.id));\n\n  getBlockingContextModelsOfDoBlocks = () => this.getDoBlockModels()\n    .map(block => block.getBlockingContextModelParameter());\n\n  getDoBlockModels() {\n    return this.graphModel.getBlocksArray().filter(block => block instanceof DoBlockNodeModel);\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => {\n      this._disableContextForAllDoBlocks(context);\n      this.removeContext(context)\n    });\n  }\n\n  _disableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => blockingContextModel.getBlockingContextId() === context.id)\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(null));\n\n\n  isSingleBlockingContextEnabledForAllDoBlocks = () => {\n    const onlyOneContext = this.getContexts().length === 1;\n    const blocks = this.graphModel.getBlocksArray();\n    const blocksWithEnabledBlockingContext = this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId());\n    return onlyOneContext && blocks.length === blocksWithEnabledBlockingContext.length;\n  };\n\n\n  areSomeBlockingContextsEnabled = () =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId())\n      .length > 0;\n\n}\n\n\nexport const isBlockingContextValid = ({name, workerBlockedMessage}) =>\n  name && name.length >= 0 && workerBlockedMessage\n  && workerBlockedMessage.length >= 0;\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport \"./CreateBlockingContext.css\";\nimport {\n  DEFAULT_WORKER_BLOCKED_MESSAGE,\n  isBlockingContextValid\n} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport default class CreateBlockingContext extends Component {\n\n  togglePopoverButton = React.createRef();\n  popoverContent = React.createRef();\n\n  state = {\n    show: false\n  };\n\n  showPopover = () => {\n    this.setState({show: true});\n    this.registerListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  registerListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.addEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  clickListenerToClosePopoverWhenUserClicksOutside = (e) => {\n    const popoverContent = this.popoverContent.current;\n    const clickInPopover = e.composedPath().indexOf(popoverContent) >= 0;\n    if (!clickInPopover) {\n      this.hidePopover();\n    }\n  };\n\n  onCreated = (context) => {\n    this.hidePopover();\n    this.props.onAdd(context);\n  };\n\n  hidePopover = () => {\n    this.setState({show: false});\n    this.unregisterListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  unregisterListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.removeEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\"\n                onClick={this.showPopover}\n                ref={this.togglePopoverButton}>Add blocking context</Button>\n        <Overlay\n          id=\"create-blocking-context-popover-container\"\n          show={this.state.show}\n          placement=\"left\"\n          target={this.togglePopoverButton.current}\n          container={document.getElementById('workflow-editor')}>\n\n          <Popover title=\"Create experimental group\"\n                   id=\"create-blocking-context-popover\"\n                   placement=\"left\">\n            <div ref={this.popoverContent}>\n              <CreateBlockingContextPopover onCreated={this.onCreated}/>\n            </div>\n          </Popover>\n        </Overlay>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n  state = {\n    name: '',\n    color: null,\n    workerBlockedMessage: DEFAULT_WORKER_BLOCKED_MESSAGE\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      ...this.getBlockingContextFromState()\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Form.Row>\n        <Col xs=\"12\">\n          <Form.Group>\n            <Form.Control name=\"name\"\n                          type=\"text\"\n                          placeholder=\"Experimental group name\"\n                          value={name}\n                          onChange={this.onNameChange}/>\n          </Form.Group>\n        </Col>\n        <Col xs=\"8\">\n          <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n        </Col>\n        <Col xs=\"4\">\n          <Button className=\"btn-block\"\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}\n                  onClick={this.onAdd}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nimport {ignoreEventAnd} from \"../../../../../../utils/events\";\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport {isBlockingContextValid} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport class EditBlockingContextModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <EditBlockingContextModal show={this.state.show}\n                                  onClose={this.onCloseModal}\n                                  context={this.props.context}\n                                  onModelUpdate={this.props.onModelUpdate}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-edit\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass EditBlockingContextModal extends Component {\n\n  state = {\n    name: null,\n    color: null,\n    workerBlockedMessage: null\n  };\n\n  componentDidMount() {\n    this.resetInputFields();\n  }\n\n  resetInputFields = () => this.setState({...this.props.context});\n\n  onSave = () => {\n    this.updatePropsContext();\n    this.props.onClose();\n  };\n\n  updatePropsContext = () => {\n    const {name, color, workerBlockedMessage} = this.state;\n    const context = this.props.context;\n    context.name = name;\n    context.color = color;\n    context.workerBlockedMessage = workerBlockedMessage;\n    this.props.onModelUpdate();\n  };\n\n  onCancel = () => {\n    this.resetInputFields();\n    this.props.onClose();\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onColorChange = (color) => this.setState({color});\n\n  onWorkerBlockedMessageChange = (workerBlockedMessage) => {\n    this.setState({workerBlockedMessage});\n  };\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  render() {\n    const {name, color, workerBlockedMessage} = this.state;\n    // TODO: Handle disabled state\n    return (\n      <Modal show={this.props.show} size=\"xl\">\n        <Modal.Header>\n          Blocking context editor\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Row>\n            <Col xs=\"12\" sm=\"9\">\n              <Form.Group>\n                <Form.Control name=\"name\"\n                              type=\"text\"\n                              placeholder=\"Blocking context name\"\n                              value={name}\n                              onChange={this.onNameChange}/>\n              </Form.Group>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <RandomColorPicker color={color} onChange={this.onColorChange}/>\n            </Col>\n          </Form.Row>\n          <Row>\n            <Col>\n              <Editor onEditorChange={this.onWorkerBlockedMessageChange}\n                      initialValue={workerBlockedMessage}\n                      init={{menubar: false}}/>\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n          <Button className=\"confirm\"\n                  onClick={this.onSave}\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\nimport {EditBlockingContextModalAndButton} from \"./EditBlockingContextModalAndButton\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.props.onModelUpdate();\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const {disabled} = this.props;\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Experimental groups</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}\n                               onModelUpdate={this.props.onModelUpdate}\n                               disabled={disabled}/>\n\n        {\n          !disabled &&\n          <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n        }\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n\n  getBlockingContextsModel = () => this.props.model;\n\n  getContexts = () => this.getBlockingContextsModel().getContexts();\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const contexts = this.getContexts();\n    if (contexts.length <= 0) {\n      return this.renderNoBlockingContextsYet();\n    }\n\n    return this.renderTable();\n  }\n\n  renderNoBlockingContextsYet = () => (\n    <Form.Text className=\"text-muted\">\n      No experimental groups created yet in this workflow.\n    </Form.Text>\n  );\n\n  renderTable = () => (\n    <Table striped bordered hover size=\"sm\" className=\"blocking-contexts-table\">\n      <thead>\n      <tr>\n        <th/>\n        <th className=\"name-column\">Name</th>\n\n        {\n          /* actions column */\n          !this.isDisabled() &&\n          <th/>\n        }\n      </tr>\n      </thead>\n      <tbody>\n\n      {\n        this.getContexts().map(context => (\n          <BlockingContextsTableRow key={context.id}\n                                    context={context}\n                                    disabled={this.isDisabled()}\n                                    blockingContextsModel={this.getBlockingContextsModel()}\n                                    onModelUpdate={this.props.onModelUpdate}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nconst BlockingContextsTableRow = ({context, disabled, blockingContextsModel, onModelUpdate}) => (\n  <tr>\n    <td className=\"color-box-container\">\n      <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n    </td>\n    <td>{context.name}</td>\n    {\n      /* actions cell */\n      !disabled &&\n      <td className=\"actions-cell\">\n        <div className=\"actions\">\n\n          {/* edit */}\n          <EditBlockingContextModalAndButton context={context}\n                                             onModelUpdate={onModelUpdate}/>\n\n          {/* delete */}\n          <DeleteBlockingContextCell blockingContextsModel={blockingContextsModel}\n                                     context={context}\n                                     onModelUpdate={onModelUpdate}/>\n        </div>\n\n      </td>\n    }\n  </tr>\n);\n\n\nclass DeleteBlockingContextCell extends Component {\n\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.blockingContextsModel;\n\n  render() {\n    const {context} = this.props;\n    return (\n      <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n          If checked, workers will be able to work only on one experimental group of this workflow.\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Should workers participate in more than one experimental group?\"\n                      checked={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}\n                      disabled={this.props.disabled}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSingleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\nimport WorkflowBlockingCheckbox from \"./WorkflowBlockingCheckbox\";\n\nconst WorkflowBlockingSettings = ({graphModel, onModelUpdate, disabled}) => (\n  <ParameterContainerCard title=\"Experimental groups\">\n    <WorkflowBlockingCheckbox graphModel={graphModel}\n                              onModelUpdate={onModelUpdate}\n                              disabled={disabled}/>\n\n    <BlockingContextsCRUD graphModel={graphModel}\n                          onModelUpdate={onModelUpdate}\n                          disabled={disabled}/>\n  </ParameterContainerCard>\n);\n\nexport default WorkflowBlockingSettings;\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel, readOnly}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  const disabled = readOnly;\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={disabled}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}\n                                    disabled={disabled}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}\n                                readOnly={readOnly}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n\n    /**\n     * NOTE: When you'll implement the start block feature, take a look at how the start workflow is implemented\n     */\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         downloadNameFactory={(run, format) => `${blockModel.getLabel()} #${run.getRunId()}.${format}`}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}\n                         readOnly={this.props.readOnly}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow, disabled, readOnly}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={disabled}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={disabled}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block}\n                           runnableWorkflow={runnableWorkflow}\n                           disabled={disabled}\n                           readOnly={readOnly}/>\n      </div>\n    }\n  />\n);\n\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel(this);\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\nimport \"./WorkflowSaveBar.css\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed, saveError, disabled}) => {\n  const isValid = graphModel.isValid();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          disabled &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n\n        {\n          !disabled && saveError &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Error while saving the workflow\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || disabled}\n                     isLoading={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React from \"react\";\nimport {Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nimport \"./WorkflowInstructions.css\";\n\nexport default () => (\n  <OverlayTrigger\n    placement=\"bottom\"\n    overlay={\n      <Tooltip >\n        To remove a link hold <strong>shift</strong> and click the link with the right mouse button.\n      </Tooltip>\n    }\n  >\n    <Button className=\"instructions-trigger\"  variant=\"secondary\"><i className=\"far fa-question-circle\"/></Button>\n  </OverlayTrigger>\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\nimport WorkflowInstructions from \"./WorkflowInstructions\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  constructor(props) {\n    super(props);\n    const {runnableWorkflow} = this.props;\n    this.graphModel.workflowId = runnableWorkflow.getWorkflow().id;\n  }\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    this.graphModel.setLocked(this.isEditDisabled());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.onModelUpdated();\n  };\n\n  onModelUpdated = () => {\n    console.log(\"[WorkflowEditor] onModelUpdated()\");\n    this.onWorkflowEdited();\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onModelUpdated();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  isReadOnly = () => this.props.readOnly;\n\n  isEditDisabled = () => this.isReadOnly() || !this.props.runnableWorkflow.canBeEdited();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className={this.getStyleClasses()}\n                 id=\"workflow-editor\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            !this.isEditDisabled() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}\n              onModelUpdate={this.onModelUpdated}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n            <WorkflowInstructions/>\n\n            {\n              !this.isReadOnly() &&\n              <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                               graphModel={this.graphModel}\n                               onSavePressed={this.onSavePressed}\n                               isSaving={this.props.isSaving}\n                               saveError={this.props.saveError}\n                               disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={this.onModelUpdated}\n                                          runnableWorkflow={runnableWorkflow}\n                                          readOnly={this.isReadOnly()}\n                                          disabled={this.isEditDisabled()}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={this.onModelUpdated}\n                                 readOnly={this.isReadOnly()}\n                                 disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  getStyleClasses(){\n    const classes = ['full-width', 'workflow-editor-container'];\n    if (this.isReadOnly()) {\n      classes.push('read-only');\n    }\n    return classes.join(' ');\n  }\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <LoadingContainer loading={this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow}>\n        <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n      </LoadingContainer>\n    )\n  }\n}\n\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"../rest/WorkflowsService\";\nimport RunnableWorkflow from \"./models/RunnableWorkflow\";\nimport RunsService from \"../rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  WorkflowsService,\n  RunsService,\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      this.WorkflowsService.getWorkflow(workflowId),\n      this.RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await this.RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport {JSONtoWorkflow} from \"./WorkflowsService\";\n\n\nconst PUBLIC_WORKFLOWS_URL = `${API_URL}/public-workflows`;\n\n\nexport default {\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${PUBLIC_WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n}\n","import React, {Component} from 'react';\n\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport PublicWorkflowsService from \"../../../Services/rest/PublicWorkflowsService\";\nimport Runs from \"../../../Services/RunnableWorkflowService/models/Runs\";\n\nexport default class ReadOnlyWorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null\n  };\n\n  constructor (props) {\n    super(props);\n    this.initializeRunnableWorkflowService();\n  }\n\n  initializeRunnableWorkflowService () {\n    RunnableWorkflowService.WorkflowsService = PublicWorkflowsService;\n    // currently we don't support the view of runs when the workflow is viewed in public mode\n    RunnableWorkflowService.RunsService = {\n      getRunsOfWorkflow: () => new Runs([])\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      console.error(e);\n      redirectToProjectsList(this);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.getWorkflowIdFromUrl() !== this.getWorkflowIdFromSpecifiedProps(prevProps)) {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    }\n  }\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n    this.setState({runnableWorkflow: null});\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.getWorkflowIdFromSpecifiedProps(this.props);\n\n  getWorkflowIdFromSpecifiedProps = (props) => props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      readOnly/>;\n  }\n}\n","import React from 'react';\n\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport ReadOnlyWorkflowDashboard from \"./ReadOnlyWorkflowDashboard\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService/RunnableWorkflowService\";\nimport RunsService from \"../../../Services/rest/RunsService\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditableWorkflowDashboard extends ReadOnlyWorkflowDashboard {\n\n  constructor(props) {\n    super(props);\n    this.state.isSaving = false;\n    this.state.saveError = false;\n    this.initializeRunnableWorkflowService();\n  }\n\n  initializeRunnableWorkflowService () {\n    RunnableWorkflowService.WorkflowsService = WorkflowsService;\n    RunnableWorkflowService.RunsService = RunsService;\n  }\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditableWorkflowDashboard from \"./WorkflowDashboard/EditableWorkflowDashboard\";\nimport ReadOnlyWorkflowDashboard from \"./WorkflowDashboard/ReadOnlyWorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\nexport const PUBLIC_WORKFLOWS_PATH = \"/public-workflows\";\n\n\nexport const Workflows = () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditableWorkflowDashboard}/>\n  </Switch>\n);\n\nexport const PublicWorkflows = () => (\n  <Switch>\n    <Route path={`${PUBLIC_WORKFLOWS_PATH}/:id`} exact component={ReadOnlyWorkflowDashboard}/>\n  </Switch>\n);\n\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n  workflowId;\n\n  constructor(id, blockRuns, createdAt, workflowId) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n    this.workflowId = workflowId;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  getWorkflowId = () => this.workflowId;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../RunnableWorkflowService/models/Run\";\nimport BlockRun from \"../RunnableWorkflowService/models/BlockRun\";\nimport Runs from \"../RunnableWorkflowService/models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at, id_workflow}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at), id_workflow);\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRuns () {\n    return await this._getRuns(`${RUNS_URL}`);\n  },\n\n  async getRunsOfWorkflow(workflowId) {\n    return await this._getRuns(`${RUNS_URL}?workflowId=${workflowId}`);\n  },\n\n  async _getRuns(url) {\n    const jsonList = await getJSON(url);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n\n  getRunningRuns = () => this.runs.filter(run => run.isRunning());\n}\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\n\nimport AuthService from \"../../Services/AuthService\";\nimport {PROJECTS_PATH} from \"../Projects/Projects\";\nimport \"./Login.css\";\n\nexport const LOGIN_PATH = \"/login\";\n\nexport default class Login extends Component {\n\n  signInButtonRendered = false;\n\n  state = {\n    loggedIn: false\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return this.renderRedirect();\n    }\n    return this.renderLogin();\n  }\n\n  renderRedirect = () => (\n    <Redirect to={PROJECTS_PATH}/>\n  );\n\n  renderLogin = () => {\n    this.renderSignInButtonIfNeeded();\n    return (\n      <Container>\n        <Jumbotron style={{marginTop: '3em', textAlign: 'center'}}>\n          <h1>Welcome to Crowdhub</h1>\n          <p>\n            Please login with your Google account to continue\n          </p>\n          <div id=\"google-signin-button\"/>\n        </Jumbotron>\n      </Container>\n    );\n  };\n\n  renderSignInButtonIfNeeded = () => {\n    if (!this.signInButtonRendered) {\n      this.renderSignInButton();\n      this.signInButtonRendered = true;\n    }\n  };\n\n  renderSignInButton = () => setImmediate(() => {\n    AuthService.renderSignInButton('google-signin-button', this.onSignedIn)\n  });\n\n  onSignedIn = () => this.setState({loggedIn: true});\n}\n\n\n"],"sourceRoot":""}