{"version":3,"sources":["Services/RunnableWorkflowService/models/Runs.js","Components/common/BackButton.js","Services/rest/utils.js","config.js","Components/common/LoadingContainer.js","images/menu.svg","Services/rest/WorkflowsService.js","Services/AuthService.js","Components/common/Breadcrumbs.js","Components/common/LoadingButton.js","Components/common/DeleteButtonAndModal.js","Services/rest/UsersService.js","Services/rest/ProjectCollaborationsService.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/AddNewCollaboration.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/CollaborationsList.js","Components/Projects/ProjectsList/ShareProjectButtonAndModal/ShareProjectButtonAndModal.js","Components/Projects/ProjectsList/ProjectsTable.js","Components/Projects/ProjectsList/ProjectsList.js","Components/Projects/ProjectForm/ProjectForm.js","Components/Projects/CreateProject/CreateProject.js","Components/Workflows/WorkflowsList/CreateWorkflow/WorkflowForm.js","Components/Workflows/WorkflowsList/CreateWorkflow/CreateWorkflow.js","Components/Workflows/WorkflowsList/ShareWorkflowButtonAndModal.js","Components/Workflows/WorkflowsList/WorkflowsTable.js","Components/Workflows/WorkflowsList/EmbeddableWorkflowsList.js","Services/rest/ItemsService.js","Components/Items/ItemsView/ItemsImporter.js","Components/Items/ItemsView/ItemsTable.js","Components/Items/ItemsView/ItemsView.js","Components/Projects/ProjectView/ProjectView.js","Components/Projects/EditProject/EditProject.js","Components/Projects/Projects.js","Services/rest/ProjectsService.js","Services/rest/BlockTypeDefinitionsService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlackLinkFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/AbstractParameterModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Text.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Number.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Boolean.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/TextFromDropdown.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/HtmlModalEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Html/Html.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/ChoiceBuilder.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeFilePicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/CodeEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/Code/index.js","Components/utils/colors.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/BlockingContext/BlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/primitive.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoBlockCost.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DraggableDesignBlockTypeList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/CollapsableCard.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/ParametersEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/EditableDesignBlockList.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlockModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignEditor/DesignEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksEditorModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DesignBlocksModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/DoDesignModel.js","Services/rest/DoDesignTemplatesService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/PickDesignTemplateModal.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/DoDesign/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/index.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/ParametersEngine/parameters/serialization.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DefaultBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/widgets/DefaultBlockNodeWidget.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DefaultBlockNodeFactory.js","Services/RunnableWorkflowService/adapters/DoBlockRunAdapter.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/DoBlockNodeModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/nodeFactories.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/DoBlockNodeFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockPortModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/factories/BlockPortFactory.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEngine.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/WorkflowGraphEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/DraggableBlockTypeListSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/NameAndDescriptionFields.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/ResultDownloader.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/RunsControls/RunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/common/SidebarWithTitle.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/RandomColorPicker.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/BlockingContextsModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/CreateBlockingContext.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/EditBlockingContextModalAndButton.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/BlockingContextsCRUD.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingCheckbox.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowBlockingSettings/WorkflowBlockingSettings.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/WorkflowSidebar/WorkflowSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockLabel.js","Services/rest/CacheService.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockRunsControls.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/sidebars/BlockSidebar/BlockSidebar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowGraphEditor/models/WorkflowGraphModel.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowBreadcrumb.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowSaveBar.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowInstructions.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditor.js","Components/Workflows/WorkflowDashboard/WorkflowEditor/WorkflowEditorContainer.js","Services/RunnableWorkflowService/models/RunnableWorkflow.js","Services/RunnableWorkflowService/RunnableWorkflowService.js","Components/Workflows/WorkflowDashboard/ReadOnlyWorkflowDashboard.js","Components/Workflows/WorkflowDashboard/EditableWorkflowDashboard.js","Components/Workflows/Workflows.js","Components/Sidebar/Sidebar.js","Services/rest/AccountBalanceService.js","Components/Appbar/AccountInformation.js","Components/Appbar/AppBar.js","Components/AppRouter.js","Components/Layout.js","App.js","serviceWorker.js","index.js","Components/utils/events.js","Services/RunnableWorkflowService/models/Run.js","Services/rest/RunsService.js","Services/RunnableWorkflowService/models/BlockRun.js","Components/Projects/utils/route.js","Components/Login/Login.js"],"names":["Runs","runs","_this","this","Object","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","getLatestRun","containsRun","id","find","run","getId","getBlockRuns","blockId","map","getBlockRun","filter","blockRun","getFinishedRuns","isFinished","getRunningRuns","isRunning","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","__webpack_exports__","_ref","to","text","a","createElement","className","sendAndParseJSON","_callee","url","options","res","error","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","getOptionsWithAuthorizationHeadersIfSignedIn","fetch","sent","isResponseOk","Error","status","json","abrupt","stop","AuthService","isInitialized","isSignedIn","getOptionsWithAuthorizationHeaders","headers","Authorization","concat","getBearerToken","getJSON","_x3","_x4","_getJSON","apply","arguments","_callee2","_context2","postJSON","_x5","_x6","_postJSON","_callee3","data","_context3","method","Content-Type","body","JSON","stringify","putJSON","_x7","_x8","_putJSON","_callee4","_context4","sendDelete","_x9","_sendDelete","_callee5","_context5","makeCancellable","request","cancelled","result","Promise","resolve","reject","then","catch","err","cancel","d","WEBAPP_URL","API_URL","process","react_bootstrap__WEBPACK_IMPORTED_MODULE_0__","LoadingContainer","loading","children","animation","variant","module","exports","p","WORKFLOWS_URL","Errors","JSONtoWorkflow","id_project","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","projectId","parseInt","workflowToJSON","_ref2","name","description","graph","shared","getWorkflowsOfProject","_getWorkflowsOfProject","_home_simone_LocalCode_JS_servant_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","project","jsonList","_x","getWorkflow","_getWorkflow","workflow","_x2","createWorkflow","_createWorkflow","updateWorkflow","_updateWorkflow","console","log","info","t0","response","deleteWorkflow","_deleteWorkflow","saveAndStartWorkflow","_saveAndStartWorkflow","_callee6","_context6","startWorkflow","_startWorkflow","_callee7","_context7","estimateDoBlockCost","_estimateDoBlockCost","_callee8","workflowId","_context8","_authChangeListeners","auth2","init","_init","_waitForGapiToLoad","_loadAuth2Api","_notifyListeners","interval","setInterval","window","gapi","clearInterval","load","addOnAuthChangeListener","listener","push","renderSignInButton","containerId","onSignedIn","assertInitialized","signin2","render","onSuccess","forEach","get","signOut","_this2","currentUser","getAuthResponse","id_token","getUserInfo","getBasicProfile","LinkBreadcrumb","SimpleBreadcrumb","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","LoadingButton","isLoading","disabled","onClick","block","as","size","role","aria-hidden","DeleteButtonAndModal","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","show","onShowModal","setState","onCloseModal","inherits","createClass","key","value","react_default","DeleteButtonAndModal_DeleteModal","assign","onCancel","props","ignoreEventAnd","Component","DeleteModal","_Component2","_getPrototypeOf3","_len2","_key2","deleting","deleteError","onConfirmDeletion","asyncToGenerator","regenerator_default","onDeleting","serviceCall","onDeleted","onDeleteError","Modal","Header","header","Body","Alert","Footer","Button","USERS_URL","JSONtoUser","email","imageUrl","picture","USER_SUGGETION_MIN_EMAIL_LENGTH","UsersService","findUsersByEmail","_findUsersByEmail","getById","_getById","PROJECT_COLLABORATIONS_URL","JSONToProjectCollaboration","userId","id_user","ProjectCollaborationsService","getCollaborationsOfProject","_getCollaborationsOfProject","createCollaboration","_createCollaboration","jsonToSend","receivedJSON","deleteCollaboration","_deleteCollaboration","collaborationId","AddNewCollaboration","fetchSuggestions","input","fetchSuggestionsFromService","users","filterUserAlreadyCollaborating","collaboratorIds","getUserIdsOfCollaborators","user","ownerId","collaboratorId","getCollaborations","collaboration","collaborations","Form","Group","Label","AddNewCollaboration_AutocompleteField","renderSuggestion","AddNewCollaboration_SuggestedUser","onCollaborationAdded","onSuggestionSelected","onAddUser","SuggestedUser","isAdding","added","_this3$props","_this3","_this$state","_this$props","ListGroupItem","Row","Col","xs","alt","src","AutocompleteField","DEFAULT_TIMEOUT","timeout","suggestions","isFetching","onInputChange","_this4","isTimeoutRunning","cancelTimeout","startTimeout","clearTimeout","setTimeout","onTimeoutElapsed","suggestion","_this5","_this$state2","fetchError","Control","onChange","e","target","ListGroup","CollaborationsList","onCollaborationDeleted","CollaborationsList_Collaboration","Collaboration","isRemoving","componentDidMount","fetchUser","getUserId","onRemoveUser","getCollaborationId","_ref4","ShareProjectButtonAndModal","ShareProjectButtonAndModal_ShareProjectModal","onClose","ShareProjectModal","fetchCollaborations","getProject","toConsumableArray","index","findIndex","splice","AddNewCollaboration_AddNewCollaboration","ProjectsTable","projects","onProjectDeleted","Table","hover","ProjectsTable_ProjectsTableRow","ProjectsTableRow","openProjectLink","PROJECTS_PATH","Link","ShareProjectButtonAndModal_ShareProjectButtonAndModal_ShareProjectButtonAndModal","ProjectsTable_EditButton","ProjectsTable_DeleteProjectButton","EditButton","_ref3","editProjectLink","DeleteProjectButton","DeleteButtonAndModal_DeleteButtonAndModal","ProjectsService","deleteProject","Title","ProjectsList","fetchProjects","componentWillUnmount","pendingProjectsRequest","getProjects","Container","Breadcrumb","Breadcrumbs","ProjectsList_FetchProjectsError","ProjectsList_NoProjects","ProjectsTable_ProjectsTable","NoProjects","FetchProjectsError","ProjectForm","handleSubmit","values","formikBag","valuesToProjectData","onSubmit","projectDataToValues","projectDataFromProps","validationSchema","Yup","shape","required","formik_esm","initialValues","projectData","handleChange","handleBlur","touched","errors","isValid","isInvalid","noValidate","type","onBlur","placeholder","Feedback","rows","ButtonToolbar_default","BackButton","cancelButtonUrlDestination","cancelText","Button_default","submitText","CreateProject","creationError","handleProjectSubmission","setSubmitting","createProject","redirectToProjectsList","onProjectCreationFailed","history","CreateProject_ProjectCreationFailed","ProjectForm_ProjectForm_ProjectForm","ProjectCreationFailed","WorkflowForm","valuesToWorkflow","workflowToValues","workflowFromProps","es_ButtonToolbar","CreateWorkflowButton","showModal","showCreateWorkflowModal","onWorkflowCreated","hideCreateWorkflowModal","CreateWorkflow_CreateWorkflowModal","CreateWorkflowModal","createNewWorkflow","WorkflowsService","objectSpread","onWorkflowCreationError","CreateWorkflow_CreateWorkflowError","WorkflowForm_WorkflowForm","CreateWorkflowError","ShareWorkflowButtonAndModal","ShareWorkflowButtonAndModal_ShareWorkflowModal","ShareWorkflowModal","isSaving","saveError","fetchWorkflow","getWorkflowId","shareWorkflow","unshareWorkflow","onSave","onWorkflowSharedOrUnshared","prevProps","prevState","snapshot","ShareWorkflowButtonAndModal_SharingPreferenceControl","SharingPreferenceControl","publicLink","getPublicLink","Check","checked","label","href","rel","PUBLIC_WORKFLOWS_PATH","WorkflowsTable","workflows","onWorkflowDeleted","onWorkflowUpdated","WorkflowsTable_WorkflowsTableRow","WorkflowsTableRow","openWorkflowLink","WORKFLOWS_PATH","ShareWorkflowButtonAndModal_ShareWorkflowButtonAndModal","WorkflowsTable_DeleteWorkflowButton","DeleteWorkflowButton","EmbeddableWorkflowsList","fetchWorkflows","pendingWorkflowsRequest","promise","CreateWorkflow_CreateWorkflowButton","EmbeddableWorkflowsList_FetchingWorkflowsError","WorkflowsTable_WorkflowsTable","FetchingWorkflowsError","ITEMS_URL","JSONtoItem","created_at","Date","updated_at","deleted_ad","ItemsService","importFromCsvUrl","_importFromCsvUrl","csvUrl","fetchItemsByUrl","t1","items","_fetchItemsByUrl","getItemsOfProject","_getItemsOfProject","deleteItem","_deleteItem","item","ItemsImporter","event","onImport","onStartImport","onImportCompleted","onImportFailed","importing","importCompleted","importError","importedItems","importedItemsCount","onItemsImported","ItemsImporter_ImportItemsError","ItemsImporter_ImportItemsSuccess","count","InputGroup","FormControl","aria-label","Append","ItemsImporter_ImportingItems","ImportItemsError","ImportItemsSuccess","ImportingItems","ProgressBar","animated","now","ItemsTable","columnNames","getColumnNames","striped","bordered","ItemsTable_DeleteItemButton","onItemDeleted","keys","itemKeys","DeleteItemButton","ItemsView","fetchItems","pendingItemsRequest","indexOf","ItemsImporter_ItemsImporter","ItemsTable_ItemsTable","ProjectView","fetchProject","pendingProjectRequest","match","params","ProjectData","style","width","Tabs","defaultActiveKey","Tab","eventKey","title","EmbeddableWorkflowsList_EmbeddableWorkflowsList","ItemsView_ItemsView","EditProject","assertThisInitialized","updateProject","returnToProjectPage","onUpdateProjectFailed","updateError","EditProject_UpdateProjectError","FetchingProject","UpdateProjectError","Projects_Projects","Projects","Switch","Route","path","exact","component","PROJECTS_URL","INVALID_WORKFLOW_DATA","JSONtoProject","projectToJSON","job","_getProjects","_getProject","jsonJob","_createProject","_updateProject","INVALID_PROJECT_DATA","_deleteProject","BLOCK_TYPES_URL","JSONtoBlockTypeDefinition","displayName","ports","color","parameterDefinitions","BlockTypeDefinitionsService","getBlockTypeDefinitions","_getBlockTypeDefinitions","BlackLinkFactory","model","widget","selected","bem","strokeWidth","stroke","DefaultLinkFactory","AbstractParameterModel","definition","blockModel","deSerialize","initialParametersMap","getInitialParametersMap","setValue","getName","undefined","getValue","getDefinition","default","isOptional","isConditionMet","getCondition","condition","getParameterModelsMap","TextModel","Text","Widget","TextWidget","getModel","onModelUpdated","Model","parameters_Number","isRequired","isNaN","NumberWidget","Boolean","BooleanWidget","TextFromDropdownModel","getChoices","choice","choices","TextFromDropdown","onChangeValue","HtmlModalEditor","hideModal","ts","HtmlModel","Html","handleEditorChange","EditorComponent","getEditor","onEditorChange","initialValue","menubar","editorInModal","Editor","ChoiceBuilderModel","ChoiceBuilderWidget","onRemoveChoice","removeChoiceByIndex","onAddChoice","addChoice","ChoiceBuilder_ChoicesTable","ChoiceBuilder_AddChoice","ChoicesTable","AddChoice","isNewChoiceValid","md","lg","ChoiceBuilder","CodeFilePicker","content","files","onPickFile","file","readFileContent","t2","t3","reader","FileReader","addEventListener","readAsText","onFilePicked","Prepend","display","accept","multiple","readOnly","height","boxSizing","CodeEditorModalAndButton","code","onUpdateCode","CodeEditorModal_CodeEditorModal","CodeEditorModal","onCodeEdited","CodeFilePicker_CodeFilePicker","CodeEditorModal_CodeEditor","CodeEditor","lib_default","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CodeModel","Code","setCode","CodeEditorModal_CodeEditorModalAndButton","getCode","getRandomColor","rgbToHex","r","getRandomColorValue","g","b","Math","floor","random","toString","slice","isHexValid","hex","hexToRgb","exec","getTextColorVisibleOnBackground","getTextColorByBackgroundLuminance","getLuminance","luminance","BlockingContextParameterModel","setBlockingContextId","getBlockingContextId","isBlockingContextSelected","BlockingContextParameterWidget","getBlockingContextsModel","getBlockingContexts","getBlockingContextName","getBlockingContextById","onBlockingContextSelected","isDisabled","blockingContextsModel","Dropdown","renderToggle","BlockingContext_BlockingContextsDropdownMenu","contexts","getContexts","onContextSelected","Toggle","context","backgroundColor","border","BlockingContextsDropdownMenu","Menu","Item","BlockingContext_BlockingContext","PrimitiveParameters","parameters","parameter","mapParametersArrayToMap","Number","BlockingContext","DoBlockCostWidget","estimateCost","estimatedCost","estimationError","estimating","getBlockId","onCostEstimated","getEstimatedCost","getBlockModel","parent","setEstimatedCost","renderEstimatedCost","renderCostNeverEstimated","renderLatestEstimatedCost","toFixed","DraggableDesignBlockTypeList","componentsContainerRef","designBlockTypeDefinitions","ref","Card","data-block-type-definition","CollapsableCard","expanded","toggleExpansion","invalid","Collapse","in","ParametersEngine_ParametersEngine","parametrizedBlock","onParameterModelUpdate","parametersInCard","parameterModelsMap","getParameterDefinitionList","parameterDefinition","parameterComponent","Parameters","parameterModel","shouldDisplay","ParametersEngine_ParameterContainer","inCard","ParametersEngine_UnsupportedParameter","ParameterContainer","ParametersEngine_ParameterContainerCard","ParametersEngine_ParameterContainerLineSeparator","ParameterContainerCard","ParameterContainerLineSeparator","UnsupportedParameter","_ref5","EditableDesignBlockList","designBlocksModel","minHeight","getBlockModels","designBlockModel","EditableDesignBlockList_DesignBlockConfigurator","getDesignBlockTypeDefinitions","DesignBlockConfigurator","data-block-id","CollapsableCard_CollapsableCard","getDesignBlockTypeDefinition","DesignBlockModel","designBlockTypeDefinition","setDesignBlockTypeDefinition","initializeBlockIfNeeded","setParameterModelsMap","deSerializeParameters","serializeParameters","uuid","findSiblingIndex","sibling","siblingsContainer","i","DesignEditor","blockTypesRef","blocksRef","drake","setupDragula","blockTypes","current","blocks","containers","Dragula","copy","el","source","accepts","removeOnSpill","on","element","siblingIndex","onBlockAdded","onBlockSorted","container","appendChild","getAttribute","removeBlockById","nextSiblingIndex","assertNextSiblingIndexIsValidGivenInitialBlocks","newBlockIndex","getNewBlockIndexGivenNextSiblingIndex","newBlock","buildNewBlockDataGivenClonedElement","addBlockDataToTheDesignAndNotify","parentNode","removeChild","nextSibling","parse","addBlock","forceUpdate","blockAIndex","getMovedBlockIndex","blockBIndex","getBlockIndexGivenNextSiblingIndex","swapBlocks","getBlocks","React","createRef","DesignEditor_DraggableDesignBlockTypeList","DesignEditor_EditableDesignBlockList","DesignBlocksEditorModalAndButton","setBlocksModel","designBlocksClonedModel","cloneDesignBlocksModel","templateJustPicked","designModel","getBlocksModel","clone","DesignBlocksEditorModal_DesignBlocksEditorModal","buttonText","DesignBlocksEditorModal","DesignEditor_DesignEditor","DesignBlocksModel","setDesignBlockTypeDefinitions","setBlockModels","designBlockType","blockModels","serialize","designBlock","temp","DoDesignModel","_AbstractParameterMod","prototype","getDesign","blocksModel","isDesignEmpty","DO_DESIGN_TEMPLATE_URL","JSONtoDoDesignTemplate","DoDesignTemplatesService","getDoDesignTemplates","_getDoDesignTemplates","HIDE_ANIMATION_DURATION","PickDesignTemplateModalAndButton","onShow","onHide","afterHided","onDesignBlocksModelPicked","getDesignModel","PickDesignTemplateModal_PickDesignTemplateModal","PickDesignTemplateModal","templates","fetchTemplates","pendingTemplatesRequest","onTemplatePicked","template","PickDesignTemplateModal_FetchTemplatesError","PickDesignTemplateModal_FetchingTemplates","PickDesignTemplateModal_TemplateList","FetchTemplatesError","FetchingTemplates","TemplateList","sm","DoDesign","onModelUpdatedFromTemplate","onModelUpdatedFromEditor","PickDesignTemplateModal_PickDesignTemplateModalAndButton","DesignBlocksEditorModal_DesignBlocksEditorModalAndButton","defineProperty","getModelByType","DefaultBlockNodeModel","_DefaultNodeModel","blockRuns","_runs","getLabel","setId","setLabel","blockTypeDefinition","latestBlockRun","wasStarted","isFailed","getRunnableBlocksCount","getAllParentBlocks","getRunningBlocksCount","getFinishedBlocksCount","canStart","canBeEdited","getParentBlocks","getPort","getLinks","link","getSourcePort","getNode","engine","initializeBlockWithIds","getBlockTypeDefinition","getNextBlockLabel","port","getPorts","DefaultNodeModel","parents","blockParents","DefaultBlockNodeWidget","_DefaultNodeWidget","node","getColor","main","Spinner","DefaultNodeWidget","DefaultBlockNodeFactory","_DefaultNodeFactory","blockType","setBlockType","getBlockType","diagramEngine","DefaultNodeFactory","FAILED","RunStates","RUNNING","FINISHED","NOT_STARTED","DoBlockRunAdapter","getRunId","publishRun","getCacheId","getState","waitRun","_getBlockRunOrNotStarted","DoBlockNodeModel","_DefaultBlockNodeMode","adaptRuns","blockingContextModel","getBlockingContextModelParameter","nodeFactories","_DefaultBlockNodeFact","DoBlockNodeFactory","factories_nodeFactories","Factory","supportsBlockType","BlockPortModel","linkWouldCreateRecursiveDependence","blockDependsOnItself","getBlock","getLinksAsList","sourcePort","targetPort","visitedBlockIds","connectedBlocks","getConnectedBlocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","connectedBlock","return","DefaultPortModel","BlockPortFactory","initialConfig","DefaultPortFactory","WorkflowGraphEngine","_DiagramEngine","blockTypeDefinitions","setBlockTypeDefinitions","registerFactories","registerLinkFactory","registerPortFactory","registerLabelFactory","DefaultLabelFactory","registerNodeFactories","registerNodeFactory","getDiagramModel","DiagramEngine","WorkflowGraphEditor","deserializationError","initGraph","setDiagramModel","deserializeGraph","deSerializeDiagram","addSelectedListenerToNodesOfModel","getNodes","addSelectedListener","onDrop","isEventCausedByADroppedBlockType","onBlockTypeDropped","getBlockTypeDefinitionFromEvent","position","getMousePosition","createNodeFromDroppedBlockType","dataTransfer","getData","getRelativeMousePoint","createNodeFromBlockType","addNodeToGraph","getNodeFactory","getNewInstance","x","y","addNode","onModelUpdate","addListener","selectionChanged","onSelectedNodeChanged","entityRemoved","selectedNodes","getSelectedNodes","onBlockSelected","getSelectedItems","graphModel","initialGraph","WorkflowGraphEditor_GraphDeserializationError","onDragOver","preventDefault","GraphDeserializationError","DraggableBlockTypeListSidebar","draggable","onDragStart","setData","NameAndDescriptionFields","onChangeName","onChangeDescription","onEdit","_props$workflow","DownloadFormats","ResultDownloader","downloadFormat","onChangeDownloadFormat","runnable","downloadLinkFactory","ResultDownloader_NoResultsMessage","selectedFormat","latestFinishedRun","ButtonToolbar","ToggleButtonGroup","defaultValue","format","ToggleButton","toUpperCase","ButtonGroup","ResultDownloader_LatestDownloadButton","isLatest","split","ResultDownloader_DropdownDownload","NoResultsMessage","LatestDownloadButton","DropdownDownload","RunsControls_RunsControls","RunsControls_ExecutionCard","RunsControls_ResultsCard","ExecutionCard","onStart","isStarting","startText","RunsControls_RunsProgressBar","ResultsCard","ResultDownloader_ResultDownloader","RunsProgressBar","finishedPercentage","ceil","runningPercentage","max","WorkflowRunsControls","startError","startedRunId","waitForRunStateReceived","runnableWorkflow","addRunsListener","getRuns","removeRunsListener","RunsService","getDownloadLink","common_SidebarWithTitle","center","RandomColorPicker","pickRandomColor","userText","borderColor","aria-describedby","DEFAULT_WORKER_BLOCKED_MESSAGE","BlockingContextsModel","_enableContextForAllDoBlocks","getBlockingContextModelsOfDoBlocks","getDoBlockModels","_disableContextForAllDoBlocks","isSingleBlockingContextEnabledForAllDoBlocks","onlyOneContext","getBlocksArray","blocksWithEnabledBlockingContext","areSomeBlockingContextsEnabled","setContexts","toRemove","removeAllBlockingContexts","getDefaultContext","addContext","removeContext","workerBlockedMessage","isBlockingContextValid","CreateBlockingContext","togglePopoverButton","popoverContent","showPopover","registerListenerToClosePopoverWhenUserClicksOutside","clickListenerToClosePopoverWhenUserClicksOutside","composedPath","hidePopover","onCreated","onAdd","unregisterListenerToClosePopoverWhenUserClicksOutside","document","removeEventListener","Overlay","placement","getElementById","Popover","CreateBlockingContext_CreateBlockingContextPopover","CreateBlockingContextPopover","onNameChange","onChangeColor","getBlockingContextFromState","RandomColorPicker_RandomColorPicker","EditBlockingContextModalAndButton","EditBlockingContextModalAndButton_EditBlockingContextModal","EditBlockingContextModal","resetInputFields","updatePropsContext","_this2$state","onColorChange","onWorkerBlockedMessageChange","BlockingContextsCRUD","onAddBlockingContext","BlockingContextsCRUD_BlockingContextsTable","CreateBlockingContext_CreateBlockingContext","BlockingContextsTable","renderNoBlockingContextsYet","renderTable","BlockingContextsCRUD_BlockingContextsTableRow","BlockingContextsTableRow","EditBlockingContextModalAndButton_EditBlockingContextModalAndButton","BlockingContextsCRUD_DeleteBlockingContextCell","DeleteBlockingContextCell","onRemoveContext","WorkflowBlockingCheckbox","checkboxRef","isIndeterminate","mutateToSingleBlockingContextForAllDoBlocks","renderCheckboxIndeterminateState","checkbox","indeterminate","WorkflowBlockingSettings","WorkflowBlockingCheckbox_WorkflowBlockingCheckbox","BlockingContextsCRUD_BlockingContextsCRUD","WorkflowSidebar","NameAndDescriptionFields_NameAndDescriptionFields","WorkflowSidebar_WorkflowBlockingSettings_WorkflowBlockingSettings","WorkflowRunsControls_WorkflowRunsControls","BlockLabel","componentDidUpdate","getGraphModel","isNewLabelValid","replaceLabel","CACHE_URL","CacheService","cacheId","BlockRunsControls","BlockSidebar_BlockSidebar","onKeyUp","stopPropagation","BlockLabel_BlockLabel","BlockRunsControls_BlockRunsControls","WorkflowGraphModel","blockingContexts","blockWithSameLabel","getBlockByLabelOrNull","setRuns","DiagramModel","WorkflowBreadcrumb","projectName","fetchProjectName","_this$props$workflow","WorkflowSaveBar","onSavePressed","Navbar","WorkflowEditor_WorkflowInstructions","OverlayTrigger","overlay","Tooltip","WorkflowEditor","selectedBlock","onRunsUpdate","setLocked","isEditDisabled","onWorkflowEdited","serializeDiagram","isReadOnly","sidebars_DraggableBlockTypeListSidebar","WorkflowGraphEditor_WorkflowGraphEditor_WorkflowGraphEditor","WorkflowBreadcrumb_WorkflowBreadcrumb","WorkflowSaveBar_WorkflowSaveBar","WorkflowEditorContainer","fetchingBlockTypeDefinitions","fetchBlockTypesError","fetchBlockTypes","blockTypesRequest","BlockTypesDefinitionService","WorkflowEditor_WorkflowEditor_WorkflowEditor","RunnableWorkflow","runsListeners","setWorkflow","notifyRunsListeners","nodes","getRunningBlockRuns","getFinishedBlockRuns","RunnableWorkflowService","pollInterval","getRunnableWorkflow","_getRunnableWorkflow","all","getRunsOfWorkflow","slicedToArray","startWatchingRunsStatus","stopWatchRunsStatus","ReadOnlyWorkflowDashboard","fetchRunnableWorkflow","getWorkflowIdFromUrl","getWorkflowIdFromSpecifiedProps","runnableWorkflowRequest","WorkflowEditorContainer_WorkflowEditorContainer","EditableWorkflowDashboard","Workflows_Workflows","Workflows_PublicWorkflows","Workflows","PublicWorkflows","Sidebar","fetchRuns","sidebarOpen","NavLink","Sidebar_LatestFinishedRunsList","Sidebar_RunningRunsList","LatestFinishedRunsList","Sidebar_JobsList","RunningRunsList","JobsList","ACCOUNT_BALANCE_URL","JSONtoBalances","AccountBalanceService","_cachedBalance","getBalances","_getBalances","balances","_isBalancesCached","_getCachedBalance","_cacheBalances","AccountInformation","trigger","AccountInformation_AccountInformationPopoverContent","AccountInformation_AccountInformationPreview","AccountInformationPreview","userInfo","getImageUrl","AccountInformationPopoverContent","_Component3","AccountInformation_PlatformBalances","AccountInformation_LogoutButton","PlatformBalances","_Component4","fetchBalances","pendingBalancesRequest","renderBalances","_this$state$balances","tolokaSandbox","tolokaNormal","f8","prepareNumber","balance","LogoutButton","loggingOut","loggedOut","onLogout","renderRedirect","Redirect","LOGIN_PATH","AppBar","expand","onToggleSidebar","menu","AccountInformation_AccountInformation","AuthenticatedAppRouter","authServiceInitialized","initAuthService","renderRouter","renderInitializingAuthService","AppRouter_AppRouter","AppRouter","AppRouter_PrivateRoute","AppRouter_NotLoggedInRoute","Login","PrivateRoute","NotLoggedInRoute","Layout","previousState","showSidebarAndAppBar","HashRouter","Sidebar_Sidebar_Sidebar","flexDirection","AppBar_AppBar","AppRouter_AuthenticatedAppRouter","tinymce","selector","plugins","App","Layout_Layout","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","callback","Run","createdAt","getCreatedAt","getFailedBlockRuns","RUNS_URL","JSONtoRun","id_workflow","BlockRun","id_cache","runsComparator","_getRuns","_getRunsOfWorkflow","_getRuns2","sort","freeze","runId","_Projects__WEBPACK_IMPORTED_MODULE_0__","signInButtonRendered","loggedIn","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","renderLogin","renderSignInButtonIfNeeded","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","marginTop","textAlign","setImmediate"],"mappings":"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","file":"static/js/main.6a8941ec.chunk.js","sourcesContent":["export default class Runs {\n\n  runs;\n\n  constructor(runs) {\n    this.runs = runs;\n  }\n\n  getLatestRun = () => this.runs[0];\n\n  containsRun = (id) => this.runs.find(run => run.getId() === id) != null;\n\n  getBlockRuns = (blockId) => this.runs.map(run => run.getBlockRun(blockId)).filter(blockRun => !!blockRun);\n\n  getFinishedRuns = () => this.runs.filter(run => run.isFinished());\n\n  getRunningRuns = () => this.runs.filter(run => run.isRunning());\n}\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"./BackButton.css\";\n\nexport default ({to, text}) => (\n  <Link to={to} className=\"btn btn-outline-primary back-button\">\n    <i className=\"fas fa-arrow-left\"/> {text}\n  </Link>\n);\n","import AuthService from \"../AuthService\";\n\nasync function sendAndParseJSON(url, options) {\n  options = getOptionsWithAuthorizationHeadersIfSignedIn(options);\n  const res = await fetch(url, options);\n\n\n  if (!isResponseOk(res)) {\n    const error = new Error('HTTP response code not 200');\n    error.status = res.status;\n    throw error;\n  }\n\n  return await res.json();\n}\n\nconst getOptionsWithAuthorizationHeadersIfSignedIn = (options) => {\n  if (!AuthService.isInitialized() || !AuthService.isSignedIn()) {\n    return options;\n  }\n  return getOptionsWithAuthorizationHeaders(options);\n};\n\nconst getOptionsWithAuthorizationHeaders = (options) => {\n  options = options || {};\n  options.headers = options.headers || {};\n  options.headers.Authorization = `Bearer ${AuthService.getBearerToken()}`\n  return options;\n};\n\nexport const isResponseOk = (res) => res.status >= 200 && res.status <= 299;\n\nexport async function getJSON(url, options) {\n  return await sendAndParseJSON(url, options);\n}\n\nexport async function postJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function putJSON(url, data) {\n  return await sendAndParseJSON(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport async function sendDelete(url) {\n  return await sendAndParseJSON(url, {\n    method: 'DELETE'\n  });\n}\n\n\nexport function makeCancellable(request) {\n  let cancelled = false;\n  return {\n    result: new Promise((resolve, reject) => {\n      request\n        .then(res => {\n          if (!cancelled) {\n            resolve(res);\n          }\n        })\n        .catch(err => {\n          if (!cancelled) {\n            reject(err);\n          }\n        })\n    }),\n    cancel: () => cancelled = true\n  }\n}\n","export const WEBAPP_URL = process.env.REACT_APP_WEBAPP_URL || \"http://localhost:4000\";\nexport const API_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\";\n","import {Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingContainer = ({loading, children}) => {\n  if (loading) {\n    return (\n      <div className=\"loading-spinner-container\">\n        <Spinner animation=\"border\" variant=\"primary\"/>\n      </div>\n    );\n  }\n  return children;\n};\n\n\nexport default LoadingContainer;\n","module.exports = __webpack_public_path__ + \"static/media/menu.7d88ba55.svg\";","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst WORKFLOWS_URL = `${API_URL}/workflows`;\n\nexport const Errors = {\n  INVALID_WORKFLOW_DATA: 'invalid_workflow_data'\n};\n\nconst JSONtoWorkflow = ({id, id_project, data}) => ({\n  id,\n  projectId: parseInt(id_project),\n  ...data\n});\n\n\nconst workflowToJSON = ({id, projectId, name, description, graph, shared}) => ({\n  id,\n  id_project: projectId,\n  data: {\n    name,\n    description,\n    graph,\n    shared\n  }\n});\n\n\nexport default {\n  async getWorkflowsOfProject(project) {\n    const jsonList = await getJSON(`${WORKFLOWS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoWorkflow);\n  },\n\n  async getWorkflow(id) {\n    const workflow = await getJSON(`${WORKFLOWS_URL}/${id}`);\n    return JSONtoWorkflow(workflow);\n  },\n\n  async createWorkflow(workflow) {\n    const json = workflowToJSON(workflow);\n    return await postJSON(WORKFLOWS_URL, json);\n  },\n\n  async updateWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] updateWorkflow()\");\n    try {\n      const json = workflowToJSON(workflow);\n      console.info('[WorkflowService] updateWorkflow', json);\n      return await putJSON(`${WORKFLOWS_URL}/${workflow.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_WORKFLOW_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n\n  async deleteWorkflow(workflow) {\n    return await sendDelete(`${WORKFLOWS_URL}/${workflow.id}`);\n  },\n\n  async saveAndStartWorkflow (workflow) {\n    console.log(\"[WorkflowsSerivice] saveAndStartWorkflow()\");\n    await this.updateWorkflow(workflow);\n    return await this.startWorkflow(workflow);\n  },\n\n  async startWorkflow(workflow) {\n    console.log(\"[WorkflowsSerivice] startWorkflow()\");\n    return await postJSON(`${WORKFLOWS_URL}/${workflow.id}/start`);\n  },\n\n  async estimateDoBlockCost (workflowId, blockId) {\n    return await postJSON(`${WORKFLOWS_URL}/${workflowId}/${blockId}/estimated-cost`);\n  }\n}\n","/* global gapi */\n\n/**\n * AuthService uses the Google Platform Library to authenticate users. This library is loaded from a script specified in\n * the index.html, where you can also find the client id.\n * Since the script exposes a global object gapi at an unknown time, this Service need to be initialized.\n * The initialization process will periodically check if the library is loaded until it can find the gapi global object\n */\nconst AuthService = {\n\n  _authChangeListeners: [],\n  auth2: null,\n\n  async init() {\n    await this._waitForGapiToLoad();\n    this.auth2 = await this._loadAuth2Api();\n    this._notifyListeners();\n  },\n\n  /**\n   * Wait until the Google Platform Library exposes the gapi global object\n   * @returns {Promise<any>}\n   * @private\n   */\n  _waitForGapiToLoad() {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (window.gapi) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n  },\n\n  /**\n   * Request to the Google Platform Library to load the auth2 module\n   * @returns {Promise<any>}\n   * @private\n   */\n  _loadAuth2Api() {\n    return new Promise(resolve => {\n      gapi.load('auth2', function () {\n        const auth2 = gapi.auth2.init();\n        resolve(auth2);\n      });\n    });\n  },\n\n  addOnAuthChangeListener(listener) {\n    this._authChangeListeners.push(listener);\n  },\n\n  renderSignInButton(containerId, onSignedIn) {\n    this.assertInitialized();\n    gapi.signin2.render(containerId, {\n      onSuccess: () => {\n        onSignedIn();\n        this._notifyListeners();\n      }\n    });\n  },\n\n  _notifyListeners() {\n    this._authChangeListeners.forEach(listener => listener())\n  },\n\n  isInitialized() {\n    return !!this.auth2;\n  },\n\n  isSignedIn() {\n    this.assertInitialized();\n    return this.auth2.isSignedIn.get();\n  },\n\n  signOut() {\n    this.assertInitialized();\n    return new Promise(resolve => this.auth2.signOut().then(() => {\n      resolve();\n      this._notifyListeners();\n    }));\n  },\n\n  getBearerToken () {\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getAuthResponse().id_token;\n  },\n\n  getUserInfo(){\n    this.assertInitialized();\n    return this.auth2.currentUser.get().getBasicProfile();\n  },\n\n  assertInitialized () {\n    if(!this.isInitialized()) {\n      throw new Error('AuthService not initialized');\n    }\n  }\n\n};\n\nexport default AuthService;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport const LinkBreadcrumb = ({to, children}) => (\n  <li className=\"breadcrumb-item\">\n    <Link to={to}>{children}</Link>\n  </li>\n);\n\nexport const SimpleBreadcrumb = ({children}) => (<li className=\"breadcrumb-item\">{ children }</li>);\n","import {Button, Spinner} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoadingButton = ({isLoading, disabled, onClick, children, block, variant}) => (\n  <Button disabled={disabled || isLoading}\n          onClick={onClick}\n          className={block ? 'btn-block' : ''}\n          variant={variant || 'primary'}>\n    {\n      isLoading &&\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    }\n    <span> {children}</span>\n  </Button>\n);\n\nexport default LoadingButton;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {ignoreEventAnd} from \"../utils/events\";\nimport LoadingButton from \"./LoadingButton\";\n\n\nexport class DeleteButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <DeleteModal show={this.state.show} onCancel={this.onCloseModal} {...this.props}/>\n\n        <a className=\"icon-button delete\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-trash-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class DeleteModal extends Component {\n\n  state = {\n    deleting: false,\n    deleteError: false\n  };\n\n  onCancel = () => this.props.onCancel();\n\n  onConfirmDeletion = async () => {\n    this.onDeleting();\n    try {\n      await this.props.serviceCall();\n      this.onDeleted();\n    } catch (e) {\n      this.onDeleteError();\n    }\n  };\n\n  onDeleting = () => this.setState({\n    deleting: true,\n    deleteError: false\n  });\n\n  onDeleteError = () => this.setState({\n    deleting: false,\n    deleteError: true\n  });\n\n  onDeleted = () => {\n    this.setState({\n      deleting: false,\n      deleteError: false\n    });\n    this.props.onDeleted();\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          {this.props.header}\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            /* Deletion error */\n            this.state.deleteError &&\n            <Alert variant=\"danger\">\n              There's been an error with the deleting request.\n            </Alert>\n          }\n\n          {this.props.body}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={this.state.deleting}>Cancel</Button>\n          <LoadingButton variant=\"danger\"\n                         className=\"confirm\"\n                         onClick={this.onConfirmDeletion}\n                         isLoading={this.state.deleting}>Delete</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst USERS_URL = `${API_URL}/users`;\n\nconst JSONtoUser = ({id, data}) => ({\n  id,\n  email: data.email,\n  imageUrl: data.picture\n});\n\nexport const USER_SUGGETION_MIN_EMAIL_LENGTH = 4;\n\nexport default {\n  async findUsersByEmail(email) {\n    const jsonList = await getJSON(`${USERS_URL}?email=${email}`);\n    return jsonList.map(JSONtoUser);\n  },\n\n  async getById(id) {\n    const json = await getJSON(`${USERS_URL}/${id}`);\n    return JSONtoUser(json);\n  }\n};\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\nconst PROJECT_COLLABORATIONS_URL = `${API_URL}/project-collaborations`;\n\nconst JSONToProjectCollaboration = ({id, id_project, id_user}) => ({\n  id,\n  projectId: id_project,\n  userId: id_user\n});\n\nexport const ProjectCollaborationToJSON = ({id, projectId, userId}) => ({\n  id,\n  projectId,\n  userId\n});\n\nexport default {\n  async getCollaborationsOfProject(projectId) {\n    const jsonList = await getJSON(`${PROJECT_COLLABORATIONS_URL}?projectId=${projectId}`);\n    return jsonList.map(JSONToProjectCollaboration);\n  },\n\n  async createCollaboration(projectId, userId) {\n    const jsonToSend = ProjectCollaborationToJSON({projectId, userId});\n    const receivedJSON = await postJSON(PROJECT_COLLABORATIONS_URL, jsonToSend);\n    return JSONToProjectCollaboration(receivedJSON);\n  },\n\n  async deleteCollaboration(collaborationId) {\n    await sendDelete(`${PROJECT_COLLABORATIONS_URL}/${collaborationId}`);\n  }\n};\n\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\nimport UsersService, {USER_SUGGETION_MIN_EMAIL_LENGTH} from \"../../../../Services/rest/UsersService\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\n\nexport default class AddNewCollaboration extends Component {\n\n  state = {};\n\n  fetchSuggestions = async (input) => {\n    if (input.length >= USER_SUGGETION_MIN_EMAIL_LENGTH) {\n      return await this.fetchSuggestionsFromService(input);\n    }\n    return [];\n  };\n\n  fetchSuggestionsFromService = async (input) => {\n    const users = await UsersService.findUsersByEmail(input);\n    return this.filterUserAlreadyCollaborating(users);\n  };\n\n  filterUserAlreadyCollaborating = (users) => {\n    const collaboratorIds = this.getUserIdsOfCollaborators();\n    return users\n      .filter(user => this.props.project.ownerId !== user.id)\n      .filter(user => collaboratorIds.find(collaboratorId => collaboratorId === user.id) == null);\n  };\n\n  getUserIdsOfCollaborators = () => this.getCollaborations().map(collaboration => collaboration.userId);\n\n  getCollaborations = () => this.props.collaborations;\n\n  render() {\n    const {project} = this.props;\n    return (\n      <div>\n        <h4>Add a new collaboration</h4>\n        <Form.Group>\n          <Form.Label>User email</Form.Label>\n          <AutocompleteField\n            fetchSuggestions={this.fetchSuggestions}\n            renderSuggestion={user => <SuggestedUser key={user.id}\n                                                     {...user}\n                                                     projectId={project.id}\n                                                     onCollaborationAdded={this.props.onCollaborationAdded}/>}\n            onSuggestionSelected={this.onAddUser}\n          />\n        </Form.Group>\n      </div>\n    );\n  }\n}\n\nclass SuggestedUser extends Component {\n\n  state = {\n    isAdding: false,\n    added: false\n  };\n\n  onAddUser = async () => {\n    const {projectId, id: userId} = this.props;\n    this.setState({isAdding: true});\n    try {\n      const collaboration = await ProjectCollaborationsService.createCollaboration(projectId, userId);\n      this.props.onCollaborationAdded(collaboration);\n      this.setState({added: true});\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isAdding: false});\n  };\n\n  render() {\n    const {isAdding, added} = this.state;\n    const {email, imageUrl} = this.props;\n    return (\n      <ListGroupItem className=\"collaborator-row\">\n        <Row>\n          <Col xs={2}>\n            <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n          </Col>\n          <Col xs={7}>{email}</Col>\n          <Col xs={3} className=\"action\">\n            {\n              added ?\n                <Button className=\"btn-block\" disabled variant=\"success\">Added</Button> :\n                <LoadingButton block isLoading={isAdding} onClick={this.onAddUser}>Add</LoadingButton>\n            }\n          </Col>\n        </Row>\n      </ListGroupItem>\n    )\n  }\n}\n\nclass AutocompleteField extends Component {\n\n  DEFAULT_TIMEOUT = 300;\n\n  timeout = null;\n\n  state = {\n    suggestions: [],\n    isFetching: false,\n\n    value: '',\n  };\n\n  onInputChange = (input) => {\n    this.setState({value: input});\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.startTimeout(input);\n  };\n\n  isTimeoutRunning = () => this.timeout !== null;\n\n  cancelTimeout = () => {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n  };\n\n  startTimeout = (input) => this.timeout = setTimeout(\n    () => this.onTimeoutElapsed(input),\n    this.DEFAULT_TIMEOUT\n  );\n\n  onTimeoutElapsed = async (input) => {\n    this.setState({isFetching: true});\n    try {\n      const suggestions = await this.props.fetchSuggestions(input);\n      this.setState({suggestions, isFetching: false});\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  onSuggestionSelected = (suggestion) => {\n    if (this.isTimeoutRunning()) {\n      this.cancelTimeout();\n    }\n    this.setState({\n      value: '',\n      suggestions: [],\n      isFetching: false\n    });\n    this.props.onSuggestionSelected(suggestion);\n  };\n\n  render() {\n    const {value, suggestions, isFetching, fetchError} = this.state;\n    const {renderSuggestion} = this.props;\n    return (\n      <div>\n        <Form.Control\n          className=\"mb-2\"\n          value={value}\n          onChange={(e) => this.onInputChange(e.target.value)}/>\n\n\n        <LoadingContainer loading={isFetching}>\n          {\n            fetchError &&\n            <span>Can't suggest users</span>\n          }\n\n          <ListGroup>\n            {\n              !fetchError &&\n              suggestions.map(renderSuggestion)\n            }\n          </ListGroup>\n        </LoadingContainer>\n      </div>\n    );\n  }\n}\n\n","import React, {Component} from \"react\";\nimport {Col, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\n\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport UsersService from \"../../../../Services/rest/UsersService\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\n\n\nexport default ({collaborations, onCollaborationDeleted}) => (\n  <div>\n    <h4>Collaborations</h4>\n    <ListGroup>\n      {\n        collaborations.length <= 0 &&\n        <span>No collaborations</span>\n      }\n      {\n        collaborations.length > 0 && collaborations.map(collaboration => (\n          <Collaboration key={collaboration.id} {...collaboration} onCollaborationDeleted={onCollaborationDeleted}/>\n        ))\n      }\n    </ListGroup>\n  </div>\n);\n\nclass Collaboration extends Component {\n\n  state = {\n    isFetching: false,\n    user: null,\n\n    isRemoving: false\n  };\n\n  componentDidMount = () => this.fetchUser();\n\n  fetchUser = async () => {\n    this.setState({isFetching: true});\n    try {\n      const user = await UsersService.getById(this.getUserId());\n      this.setState({user});\n    } catch (e) {\n      console.log(e);\n      // TODO: Handle error\n    }\n    this.setState({isFetching: false});\n  };\n\n  getUserId = () => this.props.userId;\n\n  onRemoveUser = async () => {\n    this.setState({isRemoving: true});\n    try {\n      const id = this.getCollaborationId();\n      await ProjectCollaborationsService.deleteCollaboration(id);\n      this.props.onCollaborationDeleted(id);\n    } catch (e) {\n      // TODO: Handle error\n    }\n    this.setState({isRemoving: false})\n  };\n\n  getCollaborationId = () => this.props.id;\n\n  render() {\n    const {isRemoving, isFetching, user} = this.state;\n    const {email, imageUrl} = user || {};\n    return (\n      (\n        <ListGroupItem className=\"collaborator-row\">\n          <LoadingContainer loading={isFetching}>\n            <Row>\n              <Col xs={2}>\n                <img alt=\"user avatar\" className=\"user-avatar\" src={imageUrl}/>\n              </Col>\n              <Col xs={7}>{email}</Col>\n              <Col xs={3} className=\"action\">\n                <LoadingButton isLoading={isRemoving} onClick={this.onRemoveUser}\n                               variant=\"danger\">Remove</LoadingButton>\n              </Col>\n            </Row>\n          </LoadingContainer>\n        </ListGroupItem>\n      )\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Alert, Button, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../../utils/events\";\nimport AddNewCollaboration from \"./AddNewCollaboration\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\nimport ProjectCollaborationsService from \"../../../../Services/rest/ProjectCollaborationsService\";\nimport CollaborationsList from \"./CollaborationsList\";\nimport \"./ShareProjectButtonAndModal.css\";\n\nexport default class ShareProjectButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareProjectModal show={this.state.show}\n                           onClose={this.onCloseModal}\n                           {...this.props}/>\n\n          <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass ShareProjectModal extends Component {\n\n  state = {\n    collaborations: null,\n    isFetching: false,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchCollaborations();\n\n  fetchCollaborations = async () => {\n    this.setState({collaborations: null, isFetching: true, fetchError: false});\n    try {\n      const collaborations = await ProjectCollaborationsService.getCollaborationsOfProject(this.getProject().id);\n      this.setState({collaborations});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n    this.setState({isFetching: false});\n  };\n\n  getProject = () => this.props.project;\n\n  onClose = () => this.props.onClose();\n\n  onCollaborationAdded = (collaboration) => this.setState({collaborations: [...this.state.collaborations, collaboration]});\n\n  onCollaborationDeleted = (id) => {\n    const {collaborations} = this.state;\n    const index = collaborations.findIndex(collaboration => collaboration.id === id);\n    if(index >= 0) {\n      collaborations.splice(index, 1);\n      this.setState({collaborations});\n    }\n  };\n\n  render() {\n    const {fetchError, collaborations, isFetching} = this.state;\n    const project = this.getProject();\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>Sharing preferences of project #{project.id}</Modal.Header>\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            <AddNewCollaboration collaborations={collaborations}\n                                 project={project}\n                                 onCollaborationAdded={this.onCollaborationAdded}/>\n            <CollaborationsList collaborations={collaborations}\n                                onCollaborationDeleted={this.onCollaborationDeleted}/>\n          </LoadingContainer>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Modal, Table} from \"react-bootstrap\";\n\nimport {Link} from \"react-router-dom\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ShareProjectButtonAndModal from \"./ShareProjectButtonAndModal/ShareProjectButtonAndModal\";\nimport \"./ProjectsTable.css\";\n\nexport const ProjectsTable = ({projects, onProjectDeleted}) => (\n  <Col>\n    <Table hover>\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        projects.map(project => (\n          <ProjectsTableRow project={project} key={project.id} onProjectDeleted={onProjectDeleted}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  </Col>\n);\n\nexport const ProjectsTableRow = ({project, onProjectDeleted}) => {\n  const openProjectLink = `${PROJECTS_PATH}/${project.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openProjectLink}>{project.id}</Link>\n      </td>\n      <td>\n        <Link to={openProjectLink}>{project.data.name}</Link>\n      </td>\n      <td>{project.data.description}</td>\n      <td className=\"actions-cell\">\n        <ShareProjectButtonAndModal project={project}/>\n        <EditButton project={project}/>\n        <DeleteProjectButton project={project} onProjectDeleted={onProjectDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst EditButton = ({project}) => {\n  const editProjectLink = `${PROJECTS_PATH}/${project.id}/edit`;\n  return (\n    <Link to={editProjectLink} className=\"icon-button\">\n      <i className=\"fas fa-edit\"/>\n    </Link>\n  );\n};\n\nconst DeleteProjectButton = ({project, onProjectDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onProjectDeleted}\n    serviceCall={() => ProjectsService.deleteProject(project)}\n\n    header={\n      <Modal.Title>Delete project <span className=\"project-id\">#{project.id}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete the project <strong>{project.data.name}</strong>?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport {ProjectsTable} from \"./ProjectsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport class ProjectsList extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProjects();\n\n  componentWillUnmount = () => this.pendingProjectsRequest.cancel();\n\n  fetchProjects = async () => {\n    try {\n      this.pendingProjectsRequest = makeCancellable(ProjectsService.getProjects());\n      const projects = await this.pendingProjectsRequest.result;\n\n      this.setState({projects});\n    } catch (e) {\n      this.setState({\n        projects: null,\n        fetchError: true\n      });\n    }\n  };\n\n  render() {\n\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <SimpleBreadcrumb>Projects</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row className=\"header-row\">\n          <Col>\n            <h3>Projects list</h3>\n          </Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <Link className=\"btn btn-primary\" to={`${PROJECTS_PATH}/new`}>New</Link>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.projects && !this.state.fetchError}>\n          <Row>\n            {\n              !this.state.projects && this.state.fetchError &&\n              <FetchProjectsError/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length === 0 &&\n              <NoProjects/>\n            }\n\n            {\n              this.state.projects && this.state.projects.length > 0 &&\n              <ProjectsTable projects={this.state.projects} onProjectDeleted={this.fetchProjects}/>\n            }\n          </Row>\n        </LoadingContainer>\n\n      </Container>\n    )\n  }\n}\n\nexport const NoProjects = () => (\n  <Col>\n    <p>You haven't created any project yet. Use the 'Add' button to create a new one</p>\n  </Col>\n);\n\nexport const FetchProjectsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the projects\n      </Alert>\n    </Container>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\n\nimport \"./ProjectForm.css\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport BackButton from \"../../common/BackButton\";\n\n\nexport default class ProjectForm extends Component {\n\n  state = {};\n\n  handleSubmit = (values, formikBag) => {\n    const project = this.valuesToProjectData(values);\n    this.props.onSubmit(project, formikBag);\n  };\n\n  valuesToProjectData = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n  projectDataToValues = (projectDataFromProps) => {\n    const data = projectDataFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    };\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n  render() {\n\n    return (\n      <div className=\"project-form-container\">\n\n        <Formik\n          initialValues={this.projectDataToValues(this.props.projectData)}\n          onSubmit={this.handleSubmit}\n          validationSchema={this.validationSchema}>\n\n          {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              errors,\n            }) => {\n\n            const isValid = name => touched[name] && !errors[name];\n            const isInvalid = name => touched[name] && errors[name];\n\n            return (\n              <Form onSubmit={handleSubmit} noValidate>\n\n                {/* name */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project name</Form.Label>\n                      <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    placeholder=\"Ex: classify category of papers\"\n                                    isInvalid={isInvalid('name')}\n                                    isValid={isValid('name')}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* description */}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Project description</Form.Label>\n                      <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    isInvalid={isInvalid('description')}\n                                    isValid={isValid('description')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <ButtonToolbar className=\"form-buttons\">\n                  <BackButton to={this.props.cancelButtonUrlDestination || '/'}\n                              text={this.props.cancelText}/>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"submit-project-form\">\n                    {this.props.submitText}\n                  </Button>\n                </ButtonToolbar>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class CreateProject extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>New</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col><h1>Create new project</h1></Col>\n        </Row>\n\n        {\n          this.state.creationError &&\n          <ProjectCreationFailed/>\n        }\n\n        <ProjectForm cancelButtonUrlDestination={PROJECTS_PATH}\n                     cancelText=\"Back to Projects\"\n                     onSubmit={this.handleProjectSubmission}\n                     submitText=\"Create\"/>\n      </Container>\n    );\n  }\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.createProject(projectData);\n      this.redirectToProjectsList();\n    } catch (e) {\n      this.onProjectCreationFailed();\n    }\n\n    setSubmitting(false);\n  };\n\n  onProjectCreationFailed = () => this.setState({creationError: true});\n\n  redirectToProjectsList = () => this.props.history.push(PROJECTS_PATH);\n\n}\n\nexport const ProjectCreationFailed = () => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an error while creating the project\n    </Alert>\n  </Col>\n);\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar, Col, Form, Row} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\n\nexport default class WorkflowForm extends Component {\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required'),\n    description: Yup.string()\n      .required('Description is required')\n  });\n\n\n  handleSubmit = async (values, formikBag) => {\n    const workflow = this.valuesToWorkflow(values);\n    await this.props.onSubmit(workflow, formikBag);\n  };\n\n  workflowToValues = (workflowFromProps) => {\n    const data = workflowFromProps || {};\n    return {\n      name: data.name || '',\n      description: data.description || ''\n    }\n  };\n\n  valuesToWorkflow = (values) => {\n    return {\n      name: values.name,\n      description: values.description\n    };\n  };\n\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.workflowToValues(this.props.workflow)}\n        onSubmit={this.handleSubmit}\n        validationSchema={this.validationSchema}>\n\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            errors,\n          }) => {\n\n          const isValid = name => touched[name] && !errors[name];\n          const isInvalid = name => touched[name] && errors[name];\n\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n\n\n              {/* name */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow name name</Form.Label>\n                    <Form.Control name=\"name\" type=\"text\" value={values.name}\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('name')}\n                                  isValid={isValid('name')}/>\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              {/* description */}\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Workflow description</Form.Label>\n                    <Form.Control name=\"description\" value={values.description} as=\"textarea\" rows=\"3\"\n                                  onChange={handleChange} onBlur={handleBlur}\n                                  isInvalid={isInvalid('description')}\n                                  isValid={isValid('description')}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <ButtonToolbar className=\"form-buttons\">\n                <Button variant=\"secondary\" onClick={this.props.onCancel}>Cancel</Button>\n                <Button type=\"submit\">Create</Button>\n              </ButtonToolbar>\n\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Modal, Row} from \"react-bootstrap\";\n\nimport WorkflowsService from \"../../../../Services/rest/WorkflowsService\";\nimport './CreateWorkflow.css';\nimport WorkflowForm from \"./WorkflowForm\";\n\n\nexport class CreateWorkflowButton extends Component {\n\n  state = {showModal: false};\n\n  showCreateWorkflowModal = () => this.setState({showModal: true});\n\n  onWorkflowCreated = () => {\n    this.hideCreateWorkflowModal();\n    this.props.onWorkflowCreated();\n  };\n\n  hideCreateWorkflowModal = () => this.setState({showModal: false});\n\n  render() {\n    return (\n      <div>\n        <CreateWorkflowModal show={this.state.showModal} onCancel={this.hideCreateWorkflowModal}\n                             projectId={this.props.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n\n        <Button onClick={this.showCreateWorkflowModal}>Add workflow</Button>\n      </div>\n    );\n  }\n}\n\n\nexport class CreateWorkflowModal extends Component {\n\n  state = {\n    creationError: false\n  };\n\n  createNewWorkflow = async (workflow, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await WorkflowsService.createWorkflow({\n        ...workflow,\n        projectId: this.props.projectId\n      });\n      this.onWorkflowCreated();\n    } catch (e) {\n      this.onWorkflowCreationError();\n    }\n\n    setSubmitting(false);\n  };\n\n  onWorkflowCreated = () => this.props.onWorkflowCreated();\n\n  onWorkflowCreationError = () => this.setState({creationError: true});\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Create new workflow</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.creationError &&\n            <CreateWorkflowError/>\n          }\n\n\n          <WorkflowForm\n            onCancel={this.props.onCancel}\n            onSubmit={this.createNewWorkflow}/>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n\nexport const CreateWorkflowError = () => (\n  <Row>\n    <Col>\n      <Alert variant=\"danger\">\n        There's been an error while creating the new workflow.\n      </Alert>\n    </Col>\n  </Row>\n);\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport {Alert, Button, Form, Modal} from \"react-bootstrap\";\n\nimport {ignoreEventAnd} from \"../../utils/events\";\nimport LoadingButton from \"../../common/LoadingButton\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport \"./ShareWorkflowButtonAndModal.css\";\nimport {PUBLIC_WORKFLOWS_PATH} from \"../Workflows\";\nimport {WEBAPP_URL} from \"../../../config\";\n\nexport class ShareWorkflowButtonAndModal extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <ShareWorkflowModal show={this.state.show}\n                            onClose={this.onCloseModal}\n                            {...this.props}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-share-alt\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\nexport class ShareWorkflowModal extends Component {\n\n  state = {\n    workflow: null,\n\n    isFetching: false,\n    fetchError: false,\n\n    isSaving: false,\n    saveError: false\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.show && !prevProps.show) {\n      this.fetchWorkflow();\n    }\n  }\n\n  fetchWorkflow = async () => {\n    try {\n      this.setState({isFetching: true, fetchError: false});\n      const workflow = await WorkflowsService.getWorkflow(this.getWorkflowId());\n      this.setState({isFetching: false, fetchError: false, workflow});\n    } catch (e) {\n      this.setState({isFetching: false, fetchError: true});\n    }\n  };\n\n  getWorkflowId = () => this.props.workflow.id;\n\n  shareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: true}});\n\n  unshareWorkflow = () => this.setState({workflow: {...this.state.workflow, shared: false}});\n\n  onCancel = () => this.props.onClose();\n\n  onSave = async () => {\n    try {\n      this.setState({isSaving: true, saveError: false});\n      await WorkflowsService.updateWorkflow(this.state.workflow);\n      this.setState({isSaving: false, saveError: false});\n      this.props.onWorkflowSharedOrUnshared();\n      this.props.onClose();\n    } catch (e) {\n      this.setState({isSaving: false, saveError: true});\n    }\n  };\n\n  render() {\n    const {isFetching, fetchError, isSaving, saveError, workflow} = this.state;\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          Sharing preferences of workflow #{this.getWorkflowId()}\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoadingContainer loading={isFetching}>\n            {\n              fetchError &&\n              <Alert variant=\"danger\">\n                An error occurred while fetching the sharing preferences.\n              </Alert>\n            }\n\n            {\n              saveError &&\n              <Alert variant=\"danger\">\n                An error occurred while saving the sharing preferences.\n              </Alert>\n            }\n\n            {\n              workflow &&\n              <SharingPreferenceControl workflowId={workflow.id}\n                                        shared={!!workflow.shared}\n                                        shareWorkflow={this.shareWorkflow}\n                                        unshareWorkflow={this.unshareWorkflow}/>\n            }\n          </LoadingContainer>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel} disabled={isSaving}>Cancel</Button>\n          <LoadingButton onClick={this.onSave} disabled={isFetching} isLoading={isSaving}>Save</LoadingButton>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nconst SharingPreferenceControl = ({shared, workflowId, shareWorkflow, unshareWorkflow}) => {\n  const publicLink = getPublicLink(workflowId);\n  return (\n    <div>\n      <Form.Group>\n        <Form.Check\n          checked={!shared}\n          type=\"radio\"\n          label=\"Private Workflow\"\n          onChange={unshareWorkflow}\n        />\n        <p className=\"description-of-radio\">Workflow visible and editable only by the owner and collaborators</p>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Check\n          checked={shared}\n          type=\"radio\"\n          label=\"Public Workflow\"\n          onChange={shareWorkflow}\n        />\n        <p className=\"description-of-radio\">\n          Workflow visible by anyone and editable only by the owner and collaborators.\n          Public Link: <a href={publicLink} target=\"_blank\" rel=\"noopener noreferrer\">{publicLink}</a>\n        </p>\n      </Form.Group>\n    </div>\n  );\n};\n\nconst getPublicLink = (workflowId) => `${WEBAPP_URL}/#${PUBLIC_WORKFLOWS_PATH}/${workflowId}`;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {Modal, Table} from \"react-bootstrap\";\n\nimport {WORKFLOWS_PATH} from \"../Workflows\";\nimport {Link} from \"react-router-dom\";\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {ShareWorkflowButtonAndModal} from \"./ShareWorkflowButtonAndModal\";\nimport \"./WorkflowTable.css\";\n\nexport const WorkflowsTable = ({workflows, onWorkflowUpdated, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => (\n  <Table hover>\n    <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      workflows.map(workflow => (\n        <WorkflowsTableRow workflow={workflow}\n                           key={workflow.id}\n                           onWorkflowDeleted={onWorkflowDeleted}\n                           onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nconst WorkflowsTableRow = ({workflow, onWorkflowDeleted, onWorkflowSharedOrUnshared}) => {\n  const openWorkflowLink = `${WORKFLOWS_PATH}/${workflow.id}`;\n\n  return (\n    <tr>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.id}</Link>\n      </td>\n      <td>\n        <Link to={openWorkflowLink}>{workflow.name}</Link>\n        <i className={`share-status-icon fas ${workflow.shared ? 'fa-unlock' : 'fa-lock'}`}/>\n      </td>\n      <td>{workflow.description}</td>\n      <td>\n        <ShareWorkflowButtonAndModal workflow={workflow} onWorkflowSharedOrUnshared={onWorkflowSharedOrUnshared}/>\n        <DeleteWorkflowButton workflow={workflow} onWorkflowDeleted={onWorkflowDeleted}/>\n      </td>\n    </tr>\n  );\n};\n\nconst DeleteWorkflowButton = ({workflow, onWorkflowDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onWorkflowDeleted}\n    serviceCall={() => WorkflowsService.deleteWorkflow(workflow)}\n\n    header={\n      <Modal.Title>Delete worflow <span className=\"project-id\">{workflow.name}</span></Modal.Title>\n    }\n\n    body={\n      <div>\n        Are you sure you want to delete \"<strong>{workflow.name}</strong>\"?\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Alert, Col, Container, Row} from \"react-bootstrap\";\n\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport {CreateWorkflowButton} from \"./CreateWorkflow/CreateWorkflow\";\nimport {WorkflowsTable} from \"./WorkflowsTable\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport default class EmbeddableWorkflowsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: props.project.id,\n      workflows: null,\n      fetchError:false\n    };\n  }\n\n  componentDidMount = () => this.fetchWorkflows();\n\n  componentWillUnmount = () => this.pendingWorkflowsRequest.cancel();\n\n  fetchWorkflows = async () => {\n    this.setState({workflows: null});\n\n    try {\n      const promise = WorkflowsService.getWorkflowsOfProject(this.props.project);\n      this.pendingWorkflowsRequest = makeCancellable(promise);\n      const workflows = await this.pendingWorkflowsRequest.result;\n\n      this.setState({workflows});\n    } catch (e) {\n      this.setState({\n        workflows: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onWorkflowCreated = () => this.fetchWorkflows();\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Workflows</h3></Col>\n          <Col className=\"d-flex flex-row-reverse\">\n            <div>\n              <CreateWorkflowButton projectId={this.state.projectId} onWorkflowCreated={this.onWorkflowCreated}/>\n            </div>\n          </Col>\n        </Row>\n\n        <LoadingContainer loading={!this.state.workflows && !this.state.fetchError}>\n          <Row>\n            <Col>\n              {\n                this.state.fetchError &&\n                <FetchingWorkflowsError/>\n              }\n\n              {\n                this.state.workflows &&\n                <WorkflowsTable workflows={this.state.workflows}\n                                onWorkflowDeleted={this.fetchWorkflows}\n                                onWorkflowSharedOrUnshared={this.fetchWorkflows}/>\n              }\n            </Col>\n          </Row>\n        </LoadingContainer>\n      </Container>\n    );\n  }\n}\n\nexport const FetchingWorkflowsError = () => (\n  <Col>\n    <Container>\n      <Alert variant=\"danger\">\n        There's been an error while fetching the workflows of the project\n      </Alert>\n    </Container>\n  </Col>\n);\n","import {getJSON, postJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ITEMS_URL = `${API_URL}/items`;\n\n\nfunction JSONtoItem(json) {\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n\n  return json;\n}\n/*\nfunction itemToJSON(job) {\n  return job;\n}\n*/\n\nexport default {\n\n  async importFromCsvUrl (project, csvUrl) {\n    const json = {\n      id_project: project.id,\n      items: await this.fetchItemsByUrl()\n    };\n    return await postJSON(ITEMS_URL, json);\n  },\n\n  async fetchItemsByUrl (csvUrl) {\n\n  },\n\n  async getItemsOfProject(project) {\n    const jsonList = await getJSON(`${ITEMS_URL}?projectId=${project.id}`);\n    return jsonList.map(JSONtoItem);\n  },\n\n  /*\n  async createItems(item) {\n    const json = itemToJSON(item);\n    return await postJSON(ITEMS_URL, json);\n  },\n*/\n\n  async deleteItem(item) {\n    return await sendDelete(`${ITEMS_URL}/${item.id}`);\n  },\n\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Container, FormControl, InputGroup, ProgressBar, Row} from \"react-bootstrap\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsImporter extends Component {\n\n  state = {\n    csvUrl: '',\n  };\n\n  onInputChange = (event) => this.setState({csvUrl: event.target.value});\n\n  onImport = async () => {\n    this.onStartImport();\n\n    try {\n      const items = await ItemsService.importFromCsvUrl(this.props.project, this.state.csvUrl);\n      this.onImportCompleted(items);\n    } catch (e) {\n      this.onImportFailed();\n    }\n  };\n\n  onStartImport = () => this.setState({\n    importing: true,\n    importCompleted: false,\n    importError: false\n  });\n\n  onImportCompleted = (importedItems) => {\n    this.setState({\n      importing: false,\n      importCompleted: true,\n      csvUrl: '',\n      importedItemsCount: importedItems.length\n    });\n    this.props.onItemsImported();\n  };\n\n  onImportFailed = () => this.setState({\n    importing: false,\n    importError: true\n  });\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"header-row\">\n          <Col><h3>Import new items</h3></Col>\n        </Row>\n\n        {\n          /* Error */\n          this.state.importError &&\n          <ImportItemsError/>\n        }\n\n\n        {\n          /* Success */\n          this.state.importCompleted &&\n          <ImportItemsSuccess count={this.state.importedItemsCount}/>\n        }\n\n\n        {/* Field for the file URL */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"https://raw.githubusercontent.com/...\"\n            aria-label=\"URL of CSV file\"\n            onChange={this.onInputChange}\n            disabled={this.state.importing}\n            name=\"csvUrl\"\n          />\n\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-primary\"\n              value={this.state.csvUrl}\n              disabled={this.state.csvUrl.length <= 0 || this.state.importing}\n              onClick={this.onImport}>\n              Import\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        {\n          /* Importing */\n          this.state.importing &&\n          <ImportingItems/>\n        }\n\n      </Container>\n    );\n  }\n}\n\n\nexport const ImportItemsError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while importing the items.\n  </Alert>\n);\n\nexport const ImportItemsSuccess = ({count}) => (\n  <Alert variant=\"success\">\n    {count} items imported successfully!\n  </Alert>\n);\n\nexport const ImportingItems = () => (\n  <ProgressBar animated now={100}/>\n);\n","import React, {Component} from 'react';\nimport {Col, Modal, Row, Table} from \"react-bootstrap\";\n\nimport './ItemsTable.css';\nimport {DeleteButtonAndModal} from \"../../common/DeleteButtonAndModal\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\n\nexport class ItemsTable extends Component {\n\n\n  static getColumnNames = (items) => {\n    const columnNames = {};\n    items\n      .map(item => item.data)\n      .map(Object.keys)\n      .forEach(itemKeys => itemKeys.forEach(key => columnNames[key] = true));\n    return Object.keys(columnNames);\n  };\n\n  render() {\n    const items = this.props.items;\n    const columnNames = ItemsTable.getColumnNames(items);\n\n    return (\n      <Row>\n        <Col>\n          <Table striped bordered hover className=\"items-table\">\n            <thead>\n            <tr>\n              <th>Id</th>\n\n              {\n                columnNames.map(name => (\n                  <th key={name}>{name}</th>\n                ))\n              }\n\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              items.map(item => (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n\n                  {\n                    /* values */\n                    columnNames.map(key => (\n                      <td key={`${item.id}-${key}`}>{item.data[key] || ''}</td>\n                    ))\n                  }\n\n                  <td>\n                    <DeleteItemButton item={item} onDeleted={() => this.props.onItemDeleted(item)}/>\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n\n    );\n  }\n\n}\n\nconst DeleteItemButton = ({item, onDeleted}) => (\n  <DeleteButtonAndModal\n    onDeleted={onDeleted}\n    serviceCall={() => ItemsService.deleteItem(item)}\n\n    header={\n      <Modal.Title>Delete item <span className=\"project-id\">#{item.id}</span></Modal.Title>\n    }\n\n    body={\n      <div className=\"delete-item-table-container\">\n        Are you sure you want to following item?\n\n        <Table striped bordered hover className=\"delete-item-table\">\n          <thead>\n          <tr>\n            <th>Key</th>\n            <th>Value</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {/* Id */}\n          <tr>\n            <td>Id</td>\n            <td>item.id</td>\n          </tr>\n\n          {/* Data */}\n          {\n            Object.keys(item.data).map(key => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{item.data[key]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </div>\n    }\n  />\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport {ItemsImporter} from \"./ItemsImporter\";\nimport {ItemsTable} from \"./ItemsTable\";\nimport ItemsService from \"../../../Services/rest/ItemsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\nexport class ItemsView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchItems();\n\n  componentWillUnmount = () => this.pendingItemsRequest.cancel();\n\n  fetchItems = async () => {\n    try {\n      const project = this.props.project;\n      this.pendingItemsRequest = makeCancellable(ItemsService.getItemsOfProject(project));\n      const items = await this.pendingItemsRequest.result;\n\n      this.setState({items});\n    } catch (e) {\n      this.setState({\n        items: null,\n        fetchError: true\n      });\n    }\n  };\n\n  onItemDeleted = (item) => {\n    const index = this.state.items.indexOf(item);\n    const items = this.state.items;\n    items.splice(index, 1);\n    this.setState({items});\n  };\n\n  render() {\n    const project = this.props.project;\n    return (\n      <div>\n        {/* Add items */}\n        <ItemsImporter project={project} onItemsImported={this.fetchItems}/>\n\n        {/* View uploaded items */}\n        <Container>\n          <Row className=\"header-row\">\n            <Col>\n              <h3>Uploaded Items</h3>\n            </Col>\n          </Row>\n        </Container>\n\n        <LoadingContainer loading={!this.state.items}>\n          <Container className=\"items-table-container\">\n            <ItemsTable items={this.state.items} onItemDeleted={this.onItemDeleted}/>\n          </Container>\n        </LoadingContainer>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Breadcrumb, Col, Container, Row, Tab, Tabs} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport EmbeddableWorkflowsList from \"../../Workflows/WorkflowsList/EmbeddableWorkflowsList\";\nimport {ItemsView} from \"../../Items/ItemsView/ItemsView\";\nimport LoadingContainer from \"../../common/LoadingContainer\";\n\n\nexport default class ProjectView extends Component {\n\n  state = {};\n\n  componentDidMount = () => this.fetchProject();\n\n  componentWillUnmount = () => this.pendingProjectRequest.cancel();\n\n  async fetchProject() {\n    const id = this.props.match.params.id;\n\n    try {\n      this.pendingProjectRequest = makeCancellable(ProjectsService.getProject(id));\n      const project = await this.pendingProjectRequest.result;\n\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <SimpleBreadcrumb>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <LoadingContainer loading={!this.state.project}>\n            <Row>\n              <ProjectData project={this.state.project}/>\n\n              <div style={{width: '100%'}}>\n                <hr/>\n\n                <Tabs defaultActiveKey=\"workflow\">\n                  <Tab eventKey=\"workflow\" title=\"Workflows\">\n                    <EmbeddableWorkflowsList project={this.state.project}/>\n                  </Tab>\n\n                  <Tab eventKey=\"items\" title=\"Items\">\n                    <ItemsView project={this.state.project}/>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Row>\n        </LoadingContainer>\n\n      </Container>\n    );\n  }\n}\n\nfunction ProjectData({project}) {\n  return (\n    <Container>\n      <Row className=\"header-row\">\n        <Col>\n          <h2>{project.data.name}</h2>\n        </Col>\n        <Col className=\"d-flex flex-row-reverse\">\n          <div>\n            <Link to={`${PROJECTS_PATH}/${project.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>{project.data.description}</Col>\n      </Row>\n    </Container>\n  );\n}\n\n","import React, {Component} from 'react';\nimport {Alert, Breadcrumb, Col, Container, Row} from \"react-bootstrap\";\n\nimport ProjectsService from \"../../../Services/rest/ProjectsService\";\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport {redirectToProjectsList} from \"../utils/route\";\nimport {PROJECTS_PATH} from \"../Projects\";\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../common/Breadcrumbs\";\n\nexport default class EditProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id\n    };\n  }\n\n  componentDidMount = () => this.fetchProject();\n\n  fetchProject = async () => {\n    try {\n      const project = await ProjectsService.getProject(this.state.id);\n      this.setState({project});\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  handleProjectSubmission = async (projectData, {setSubmitting}) => {\n    setSubmitting(true);\n\n    try {\n      await ProjectsService.updateProject({\n        id: this.state.project.id,\n        data: projectData\n      });\n      this.returnToProjectPage();\n    } catch (e) {\n      this.onUpdateProjectFailed(e);\n    }\n\n    setSubmitting(false);\n  };\n\n  onCancel = () => this.returnToProjectPage();\n\n  returnToProjectPage = () => this.props.history.push(`${PROJECTS_PATH}/${this.state.project.id}`);\n\n  onUpdateProjectFailed = (e) => this.setState({updateError: e});\n\n  render() {\n    return (\n      <Container>\n\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${this.props.match.params.id}`}>\n            {this.state.project ? this.state.project.data.name : '...'}\n          </LinkBreadcrumb>\n          <SimpleBreadcrumb>Edit</SimpleBreadcrumb>\n        </Breadcrumb>\n\n        <Row>\n          <Col>\n            <h4>\n              Edit project {this.state.project && this.state.project.data.name}\n            </h4>\n          </Col>\n        </Row>\n\n        {\n          this.state.updateError &&\n          <UpdateProjectError error={this.state.updateError}/>\n        }\n\n        {\n          !this.state.project &&\n          <FetchingProject/>\n        }\n        {\n          this.state.project &&\n          <ProjectForm projectData={this.state.project.data}\n                       onSubmit={this.handleProjectSubmission}\n                       submitText=\"Save\"\n                       cancelText=\"Back to Project\"\n                       cancelButtonUrlDestination={`${PROJECTS_PATH}/${this.state.project.id}`}/>\n        }\n      </Container>\n    );\n  }\n\n}\n\nfunction FetchingProject() {\n  return (<p>Fetching Project...</p>);\n}\n\n\nexport const UpdateProjectError = ({error}) => (\n  <Col>\n    <Alert variant=\"danger\">\n      There's been an updating the project.\n    </Alert>\n  </Col>\n);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {ProjectsList} from \"./ProjectsList/ProjectsList\";\nimport CreateProject from \"./CreateProject/CreateProject\";\nimport ProjectView from \"./ProjectView/ProjectView\";\nimport EditProject from \"./EditProject/EditProject\";\n\nexport const PROJECTS_PATH = \"/projects\";\n\nexport const Projects = () => (\n  <Switch>\n    <Route path={`${PROJECTS_PATH}`} exact component={ProjectsList}/>\n    <Route path={`${PROJECTS_PATH}/new`} component={CreateProject}/>\n    <Route path={`${PROJECTS_PATH}/:id/edit`} exact component={EditProject}/>\n    <Route path={`${PROJECTS_PATH}/:id`} component={ProjectView}/>\n  </Switch>\n);\n","import {getJSON, postJSON, putJSON, sendDelete} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst PROJECTS_URL = `${API_URL}/projects`;\n\nexport const Errors = {\n    INVALID_WORKFLOW_DATA: 'invalid_project_data'\n};\n\nfunction JSONtoProject(json) {\n  json.id = parseInt(json.id);\n  json.created_at = new Date(json.created_at);\n  json.updated_at = new Date(json.updated_at);\n  json.deleted_ad = new Date(json.deleted_ad);\n  json.ownerId = json.id_user;\n\n  return json;\n}\n\nfunction projectToJSON(job) {\n  return job;\n}\n\nexport default {\n  async getProjects() {\n    const jsonList = await getJSON(PROJECTS_URL);\n    return jsonList.map(JSONtoProject);\n  },\n\n  async getProject(id) {\n    const jsonJob = await getJSON(`${PROJECTS_URL}/${id}`);\n    return JSONtoProject(jsonJob);\n  },\n\n  async createProject(project) {\n    const json = projectToJSON(project);\n    return await postJSON(`${PROJECTS_URL}`, json);\n  },\n\n  async updateProject(project) {\n    try {\n      const json = projectToJSON(project);\n      return await putJSON(`${PROJECTS_URL}/${project.id}`, json);\n    } catch (e) {\n      if (e.response === 400) {\n        throw new Error(Errors.INVALID_PROJECT_DATA);\n      } else {\n        throw e;\n      }\n    }\n  },\n\n  async deleteProject(project) {\n    return await sendDelete(`${PROJECTS_URL}/${project.id}`);\n  },\n\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst BLOCK_TYPES_URL = `${API_URL}/block-types`;\n\n\nexport const JSONtoBlockTypeDefinition = ({id, data}) => ({\n  id,\n  name: data.name,\n  displayName: data.displayName,\n  ports: data.ports,\n  color: data.color,\n  parameterDefinitions: data.parameterDefinitions\n});\n\nexport default {\n  async getBlockTypeDefinitions() {\n    const jsonList = await getJSON(BLOCK_TYPES_URL);\n    return jsonList.map(JSONtoBlockTypeDefinition);\n  }\n}\n","import React from 'react';\nimport {DefaultLinkFactory} from \"storm-react-diagrams\";\n\nexport default class BlackLinkFactory extends DefaultLinkFactory {\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem(\"--path-selected\") : \"\"}\n        strokeWidth={model.width}\n        stroke=\"black\"\n        d={path}\n      />\n    );\n  }\n}\n","export default class AbstractParameterModel {\n\n  value;\n  definition;\n  blockModel;\n\n  constructor(definition, blockModel) {\n    this.deSerialize(definition, blockModel);\n  }\n\n  deSerialize(definition, blockModel) {\n    this.definition = definition;\n    this.blockModel = blockModel;\n    const initialParametersMap = blockModel.getInitialParametersMap();\n    this.setValue(initialParametersMap[this.getName()]);\n    if (this.getValue() === undefined) {\n      this.setValue(this.getDefinition().default);\n    }\n  }\n\n  serialize() {\n    return this.getValue();\n  }\n\n  isValid() {\n    return false;\n  }\n\n  isRequired(){\n    return this.getDefinition().required;\n  }\n\n  getDefinition() {\n    return this.definition;\n  }\n\n  getName() {\n    return this.getDefinition().name;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  shouldDisplay() {\n    if (this.isOptional()) {\n      return this.isConditionMet();\n    }\n    return true;\n  }\n\n  isOptional() {\n    return !!this.getCondition();\n  }\n\n  isConditionMet() {\n    const condition = this.getCondition();\n    const parameterModelsMap = this.blockModel.getParameterModelsMap();\n    return !!parameterModelsMap[condition].getValue()\n  }\n\n  getCondition() {\n    return this.getDefinition().condition;\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Form} from 'react-bootstrap';\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n//  TODO: Show in a dialog in the sidebar\nclass TextModel extends AbstractParameterModel {\n\n  isValid() {\n    const definition = this.getDefinition();\n    if (definition.required) {\n      const value = this.getValue();\n      return value && value.length > 0\n    } else {\n      return true;\n    }\n  }\n}\n\nclass TextWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(value);\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"text\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'text',\n  Widget: TextWidget,\n  Model: TextModel\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'number';\n\nclass NumberModel extends AbstractParameterModel {\n  isValid() {\n    const value = this.getValue();\n    return !this.isRequired() || (typeof value === \"number\" && !isNaN(value))\n  }\n}\n\nclass NumberWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    }\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {value} = event.target;\n    this.getModel().setValue(parseInt(value));\n    this.setState({value});\n  };\n\n  onBlur = () => this.props.onModelUpdated();\n\n  componentWillUnmount = this.onBlur;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Control type=\"number\"\n                      value={`${this.state.value}`}\n                      onChange={this.onChange}\n                      onBlur={this.onBlur}\n                      isInvalid={!model.isValid()}\n                      disabled={this.props.disabled}/>\n        <Form.Control.Feedback type=\"invalid\">\n          {definition.displayName} is required\n        </Form.Control.Feedback>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: NumberModel,\n  Widget: NumberWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nconst type = 'boolean';\n\nclass BooleanModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass BooleanWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.getModel().getValue()\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChange = (event) => {\n    const {checked} = event.target;\n    this.getModel().setValue(checked);\n    this.setState({value: checked}, this.props.onModelUpdated);\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n        <Form.Check type=\"checkbox\"\n                    label={definition.displayName}\n                    checked={this.state.value}\n                    onChange={this.onChange}\n                    disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type,\n  Model: BooleanModel,\n  Widget: BooleanWidget\n}\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\nclass TextFromDropdownModel extends AbstractParameterModel {\n\n  isValid() {\n    const value = this.getValue();\n    const choices = this.getChoices();\n    return choices.find(choice => choice.value === value) !== null;\n  }\n\n  getChoices () {\n    return this.getDefinition().choices;\n  }\n}\n\nclass TextFromDropdownWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onChangeValue =(event) => {\n    const value = event.target.value;\n    this.getModel().setValue(value);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Form.Control as=\"select\" value={model.getValue()} onChange={this.onChangeValue} disabled={this.props.disabled}>\n          {\n            model.getChoices().map(choice => (\n              <option key={choice.value} value={choice.value}>{choice.label}</option>\n            ))\n          }\n        </Form.Control>\n      </div>\n    );\n  }\n}\n\nexport default {\n  type: 'textFromDropdown',\n  Widget: TextFromDropdownWidget,\n  Model: TextFromDropdownModel\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nexport default class HtmlModalEditor extends Component {\n\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <div>\n        <Button disabled={this.props.disabled} className=\"btn-block\" onClick={this.showModal}>Open editor</Button>\n\n        <Modal show={this.state.show} size=\"lg\">\n          <Modal.Header>{this.props.title}</Modal.Header>\n\n          <Modal.Body>\n            <Editor {...this.props}/>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button onClick={this.hideModal}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport HtmlModalEditor from \"./HtmlModalEditor\";\n\nclass HtmlModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n}\n\nclass HtmlWidget extends Component {\n\n\n  handleEditorChange = (text) => {\n    this.getModel().setValue(text);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const EditorComponent = this.getEditor();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <EditorComponent onEditorChange={this.handleEditorChange}\n                         initialValue={model.getValue()}\n                         init={{menubar: false}}\n                         disabled={this.props.disabled}\n                         title={definition.displayName}/>\n      </Form.Group>\n    );\n  }\n\n  getEditor() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    if (definition.editorInModal) {\n      return HtmlModalEditor;\n    }\n    return Editor;\n  }\n\n}\n\nexport default {\n  type: 'html',\n  Widget: HtmlWidget,\n  Model: HtmlModel\n}\n","import React, {Component} from \"react\";\nimport {Button, Col, Form, Table} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\n\n\nclass ChoiceBuilderModel extends AbstractParameterModel {\n\n  isValid() {\n    return this.getChoices().length > 0;\n  }\n\n  getChoices() {\n    return this.getValue();\n  }\n\n  setChoices(choices) {\n    this.setValue(choices);\n  }\n\n  removeChoiceByIndex(index) {\n    this.getChoices()\n      .splice(index, 1);\n  }\n\n  addChoice(choice) {\n    this.getChoices().push(choice);\n  }\n}\n\nclass ChoiceBuilderWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onRemoveChoice = (index) => {\n    this.getModel().removeChoiceByIndex(index);\n    this.props.onModelUpdated();\n  };\n\n  onAddChoice = (choice) => {\n    this.getModel().addChoice(choice);\n    this.props.onModelUpdated();\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n\n        <ChoicesTable choices={model.getChoices()} onRemoveChoice={this.onRemoveChoice}/>\n        <AddChoice onAddChoice={this.onAddChoice}/>\n\n      </Form.Group>\n    );\n  }\n}\n\n\nconst ChoicesTable = ({choices, onRemoveChoice}) => (\n  <Table striped bordered hover>\n    <thead>\n    <tr>\n      <th>Label</th>\n      <th>Value</th>\n      <th/>\n    </tr>\n    </thead>\n    <tbody>\n    {\n      choices.map((choice, index) => ( // TODO: Assert unique\n        <tr key={choice.value}>\n          <td>{choice.label}</td>\n          <td>{choice.value}</td>\n          <td>\n            <button className=\"icon-button button-link\" onClick={() => onRemoveChoice(index)}>\n              <i className=\"fas fa-trash-alt\"/>\n            </button>\n          </td>\n        </tr>\n      ))\n    }\n    </tbody>\n  </Table>\n);\n\nclass AddChoice extends Component {\n\n  state = {\n    label: '',\n    value: ''\n  };\n\n  isNewChoiceValid = () => this.state.label.length > 0 && this.state.value.length > 0;\n\n  onAddChoice = () => {\n    this.props.onAddChoice({\n      label: this.state.label,\n      value: this.state.value\n    });\n    this.setState({\n      label: '',\n      value: ''\n    });\n  };\n\n  render() {\n    return (\n      <Form.Row>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Label</Form.Label>\n            <Form.Control name=\"label\" type=\"text\" value={this.state.label}\n                          onChange={(event) => this.setState({label: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Form.Group>\n            <Form.Label>Value</Form.Label>\n            <Form.Control name=\"value\" type=\"text\" value={this.state.value}\n                          onChange={(event) => this.setState({value: event.target.value})}/>\n          </Form.Group>\n        </Col>\n        <Col md=\"12\" className=\"\">\n          <Button onClick={this.onAddChoice} disabled={!this.isNewChoiceValid()}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n\nexport default {\n  type: 'choiceBuilder',\n  Widget: ChoiceBuilderWidget,\n  Model: ChoiceBuilderModel\n}\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\n\nexport class CodeFilePicker extends Component {\n\n  state = {\n    name: '',\n    content: null\n  };\n\n  onChange = (event) => {\n    const target = event.target;\n    const files = target.files;\n    if (files.length === 1) {\n      this.onPickFile(files[0]);\n    }\n  };\n\n  onPickFile = async (file) => {\n    this.setState({\n      name: file.name,\n      content: await this.readFileContent(file)\n    });\n  };\n\n  readFileContent = async (file) => {\n    // TODO: Handle error\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.addEventListener('load', (event) => resolve(event.target.result));\n      reader.readAsText(file);\n    });\n  };\n\n  onImport = () => this.props.onFilePicked(this.state.content);\n\n  render() {\n    return (\n      <div>\n        <h5>Import from file</h5>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <label className=\"btn btn-primary\">\n              Select file\n              <input type=\"file\" style={{display: 'none'}} accept=\".js\" multiple={false} onChange={this.onChange}/>\n            </label>\n          </InputGroup.Prepend>\n\n          <FormControl value={this.state.name} placeholder=\"Click the left button or drop a file\" readOnly/>\n\n          <InputGroup.Append>\n            <Button style={{height: '24px', boxSizing: 'content-box'}}\n                    disabled={this.state.content === null} onClick={this.onImport}>Import</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\nimport AceEditor from \"react-ace\";\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\nimport {CodeFilePicker} from \"./CodeFilePicker\";\n\nexport class CodeEditorModalAndButton extends Component {\n  state = {\n    show: false\n  };\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  onSave = (code) => {\n    this.props.onUpdateCode(code);\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>Open editor</Button>\n        <CodeEditorModal show={this.state.show}\n                         onClose={this.hideModal}\n                         onSave={this.onSave}\n                         code={this.props.code}/>\n      </div>\n    );\n  }\n}\n\nclass CodeEditorModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: this.props.code\n    };\n  }\n\n  onCodeEdited = (code) => this.setState({code});\n\n  onSave = () => this.props.onSave(this.state.code);\n\n  render() {\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Lambda block code editor</Modal.Header>\n\n        <Modal.Body>\n          <CodeFilePicker onFilePicked={this.onCodeEdited}/>\n\n          <hr/>\n\n          <CodeEditor code={this.state.code} onCodeEdited={this.onCodeEdited}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\n          <Button onClick={this.onSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst CodeEditor = ({onCodeEdited, code}) => (\n  <div>\n    <h5>Editor</h5>\n    <AceEditor\n      style={{width: '100%'}}\n      placeholder=\"Lambda block code\"\n      mode=\"javascript\"\n      theme=\"monokai\"\n      name=\"lambdaBlockCodeEditor\"\n      onChange={onCodeEdited}\n      fontSize={14}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={code}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}/>\n  </div>\n);\n","import React, {Component} from 'react';\nimport {Form} from 'react-bootstrap';\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {CodeEditorModalAndButton} from \"./CodeEditorModal\";\n\nclass CodeModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  getCode() {\n    return this.getValue();\n  }\n\n  setCode(code) {\n    this.setValue(code);\n  }\n}\n\nclass CodeWidget extends Component {\n\n\n  onUpdateCode = (code) => {\n    this.getModel().setCode(code);\n    this.props.onModelUpdated();\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <Form.Group>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <CodeEditorModalAndButton code={model.getCode()} onUpdateCode={this.onUpdateCode} disabled={this.props.disabled}/>\n      </Form.Group>\n    );\n  }\n}\n\nexport default {\n  type: 'code',\n  Widget: CodeWidget,\n  Model: CodeModel\n}\n","export const getRandomColor = () => rgbToHex({\n  r: getRandomColorValue(),\n  g: getRandomColorValue(),\n  b: getRandomColorValue()\n});\n\n\nexport const getRandomColorValue = () => Math.floor(Math.random() * Math.floor(256));\n\nexport const rgbToHex = ({r, g, b}) => `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n\nexport const isHexValid = (hex) => !!hexToRgb(hex);\n\nexport const hexToRgb = (hex) => {\n  /* https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nexport const getTextColorVisibleOnBackground = (hex) => getTextColorByBackgroundLuminance(\n  getLuminance(\n    hexToRgb(hex)\n  )\n);\n\nconst getLuminance = ({r, g, b}) => (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\nconst getTextColorByBackgroundLuminance = (luminance) => luminance > 0.5 ? 'black' : 'white';\n","import React, {Component} from 'react';\nimport {Dropdown, Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../../AbstractParameterModel\";\nimport \"./BlockingContext.css\";\nimport {getTextColorVisibleOnBackground} from \"../../../../../../utils/colors\";\n\nconst type = 'blockingContext';\n\nclass BlockingContextParameterModel extends AbstractParameterModel {\n  isValid() {\n    return true;\n  }\n\n  setBlockingContextId = (id) => this.setValue(id);\n\n  getBlockingContextId = () => this.getValue();\n\n  isBlockingContextSelected = () => !!this.getBlockingContextId();\n}\n\nclass BlockingContextParameterWidget extends Component {\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getBlockingContextsModel = () => this.getModel().blockModel.getBlockingContexts();\n\n  getBlockingContextName = (id) => this.getBlockingContextsModel()\n    .getBlockingContextById(id).name;\n\n\n  onBlockingContextSelected = ({id}) => {\n    this.getModel().setBlockingContextId(id);\n    this.props.onModelUpdated();\n  };\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n    const blockingContextsModel = this.getBlockingContextsModel();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        <Dropdown>\n          {\n            this.renderToggle()\n          }\n\n          <BlockingContextsDropdownMenu contexts={blockingContextsModel.getContexts()}\n                                        onContextSelected={this.onBlockingContextSelected}/>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  renderToggle() {\n    const model = this.getModel();\n    if (!model.isBlockingContextSelected()) {\n      return <Dropdown.Toggle disabled={this.isDisabled()} className=\"btn-block\">None</Dropdown.Toggle>;\n    }\n\n\n    const context = this.getBlockingContextsModel().getBlockingContextById(model.getBlockingContextId());\n    return (\n      <Dropdown.Toggle disabled={this.isDisabled()}\n                       className=\"btn-block\"\n                       style={{\n                         backgroundColor: context.color,\n                         border: context.color,\n                         color: getTextColorVisibleOnBackground(context.color)\n                       }}>\n        {context.name}\n      </Dropdown.Toggle>\n    );\n  }\n}\n\nconst BlockingContextsDropdownMenu = ({contexts, onContextSelected}) => (\n  <Dropdown.Menu>\n    {/* None blocking context */}\n    <Dropdown.Item onClick={() => onContextSelected({id: null})} className=\"blocking-context-drop-down-item\">\n      <div className=\"blocking-context-color-box\"/>\n      None\n    </Dropdown.Item>\n\n\n    {\n      contexts.map(context => (\n        <Dropdown.Item key={context.id}\n                       className=\"blocking-context-drop-down-item\"\n                       onClick={() => onContextSelected(context)}>\n          <div className=\"blocking-context-color-box\"\n               style={{backgroundColor: context.color}}/>\n          {context.name}\n        </Dropdown.Item>\n      ))\n    }\n  </Dropdown.Menu>\n);\n\nexport default {\n  type,\n  Model: BlockingContextParameterModel,\n  Widget: BlockingContextParameterWidget\n}\n","import Text from './Text';\nimport Number from './Number';\nimport Boolean from './Boolean';\nimport TextFromDropdown from './TextFromDropdown';\nimport Html from './Html/Html';\nimport ChoiceBuilder from './ChoiceBuilder';\nimport Code from './Code';\nimport BlockingContext from \"./BlockingContext/BlockingContext\";\nimport DoBlockCost from \"./DoBlockCost\";\n\nconst mapParametersArrayToMap = (parameters) => {\n  const map = {};\n  parameters.forEach(parameter => map[parameter.type] = parameter);\n  return map;\n};\n\n/**\n * Map of parameters that aren't based on other parameters\n */\nexport const PrimitiveParameters = mapParametersArrayToMap([\n  Text,\n  Number,\n  Boolean,\n  TextFromDropdown,\n  Html,\n  ChoiceBuilder,\n  Code,\n  BlockingContext,\n  DoBlockCost\n]);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport AbstractParameterModel from \"../AbstractParameterModel\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\n\nclass DoBlockCostWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimatedCost: this.getModel().getEstimatedCost(),\n      estimationError: false,\n      estimating: false\n    };\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  estimateCost = async () => {\n    this.setState({estimatedCost: null, estimationError: false, estimating: true});\n    try {\n      const estimatedCost = await WorkflowsService.estimateDoBlockCost(\n        this.getWorkflowId(), this.getBlockId()\n      );\n      this.onCostEstimated(estimatedCost);\n    } catch (e) {\n      this.setState({estimatedCost: null, estimationError: true, estimating: false});\n    }\n  };\n\n  getWorkflowId() { // TODO: Clear\n    const blockModel = this.getBlockModel();\n    const workflowModel = blockModel.parent;\n    return workflowModel.workflowId;\n  }\n\n  getBlockModel() {\n    return this.getModel().blockModel;\n  }\n\n  getBlockId() {\n    const blockModel = this.getBlockModel();\n    return blockModel.id;\n  }\n\n  onCostEstimated(estimatedCost) {\n    this.setState({estimatedCost, estimationError: false, estimating: false});\n    this.getModel().setEstimatedCost(estimatedCost);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderEstimatedCost()}\n\n        <LoadingButton block onClick={this.estimateCost}\n                       isLoading={this.state.estimating}\n                       disabled={this.props.disabled}>\n          Estimate cost\n        </LoadingButton>\n      </div>\n    );\n  }\n\n  renderEstimatedCost() {\n    if (this.state.estimatedCost === null) {\n      return this.renderCostNeverEstimated();\n    }\n    return this.renderLatestEstimatedCost();\n  }\n\n  renderCostNeverEstimated() {\n    return (\n      <Form.Text className=\"text-muted\">\n        The cost of this block has never been estimated. Click the button below to estimate it.\n      </Form.Text>\n    );\n  }\n\n  renderLatestEstimatedCost() {\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          The latest estimated cost is: <strong>{this.state.estimatedCost}$</strong>.\n          Click the button below to estimate it again.\n        </Form.Text>\n      </div>\n    );\n  }\n}\n\nclass DoBlockCostModel extends AbstractParameterModel {\n\n  isValid() {\n    return true;\n  }\n\n  setEstimatedCost(estimatedCost) {\n    if (estimatedCost) {\n      estimatedCost = estimatedCost.toFixed(2);\n    }\n    this.setValue(estimatedCost);\n  }\n\n  getEstimatedCost() {\n    return this.getValue();\n  }\n}\n\nexport default {\n  type: 'doBlockCost',\n  Widget: DoBlockCostWidget,\n  Model: DoBlockCostModel\n}\n","import React from 'react';\nimport {Card} from \"react-bootstrap\";\n\nconst DraggableDesignBlockTypeList = ({componentsContainerRef, designBlockTypeDefinitions}) => (\n  <div>\n    <h5>Design blocks</h5>\n\n    <div ref={componentsContainerRef}>\n      {\n        designBlockTypeDefinitions.map(definition => {\n          return (\n            <Card key={definition.name}\n                  data-block-type-definition={JSON.stringify(definition)}\n                  className=\"mb-2\">\n              <Card.Header>{definition.displayName}</Card.Header>\n            </Card>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default DraggableDesignBlockTypeList;\n","import React, {Component} from \"react\";\nimport {Card, Collapse} from \"react-bootstrap\";\nimport './CollapsableCard.css';\n\n\nexport default class CollapsableCard extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  toggleExpansion = () => this.setState((state) => ({expanded: !state.expanded}));\n\n  render() {\n    return (\n      <Card className=\"block-card\">\n        <Card.Header>\n          <div onClick={this.toggleExpansion}>\n            <div>\n              {\n                this.props.invalid &&\n                <i className=\"fas fa-exclamation-triangle\"/>\n              }\n\n              {this.props.title}\n            </div>\n\n            <i className={`fas fa-caret-down ${this.state.expanded ? 'expanded' : 'collapsed'}`}/>\n          </div>\n        </Card.Header>\n        <Collapse in={this.state.expanded}>\n          <div>\n            <Card.Body>\n              {this.props.children}\n            </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport {Alert, Card} from \"react-bootstrap\";\nimport {Parameters} from \"./parameters\";\nimport \"./ParametersEngine.css\";\n\n/**\n * Renders components to edit the parameters of a parametrized model.\n * @param parametrizedBlock object with object with 'getId', 'getParameterDefinitionList' and ' getParameterModelsMap' methods.\n * @param onParameterModelUpdate\n * @returns {*}\n */\nexport default ({parametrizedBlock, onParameterModelUpdate, disabled, parametersInCard}) => {\n  const id = parametrizedBlock.getId();\n  const parameterModelsMap = parametrizedBlock.getParameterModelsMap();\n  const parameterDefinitions = parametrizedBlock.getParameterDefinitionList();\n\n  return (\n    <div>\n      {\n        parameterDefinitions.map((parameterDefinition) => {\n          const parameterComponent = Parameters[parameterDefinition.type];\n          const key = `${id}-${parameterDefinition.name}`;\n          const parameterModel = parameterModelsMap[parameterDefinition.name];\n\n          if (!parameterModel.shouldDisplay()) {\n            return null;\n          }\n\n          if (parameterComponent) {\n            const Component = parameterComponent.Widget;\n            return (\n              <ParameterContainer inCard={parametersInCard} title={parameterModel.getDefinition().displayName} key={key}>\n                <Component model={parameterModel}\n                           onModelUpdated={onParameterModelUpdate}\n                           disabled={disabled}/>\n              </ParameterContainer>\n            );\n          } else {\n            return <UnsupportedParameter key={key} parameter={parameterDefinition}/>\n          }\n        })\n      }\n    </div>\n  )\n};\n\nconst ParameterContainer = ({inCard, title, children}) => {\n  if (inCard) {\n    return <ParameterContainerCard title={title} children={children}/>;\n  } else {\n    return <ParameterContainerLineSeparator title={title} children={children}/>\n  }\n};\n\n\nexport const ParameterContainerCard = ({title, children}) => (\n  <Card className=\"right-sidebar-parameter\">\n    <Card.Header>{title}</Card.Header>\n    <Card.Body>\n      {children}\n    </Card.Body>\n  </Card>\n);\n\nconst ParameterContainerLineSeparator = ({title, children}) => (\n  <div className=\"parameter-container-line-separator\">\n    <h6>{title}</h6>\n    {children}\n  </div>\n);\n\nconst UnsupportedParameter = ({parameter}) => (\n  <Alert variant=\"danger\">\n    Error: Unknown parameter '{parameter.name}' of type '{parameter.type}'.\n  </Alert>\n);\n\n","import React from 'react';\nimport CollapsableCard from \"./CollapsableCard\";\nimport ParametersEngine from \"../../../ParametersEngine\";\n\nconst EditableDesignBlockList = ({componentsContainerRef, designBlocksModel, onParameterModelUpdate}) => {\n  return (\n    <div>\n      <h5>Your job design</h5>\n      <div ref={componentsContainerRef} style={{minHeight: '100px'}}>\n        {\n          designBlocksModel.getBlockModels().map(designBlockModel => {\n            return (\n              <DesignBlockConfigurator\n                designBlockTypeDefinitions={designBlocksModel.getDesignBlockTypeDefinitions()}\n                key={designBlockModel.getId()}\n                designBlockModel={designBlockModel}\n                onParameterModelUpdate={onParameterModelUpdate}/>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default EditableDesignBlockList;\n\nconst DesignBlockConfigurator = ({designBlockModel, onParameterModelUpdate}) => (\n  <div data-block-id={designBlockModel.getId()}>\n    <CollapsableCard title={designBlockModel.getDesignBlockTypeDefinition().displayName}\n                     invalid={!designBlockModel.isValid()}>\n      <ParametersEngine\n        parametrizedBlock={designBlockModel}\n        onParameterModelUpdate={onParameterModelUpdate}/>\n    </CollapsableCard>\n  </div>\n);\n","import uuid from \"uuid\";\nimport {deSerializeParameters, serializeParameters} from \"../serialization\";\n\nexport class DesignBlockModel {\n\n  id;\n  designBlockTypeDefinition;\n  parameterModelsMap;\n  initialParametersMap;\n\n  constructor(designBlockTypeDefinition, block) {\n    this.deSerialize(designBlockTypeDefinition, block);\n  }\n\n  deSerialize(designBlockTypeDefinition, block) {\n    this.setDesignBlockTypeDefinition(designBlockTypeDefinition);\n    block = DesignBlockModel.initializeBlockIfNeeded(block, designBlockTypeDefinition);\n    this.id = block.id;\n    this.type = block.type;\n    this.initialParametersMap = block.parameters;\n    this.setParameterModelsMap(deSerializeParameters(this, designBlockTypeDefinition.parameterDefinitions));\n  }\n\n  setDesignBlockTypeDefinition(designBlockTypeDefinition) {\n    this.designBlockTypeDefinition = designBlockTypeDefinition;\n  }\n\n  static initializeBlockIfNeeded (block, designBlockTypeDefinition) {\n    block = block || {};\n    block.id = block.id || uuid();\n    block.type = block.type || designBlockTypeDefinition.name;\n    block.parameters = block.parameters || {};\n    return block;\n  }\n\n  getDesignBlockTypeDefinition() {\n    return this.designBlockTypeDefinition;\n  }\n\n  serialize() {\n    return {\n      id: this.id,\n      type: this.type,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getParameterModelsMap() {\n    return this.parameterModelsMap;\n  }\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList() {\n    return this.getDesignBlockTypeDefinition().parameterDefinitions;\n  }\n\n\n  getInitialParametersMap(){\n    return this.initialParametersMap;\n  }\n}\n","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Dragula from \"dragula\";\nimport \"dragula/dist/dragula.css\";\n\nimport DraggableDesignBlockTypeList from \"./DraggableDesignBlockTypeList\";\nimport EditableDesignBlockList from \"./EditableDesignBlockList\";\nimport {DesignBlockModel} from \"../DesignBlockModel\";\n\n\n// TODO: Move in EditableDesignBlockList\nconst findSiblingIndex = (sibling, siblingsContainer) => {\n  for (let i = 0; i < siblingsContainer.children.length; i++) {\n    if (siblingsContainer.children[i] === sibling) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n\nexport default class DesignEditor extends Component {\n\n  blockTypesRef = null;\n  blocksRef = null;\n  drake = null;\n\n  constructor(props) {\n    super(props);\n    this.blockTypesRef = React.createRef();\n    this.blocksRef = React.createRef();\n  }\n\n  componentDidMount = () => this.setupDragula();\n\n  setupDragula = () => {\n    const blockTypes = this.blockTypesRef.current;\n    const blocks = this.blocksRef.current;\n    const containers = [blockTypes, blocks];\n\n    this.drake = Dragula(containers, {\n      copy: (el, source) => source === blockTypes,\n\n      // Blocks can be dragged only into the design column\n      accepts: (el, target) => target === blocks,\n\n      // Removes blocks when they are spilled (this applies only to blocks not copiable)\n      removeOnSpill: true\n    });\n\n    // TODO: Move in EditableDesignBlockList\n    this.drake.on('drop', (element, target, source, sibling) => {\n      if (target === blocks) {\n        const siblingIndex = findSiblingIndex(sibling, blocks);\n        const isAddingBlock = source === blockTypes;\n\n        if (isAddingBlock) {\n          this.onBlockAdded(element, siblingIndex);\n        } else {\n          this.onBlockSorted(element, siblingIndex);\n        }\n      }\n    });\n\n    this.drake.on('remove', (element, container) => {\n      // Dragula removed the element from the design blocks container, but react don't know this.\n      // We need to re-append the element to the container: react will re-remove it when the state gets updated\n      container.appendChild(element);\n\n      const id = element.getAttribute('data-block-id');\n      this.getModel().removeBlockById(id);\n      this.props.onModelUpdated();\n    });\n  };\n\n  onBlockAdded = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const newBlockIndex = this.getNewBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n    const newBlock = this.buildNewBlockDataGivenClonedElement(element);\n\n    this.addBlockDataToTheDesignAndNotify(newBlock, newBlockIndex);\n\n    // Dragula cloned the element from the tools container, but react don't know this. React will render a new\n    // div (for the new block added to the design), so we need to remove the block that Dragula created (the cloned div)\n    element.parentNode.removeChild(element);\n  };\n\n  assertNextSiblingIndexIsValidGivenInitialBlocks = (nextSiblingIndex) => {\n    if (nextSiblingIndex === 0 || nextSiblingIndex > this.getBlockModels().length) {\n      throw new Error('invalid nextSiblingIndex given the current blocks array');\n    }\n  };\n\n  getNewBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length : nextSibling - 1;\n\n  buildNewBlockDataGivenClonedElement = (element) => {\n    const designBlockTypeDefinition = JSON.parse(element.getAttribute('data-block-type-definition'));\n    return new DesignBlockModel(designBlockTypeDefinition);\n  };\n\n  addBlockDataToTheDesignAndNotify = (newBlock, newBlockIndex) => {\n    this.getModel().addBlock(newBlock, newBlockIndex);\n    this.forceUpdate();\n  };\n\n  onBlockSorted = (element, nextSiblingIndex) => {\n    this.assertNextSiblingIndexIsValidGivenInitialBlocks(nextSiblingIndex);\n\n    const blockAIndex = this.getMovedBlockIndex(element);\n    const blockBIndex = this.getBlockIndexGivenNextSiblingIndex(nextSiblingIndex);\n\n    this.getModel().swapBlocks(blockAIndex, blockBIndex);\n    this.props.onModelUpdated();\n  };\n\n\n  getMovedBlockIndex = (element) => {\n    const blocks = this.getModel().getBlocks();\n    const id = element.getAttribute('data-block-id');\n\n    return blocks.findIndex(block => block.id === id);\n  };\n\n  getBlockIndexGivenNextSiblingIndex = (nextSibling) => nextSibling === -1 ? this.getBlockModels().length - 1 : nextSibling - 1;\n\n  getModel() {\n    return this.props.designBlocksModel;\n  }\n\n  getBlockModels () {\n    return this.getModel().getBlockModels();\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col md=\"6\" lg=\"4\">\n          <DraggableDesignBlockTypeList designBlockTypeDefinitions={this.getModel().getDesignBlockTypeDefinitions()}\n                                        componentsContainerRef={this.blockTypesRef}/>\n        </Col>\n\n        <Col md=\"6\" lg=\"8\">\n          <EditableDesignBlockList componentsContainerRef={this.blocksRef}\n                                   designBlocksModel={this.getModel()}\n                                   onParameterModelUpdate={this.props.onModelUpdated}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nimport {Button, Modal} from 'react-bootstrap';\nimport DesignEditor from \"./DesignEditor/DesignEditor\";\n\n\nexport class DesignBlocksEditorModalAndButton extends Component {\n\n  /**\n   * To not propagate every update on the DesignBlocks to the workflow Blocks, we clone the BlocksModel.\n   */\n  designBlocksClonedModel;\n\n  state = {\n    show: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n  }\n\n  /**\n   * If the user picks a template, we need to update get a new clone of the BlocksModel\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.templateJustPicked) {\n      this.designBlocksClonedModel = this.cloneDesignBlocksModel();\n      this.props.onModelUpdated();\n    }\n  }\n\n  getModel() {\n    return this.props.designModel;\n  }\n\n  cloneDesignBlocksModel() {\n    return this.getModel().getBlocksModel().clone();\n  }\n\n  showModal = () => this.setState({show: true});\n\n  hideModal = () => this.setState({show: false});\n\n  /**\n   * When the user clicks on the 'save' button, we need to get the DoDesignModel and set the clones BlocksModel\n   */\n  onSave = () => {\n    this.getModel().setBlocksModel(this.designBlocksClonedModel);\n    this.props.onModelUpdated();\n    this.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <DesignBlocksEditorModal show={this.state.show}\n                                 designBlocksModel={this.designBlocksClonedModel}\n                                 onClose={this.hideModal}\n                                 onSave={this.onSave}/>\n\n        <Button className=\"btn-block\" onClick={this.showModal} disabled={this.props.disabled}>\n          {this.props.buttonText}\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nclass DesignBlocksEditorModal extends Component {\n\n\n  render() {\n    const {designBlocksModel, onSave, onClose} = this.props;\n\n    return (\n      <Modal show={this.props.show} size=\"lg\">\n        <Modal.Header>Do block design editor</Modal.Header>\n\n        <Modal.Body>\n          <DesignEditor designBlocksModel={designBlocksModel}\n                        onModelUpdated={() => {\n                          // Since we don't have a state to update but we change the models, we need to tell react to\n                          // render again the components\n                          this.forceUpdate()\n                        }}/>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button onClick={onSave} disabled={!designBlocksModel.isValid()}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n","import {DesignBlockModel} from \"./DesignBlockModel\";\n\nexport class DesignBlocksModel {\n\n  designBlockTypeDefinitions;\n  blockModels;\n\n  constructor(designBlockTypeDefinitions, blocks) {\n    this.deSerialize(designBlockTypeDefinitions, blocks);\n  }\n\n  deSerialize(designBlockTypeDefinitions, blocks) {\n    this.setDesignBlockTypeDefinitions(designBlockTypeDefinitions);\n    this.setBlockModels(blocks.map(block => new DesignBlockModel(\n      this.getDesignBlockTypeDefinition(block.type),\n      block\n    )));\n  }\n\n  setDesignBlockTypeDefinitions(designBlockTypeDefinitions) {\n    this.designBlockTypeDefinitions = designBlockTypeDefinitions;\n  }\n\n  getDesignBlockTypeDefinition(designBlockType) {\n    return this.getDesignBlockTypeDefinitions().find(definition => definition.name === designBlockType);\n  }\n\n  getDesignBlockTypeDefinitions() {\n    return this.designBlockTypeDefinitions;\n  }\n\n  getBlockModels() {\n    return this.blockModels;\n  }\n\n  setBlockModels(blockModels) {\n    this.blockModels = blockModels;\n  }\n\n  clone() {\n    return new DesignBlocksModel(this.getDesignBlockTypeDefinitions(), this.serialize());\n  }\n\n  serialize() {\n    return this.getBlockModels().map(designBlock => designBlock.serialize());\n  }\n\n  isDesignEmpty() {\n    return this.getBlockModels().length === 0;\n  }\n\n  addBlock(newBlock, newBlockIndex) {\n    this.getBlockModels().splice(newBlockIndex, 0, newBlock);\n  }\n\n  swapBlocks(a, b) {\n    const blocks = this.getBlockModels();\n    const temp = blocks[a];\n    blocks[a] = blocks[b];\n    blocks[b] = temp;\n  }\n\n  removeBlockById(id) {\n    const blocks = this.getBlockModels();\n    const index = blocks.findIndex(block => block.id === id);\n    if (index >= 0) {\n      blocks.splice(index, 1);\n    }\n  }\n\n  isValid() {\n    return this.getBlockModels().find(block => !block.isValid()) == null;\n  }\n}\n","import AbstractParameterModel from \"../../AbstractParameterModel\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nexport class DoDesignModel extends AbstractParameterModel {\n\n  blocksModel;\n\n  deSerialize(definition, block) {\n    super.deSerialize(definition, block);\n    this.setBlocksModel(new DesignBlocksModel(\n      definition.designBlockTypeDefinitions,\n      this.getDesign().blocks\n    ));\n  }\n\n  serialize() {\n    return {\n      blocks: this.getBlocksModel().serialize()\n    };\n  }\n\n  getDesign() {\n    return this.getValue();\n  }\n\n  getBlocksModel() {\n    return this.blocksModel;\n  }\n\n  setBlocksModel(blocksModel) {\n    this.blocksModel = blocksModel;\n  }\n\n  isValid() {\n    return this.getBlocksModel().isValid();\n  }\n\n  isDesignEmpty() {\n    return this.getBlocksModel().isDesignEmpty();\n  }\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst DO_DESIGN_TEMPLATE_URL = `${API_URL}/template-do`;\n\nexport const JSONtoDoDesignTemplate = ({id, data}) => ({\n  id,\n  ...data\n});\n\nexport default {\n  async getDoDesignTemplates() {\n    const jsonList = await getJSON(DO_DESIGN_TEMPLATE_URL);\n    return jsonList.map(JSONtoDoDesignTemplate);\n  }\n}\n","import React, {Component} from 'react';\nimport {Alert, Button, Card, Col, Container, Modal, Row} from 'react-bootstrap';\n\nimport DoDesignTemplatesService from \"../../../../../../../Services/rest/DoDesignTemplatesService\";\nimport {makeCancellable} from \"../../../../../../../Services/rest/utils\";\nimport {DesignBlocksModel} from \"./DesignBlocksModel\";\n\nconst HIDE_ANIMATION_DURATION = 150;\n\nexport class PickDesignTemplateModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShow = () => this.setState({show: true});\n\n  onHide = (afterHided) => this.setState({show: false}, () => setTimeout(afterHided, HIDE_ANIMATION_DURATION));\n\n  onDesignBlocksModelPicked = (blocksModel) => this.onHide(() => {\n    this.getDesignModel().setBlocksModel(blocksModel);\n    this.props.onModelUpdated()\n  });\n\n\n  getDesignBlockTypeDefinitions() {\n    return this.getDesignModel().getBlocksModel().getDesignBlockTypeDefinitions();\n  }\n\n  getDesignModel() {\n    return this.props.designModel;\n  }\n\n  render() {\n    return (\n      <div>\n        <PickDesignTemplateModal show={this.state.show}\n                                 onHide={this.onHide}\n                                 onDesignBlocksModelPicked={this.onDesignBlocksModelPicked}\n                                 designBlockTypeDefinitions={this.getDesignBlockTypeDefinitions()}/>\n\n        <Button variant=\"success\" onClick={this.onShow} className=\"btn-block mb-2\" disabled={this.props.disabled}>\n          Create from a template\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport class PickDesignTemplateModal extends Component {\n\n  state = {\n    templates: null,\n    fetchError: false\n  };\n\n  componentDidMount = () => this.fetchTemplates();\n\n  componentWillUnmount = () => this.pendingTemplatesRequest.cancel();\n\n  fetchTemplates = async () => {\n    this.setState({fetchError: false});\n    try {\n      this.pendingTemplatesRequest = makeCancellable(DoDesignTemplatesService.getDoDesignTemplates());\n      const templates = await this.pendingTemplatesRequest.result;\n      this.setState({templates});\n    } catch (e) {\n      this.setState({fetchError: true});\n    }\n  };\n\n  onTemplatePicked = (template) => {\n    const blocksModel = new DesignBlocksModel(this.props.designBlockTypeDefinitions, template.blocks);\n    this.props.onDesignBlocksModelPicked(blocksModel);\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} size=\"lg\">\n        <Modal.Header>Pick a design template</Modal.Header>\n\n        <Modal.Body>\n          {\n            this.state.fetchError &&\n            <FetchTemplatesError/>\n          }\n\n          {\n            !this.state.templates && !this.state.fetchError &&\n            <FetchingTemplates/>\n          }\n\n          {\n            this.state.templates &&\n            <TemplateList templates={this.state.templates} onTemplatePicked={this.onTemplatePicked}/>\n          }\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst FetchTemplatesError = () => (\n  <Alert variant=\"danger\">\n    There's been an error while fetching the templates\n  </Alert>\n);\n\nconst FetchingTemplates = () => (\n  <p>Loading...</p>\n);\n\nconst TemplateList = ({templates, onTemplatePicked}) => (\n  <Container>\n    <Row>\n      {\n        templates.map(template => (\n          <Col xs={12} sm={6} key={template.id} className=\"mb-2\">\n            <Card>\n              <Card.Header>{template.name}</Card.Header>\n              <Card.Body>{template.description}</Card.Body>\n              <Card.Footer>\n                <Button onClick={() => onTemplatePicked(template)}>Choose</Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))\n      }\n    </Row>\n  </Container>\n);\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\n\nimport {DesignBlocksEditorModalAndButton} from \"./DesignBlocksEditorModal\";\nimport {DoDesignModel} from \"./DoDesignModel\";\nimport {PickDesignTemplateModalAndButton} from \"./PickDesignTemplateModal\";\n\n\nclass DoDesignWidget extends Component {\n\n  state = {\n    templateJustPicked: false\n  };\n\n  getModel() {\n    return this.props.model;\n  }\n\n  onModelUpdatedFromTemplate = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: true});\n  };\n\n  onModelUpdatedFromEditor = () => {\n    this.props.onModelUpdated();\n    this.setState({templateJustPicked: false});\n  };\n\n  render() {\n    const model = this.getModel();\n    const definition = model.getDefinition();\n\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          {definition.description}\n        </Form.Text>\n\n        {\n          model.isDesignEmpty() &&\n          <PickDesignTemplateModalAndButton designModel={model}\n                                            onModelUpdated={this.onModelUpdatedFromTemplate}\n                                            disabled={this.props.disabled}/>\n        }\n\n        <DesignBlocksEditorModalAndButton designModel={model}\n                                          onModelUpdated={this.onModelUpdatedFromEditor}\n                                          buttonText={model.isDesignEmpty() ? 'Create from scratch' : 'Open design editor'}\n                                          templateJustPicked={this.state.templateJustPicked}\n                                          disabled={this.props.disabled}/>\n      </div>\n    );\n  }\n}\n\n\nexport default {\n  type: 'doDesign',\n  Model: DoDesignModel,\n  Widget: DoDesignWidget\n}\n\n","import {PrimitiveParameters} from './primitive';\nimport DoDesign from \"./DoDesign\";\n\nexport const Parameters = {\n  ...PrimitiveParameters,\n\n\n  // composed parameters:\n  [DoDesign.type]: DoDesign\n};\n\nexport const getModelByType = (type) => {\n  const parameter = Parameters[type];\n  if (!parameter) {\n    throw new Error(`unknown parameter of type '${type}'`);\n  }\n  return parameter.Model;\n};\n","import {getModelByType} from \"./index\";\n\n/**\n * Given a parametrized model and the parameter definitions, created a map of parameter models.\n * @param blockModel\n * @param parameterDefinitions\n */\nexport const deSerializeParameters = (blockModel, parameterDefinitions) => {\n  const parameterModelsMap = {};\n  parameterDefinitions.forEach(definition => {\n    const name = definition.name;\n    const Model = getModelByType(definition.type);\n    parameterModelsMap[name] = new Model(definition, blockModel);\n  });\n  return parameterModelsMap;\n};\n\n/**\n * Given the parameter models map created with 'deSerializeParameters' returns a map with the parameter values\n * @param parameterModelsMap\n */\nexport const serializeParameters = (parameterModelsMap) => {\n  const parameters = {};\n  Object.keys(parameterModelsMap).forEach(name => parameters[name] = parameterModelsMap[name].serialize());\n  return parameters;\n};\n","import {DefaultNodeModel} from \"storm-react-diagrams\";\nimport {deSerializeParameters, serializeParameters} from \"../../ParametersEngine/parameters/serialization\";\nimport uuid from \"uuid\";\nimport Runs from \"../../../../../../Services/RunnableWorkflowService/models/Runs\";\n\n\nexport class DefaultBlockNodeModel extends DefaultNodeModel {\n\n  label;\n  blockTypeDefinition;\n  initialParametersMap;\n  parameterModelsMap;\n\n  latestBlockRun;\n  blockRuns = [];\n  _runs = new Runs([]);\n\n  deSerialize(block, engine) {\n    if (!block.id) {\n      this.initializeBlockWithIds(block, engine);\n    }\n    super.deSerialize(block, engine);\n    this.setLabel(block.label);\n    this.blockTypeDefinition = engine.getBlockTypeDefinition(block.type);\n    this.initialParametersMap = block.parameters || {};\n    this.setParameterModelsMap(deSerializeParameters(this, this.getParameterDefinitionList()));\n  }\n\n  initializeBlockWithIds(block, engine) {\n    block.id = uuid();\n    block.label = engine.getModel().getNextBlockLabel();\n    block.ports = block.ports.map(port => ({\n      ...port,\n      id: uuid()\n    }));\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      label: this.getLabel(),\n      type: this.blockTypeDefinition.name,\n      parameters: serializeParameters(this.getParameterModelsMap())\n    }\n  }\n\n  isValid = () => Object.values(this.getParameterModelsMap()).find(parameter => !parameter.isValid()) == null;\n\n  getId = () => this.id;\n\n  getLabel = () => this.label;\n\n  setId = (id) => this.id = id;\n\n  setLabel = (label) => this.label = label;\n\n  getColor() {\n    return '#F7F7F7'\n  };\n\n  getPortsAsList () {\n    return Object.values(this.getPorts());\n  }\n\n  getParameterModelsMap = () => this.parameterModelsMap;\n\n  setParameterModelsMap(parameterModelsMap) {\n    this.parameterModelsMap = parameterModelsMap;\n  }\n\n  getParameterDefinitionList = () => this.blockTypeDefinition.parameterDefinitions;\n\n  getInitialParametersMap = () => this.initialParametersMap;\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? runs.getLatestRun().getBlockRun(this.getId()) : null; // TODO: To clear\n    this.blockRuns = runs.getBlockRuns(this.getId());\n  };\n\n\n  getBlockRuns = () => this.blockRuns;\n\n  getLatestRun = () => this.latestBlockRun;\n\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.latestBlockRun;\n\n  isRunning = () => this.wasStarted() && this.getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getLatestRun().isFinished();\n\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => 1 + DefaultBlockNodeModel.getAllParentBlocks(this).length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isRunning())\n      .length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () =>\n    [this, ...DefaultBlockNodeModel.getAllParentBlocks(this)]\n      .filter(block => block.isFinished())\n      .length;\n\n  // TODO: clear\n  canStart = () => !this.isRunning() && (this._runs.getLatestRun() == null || !this._runs.getLatestRun().isRunning());\n\n  canBeEdited = () => !this.isRunning();\n\n\n  getFinishedRuns = () => this.blockRuns.filter(blockRun => blockRun.isFinished());\n\n\n  /**\n   * @returns {NodeModel[]} parent blocks of this block\n   */\n  getParentBlocks = () =>\n    Object.values(this.getPort('in').getLinks())\n      .map(link => link.getSourcePort().getNode());\n\n  /**\n   * Recursively finds all the parents (ascendents) of a block.\n   * @param block\n   * @param parents array of parents already found\n   * @returns {Array} all the parents of a block\n   */\n  static getAllParentBlocks = (block, parents = []) => {\n    const blockParents = block.getParentBlocks();\n    if (blockParents.length > 0) {\n      parents.push(...blockParents);\n      blockParents.forEach(parent => DefaultBlockNodeModel.getAllParentBlocks(parent, parents));\n    }\n    return parents;\n  };\n\n}\n\n","import React from 'react';\nimport {DefaultNodeWidget, PortWidget} from \"storm-react-diagrams\";\nimport {Card, Spinner} from \"react-bootstrap\";\nimport './DefaultBlockNode.css';\nimport {getTextColorVisibleOnBackground} from \"../../../../../utils/colors\";\n\nexport class DefaultBlockNodeWidget extends DefaultNodeWidget {\n\n  render() {\n    const {node} = this.props;\n\n    return (\n      <Card className=\"block\" style={{\n        backgroundColor: node.getColor(),\n        color: getTextColorVisibleOnBackground(node.getColor())\n      }}>\n        <Card.Header>\n          <PortWidget name=\"in\" node={node}/>\n\n          <div className=\"block-name\">\n            {node.name}\n          </div>\n\n          <PortWidget name=\"out\" node={node}/>\n\n          <div className=\"flags-container\">\n            {\n              /* completed */\n              node.isFinished() &&\n              <i className=\"fas fa-check-circle\"/>\n            }\n\n\n            {\n              /* running */\n              node.isRunning() &&\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n\n\n            {\n              /* runtime error */\n              node.isFailed() &&\n              <i className=\"fas fa-exclamation-circle error\"/>\n\n            }\n\n            {\n              /* invalid block parameters */\n              !node.isValid() &&\n              <i className=\"fas fa-exclamation-triangle error\"/>\n            }\n          </div>\n        </Card.Header>\n      </Card>\n    );\n  }\n}\n\n","import {DefaultNodeFactory} from \"storm-react-diagrams\";\nimport {DefaultBlockNodeModel} from \"../models/DefaultBlockNodeModel\";\nimport React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\n\nexport class DefaultBlockNodeFactory extends DefaultNodeFactory {\n\n  blockType;\n\n  static supportsBlockType (blockType) {\n    return true;\n  }\n\n  constructor(blockType) {\n    super(`${blockType}Factory`);\n    this.setBlockType(blockType);\n  }\n\n  setBlockType(blockType) {\n    this.blockType = blockType;\n  }\n\n  getType() {\n    return this.getBlockType();\n  }\n\n  getBlockType() {\n    return this.blockType;\n  }\n\n  getNewInstance() {\n    return new DefaultBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {RunStates} from \"../models/BlockRun\";\n\nconst {FAILED, RUNNING, FINISHED, NOT_STARTED} = RunStates;\n\nexport class DoBlockRunAdapter {\n\n  blockId;\n  publishRun;\n  waitRun;\n\n  constructor(run, blockId) {\n    this.blockId = blockId;\n    this.publishRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, blockId);\n    this.waitRun = DoBlockRunAdapter._getBlockRunOrNotStarted(run, `${blockId}_wait`);\n  }\n\n  static _getBlockRunOrNotStarted = (run, blockId) => run.getBlockRun(blockId) || {getState: () => NOT_STARTED};\n\n  static adaptRuns(runs, blockId) {\n    return runs.runs.map(run => new DoBlockRunAdapter(run, blockId));\n  }\n\n  getBlockId = () => this.blockId;\n\n  getRunId = () => this.publishRun.getRunId();\n\n  getCacheId = () => this.publishRun.getCacheId();\n\n  isRunning = () => this.publishRun.getState() === RUNNING || this.waitRun.getState() === RUNNING;\n\n  isFailed = () => this.publishRun.getState() === FAILED || this.waitRun.getState() === FAILED;\n\n  isFinished = () => this.publishRun.getState() === FINISHED && this.waitRun.getState() === FINISHED;\n\n}\n","import {DefaultBlockNodeModel} from \"./DefaultBlockNodeModel\";\nimport {DoBlockRunAdapter} from \"../../../../../../Services/RunnableWorkflowService/adapters/DoBlockRunAdapter\";\n\nexport class DoBlockNodeModel extends DefaultBlockNodeModel {\n\n\n  setRuns(runs) {\n    this._runs = runs;\n    this.latestBlockRun = runs.getLatestRun() ? new DoBlockRunAdapter(runs.getLatestRun(), this.getId()) : null;\n    this.blockRuns = DoBlockRunAdapter.adaptRuns(runs, this.getId());\n  }\n\n\n  getColor () {\n    const blockingContextModel = this.getBlockingContextModelParameter();\n    if (!blockingContextModel.isBlockingContextSelected()) {\n      return super.getColor();\n    }\n    return this.getBlockingContexts().getBlockingContextById(\n      blockingContextModel.getBlockingContextId()\n    ).color;\n  }\n\n  getBlockingContextModelParameter () {\n    return this.getParameterModelsMap()['blockingContextId'];\n  }\n\n  getBlockingContexts () {\n    return this.parent.getBlockingContexts();\n  }\n}\n\n\n","import {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeFactory} from \"./DoBlockNodeFactory\";\n\nconst nodeFactories = [\n  DoBlockNodeFactory,\n  DefaultBlockNodeFactory\n];\n\nexport default {\n  getNodeFactoryForBlockType (blockType) {\n     return nodeFactories.find(Factory => Factory.supportsBlockType(blockType));\n  }\n}\n","import React from \"react\";\nimport {DefaultBlockNodeWidget} from \"../widgets/DefaultBlockNodeWidget\";\nimport {DefaultBlockNodeFactory} from \"./DefaultBlockNodeFactory\";\nimport {DoBlockNodeModel} from \"../models/DoBlockNodeModel\";\n\nexport class DoBlockNodeFactory extends DefaultBlockNodeFactory {\n\n  static supportsBlockType (blockType) {\n    return blockType === \"do\";\n  }\n\n  constructor(blockType) {\n    super(`DoBlock`);\n    this.setBlockType(blockType);\n  }\n\n  getNewInstance() {\n    return new DoBlockNodeModel();\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return React.createElement(DefaultBlockNodeWidget, {\n      node,\n      diagramEngine\n    });\n  }\n}\n","import {DefaultPortModel} from \"storm-react-diagrams\";\n\nexport default class BlockPortModel extends DefaultPortModel {\n\n  canLinkToPort(port) {\n    if (!super.canLinkToPort(port)) {\n      return false;\n    }\n    const linkWouldCreateRecursiveDependence = BlockPortModel.blockDependsOnItself(this.getBlock());\n    if (linkWouldCreateRecursiveDependence) {\n      console.info(\"Link prevented to avoid recursive dependencies\");\n    }\n    return !linkWouldCreateRecursiveDependence;\n  }\n\n  getBlock() {\n    return this.parent;\n  }\n\n  getConnectedBlocks() {\n    return this.getLinksAsList()\n      .map(link => link.sourcePort === this ? link.targetPort : link.sourcePort)\n      .map(port => port.getBlock());\n  }\n\n  getLinksAsList() {\n    return Object.values(this.getLinks());\n  }\n\n  static blockDependsOnItself(block, visitedBlockIds = {}) {\n    visitedBlockIds[block.getId()] = true;\n    const outPort = block.getPort('out');\n    const connectedBlocks = outPort.getConnectedBlocks();\n    for (let connectedBlock of connectedBlocks) {\n      if (visitedBlockIds[connectedBlock.getId()]) {\n        return true;\n      }\n      if (BlockPortModel.blockDependsOnItself(connectedBlock, visitedBlockIds)) {\n        return true;\n      }\n    }\n    visitedBlockIds[block.getId()] = false;\n    return false;\n  }\n\n}\n","import {DefaultPortFactory} from \"storm-react-diagrams\";\nimport BlockPortModel from \"../models/BlockPortModel\";\n\nexport default class BlockPortFactory extends DefaultPortFactory{\n\n  getNewInstance(initialConfig) {\n    return new BlockPortModel();\n  }\n}\n","import {DefaultLabelFactory, DiagramEngine} from \"storm-react-diagrams\";\nimport BlackLinkFactory from \"./factories/BlackLinkFactory\";\nimport nodeFactories from \"./factories/nodeFactories\";\nimport BlockPortFactory from \"./factories/BlockPortFactory\";\n\nexport class WorkflowGraphEngine extends DiagramEngine {\n\n  blockTypeDefinitions;\n\n  constructor(blockTypeDefinitions) {\n    super();\n    this.setBlockTypeDefinitions(blockTypeDefinitions);\n    this.registerFactories();\n  }\n\n  setBlockTypeDefinitions(blockTypeDefinitions) {\n    this.blockTypeDefinitions = blockTypeDefinitions;\n  }\n\n  registerFactories() {\n    this.registerLinkFactory(new BlackLinkFactory());\n    this.registerPortFactory(new BlockPortFactory());\n    this.registerLabelFactory(new DefaultLabelFactory());\n    this.registerNodeFactories();\n  }\n\n  registerNodeFactories () {\n    this.getBlockTypeDefinitions().forEach(blockTypeDefinition => {\n      const Factory = nodeFactories.getNodeFactoryForBlockType(blockTypeDefinition.name);\n      this.registerNodeFactory(new Factory(blockTypeDefinition.name));\n    });\n  }\n\n  getBlockTypeDefinitions() {\n    return this.blockTypeDefinitions;\n  }\n\n  getBlockTypeDefinition(blockType) {\n    return this.getBlockTypeDefinitions().find(definition => definition.name === blockType);\n  }\n\n  getModel() {\n    return this.getDiagramModel();\n  }\n\n}\n","import React, {Component} from 'react';\nimport {Alert} from \"react-bootstrap\";\nimport {DiagramWidget} from \"storm-react-diagrams\";\nimport 'storm-react-diagrams/dist/style.min.css';\n\nimport './WorkflowGraphEditor.css'\nimport {WorkflowGraphEngine} from \"./WorkflowGraphEngine\";\n\nexport default class WorkflowGraphEditor extends Component {\n\n  engine;\n\n  state = {\n    deserializationError: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.initGraph();\n  }\n\n  componentDidMount() {\n    this.deserializeGraph(this.props.initialGraph);\n  }\n\n  initGraph = () => {\n    this.engine = new WorkflowGraphEngine(this.props.blockTypeDefinitions);\n    this.engine.setDiagramModel(this.getModel());\n    this.engine.blockTypeDefinitions = this.props.blockTypeDefinitions;\n  };\n\n  deserializeGraph = (graph) => {\n    if (graph && graph.id) {\n      try {\n        this.getModel().deSerializeDiagram(graph, this.engine);\n        this.addSelectedListenerToNodesOfModel();\n      } catch (e) {\n        this.setState({deserializationError: true});\n        console.error('[WorkflowGraphEditor] deserialization error', e);\n      }\n    }\n  };\n\n  addSelectedListenerToNodesOfModel = () => {\n    Object.values(this.getModel().getNodes())\n      .forEach(this.addSelectedListener);\n  };\n\n  onDrop = (event) => {\n    if (this.isEventCausedByADroppedBlockType(event)) {\n      this.onBlockTypeDropped(event);\n    }\n  };\n\n  isEventCausedByADroppedBlockType = (event) => !!this.getBlockTypeDefinitionFromEvent(event);\n\n  onBlockTypeDropped = (event) => {\n    const blockTypeDefinition = this.getBlockTypeDefinitionFromEvent(event);\n    const position = this.getMousePosition(event);\n    this.createNodeFromDroppedBlockType(blockTypeDefinition, position);\n  };\n\n  getBlockTypeDefinitionFromEvent = (event) => JSON.parse(event.dataTransfer.getData('blockTypeDefinition'));\n\n  getMousePosition = (event) => this.engine.getRelativeMousePoint(event);\n\n  createNodeFromDroppedBlockType = (blockTypeDefinition, position) => {\n    const node = this.createNodeFromBlockType(blockTypeDefinition, position);\n    this.addNodeToGraph(node, blockTypeDefinition);\n  };\n\n  createNodeFromBlockType = (blockTypeDefinition, position) => { // TODO: Simplify\n    const type = blockTypeDefinition.name;\n    const factory = this.engine.getNodeFactory(type);\n    const node = factory.getNewInstance();\n    node.parent = this.getModel(); // TODO: Can we rename this?\n    node.deSerialize({ // I don't want to copy the id\n      name: blockTypeDefinition.displayName,\n      type: blockTypeDefinition.name,\n      ports: blockTypeDefinition.ports,\n      color: blockTypeDefinition.color,\n\n      x: position.x,\n      y: position.y\n    }, this.engine);\n    return node;\n  };\n\n\n  addNodeToGraph = (node) => {\n    this.addSelectedListener(node);\n    this.getModel().addNode(node);\n    this.props.onModelUpdate();\n  };\n\n  addSelectedListener = (node) => node.addListener({\n    selectionChanged: this.onSelectedNodeChanged,\n    entityRemoved: this.onSelectedNodeChanged\n  });\n\n  onSelectedNodeChanged = () => {\n    const selectedNodes = this.getSelectedNodes();\n    if (selectedNodes.length === 1) {\n      const node = selectedNodes[0];\n      this.props.onBlockSelected(node);\n    } else {\n      this.props.onBlockSelected(null);\n    }\n  };\n\n  getSelectedNodes = () => this.getModel().getSelectedItems('node');\n\n  getModel = () => this.props.graphModel;\n\n  render() {\n    if (this.state.deserializationError) {\n      return <GraphDeserializationError/>\n    } else {\n      return (\n        <div onDrop={this.onDrop}\n             onDragOver={event => event.preventDefault()}\n             className=\"diagram-widget-container\">\n          <DiagramWidget diagramEngine={this.engine}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nconst GraphDeserializationError = () => (\n  <div className=\"deserialization-error-container\">\n    <Alert className=\"deserialization-error\" variant=\"danger\">\n      Can't deserialize graph.\n    </Alert>\n  </div>\n);\n","import React from 'react';\nimport {Card, Col, Row} from \"react-bootstrap\";\n\n\nconst DraggableBlockTypeListSidebar = ({blockTypeDefinitions}) => (\n  <div>\n    <h5>Blocks</h5>\n\n    <Row>\n      <Col>\n        {\n          blockTypeDefinitions.map(blockTypeDefinitions => (\n            <Card\n              className=\"mb-2\"\n              key={blockTypeDefinitions.id}\n              draggable\n              onDragStart={event => event.dataTransfer.setData('blockTypeDefinition', JSON.stringify(blockTypeDefinitions))}>\n              <Card.Header className=\"btn-block d-flex justify-content-center\">\n                {blockTypeDefinitions.displayName}\n              </Card.Header>\n            </Card>\n          ))\n        }\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default DraggableBlockTypeListSidebar;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport default class NameAndDescriptionFields extends Component {\n\n\n  constructor(props) {\n    super(props);\n    const {name, description} = props.workflow;\n    this.state = {\n      name,\n      description\n    }\n  }\n\n  onChangeName = (event) => this.setState({\n    name: event.target.value\n  });\n\n  onChangeDescription = (event) => this.setState({\n    description: event.target.value\n  });\n\n  onBlur = () => this.props.onEdit({\n    ...this.props.workflow,\n    name: this.state.name || this.props.name,\n    description: this.state.description || this.props.description\n  });\n\n\n  render() {\n    return (\n      <div>\n        {/* Name */}\n\n        <ParameterContainerCard title=\"Name\">\n          <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.onChangeName}\n                        onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n\n        <ParameterContainerCard title=\"Description\">\n          <Form.Control name=\"description\" type=\"text\" as=\"textarea\" value={this.state.description}\n                        onChange={this.onChangeDescription} onBlur={this.onBlur} disabled={this.props.disabled}/>\n        </ParameterContainerCard>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {ButtonGroup, ButtonToolbar, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\nimport './ResultDownloader.css';\n\n// TODO: Move this declaration on Service\nconst DownloadFormats = ['json', 'csv'];\n\nexport default class ResultDownloader extends Component {\n\n  state = {\n    downloadFormat: DownloadFormats[0]\n  };\n\n  onChangeDownloadFormat = (downloadFormat) => this.setState({downloadFormat});\n\n  render() {\n    const {runnable, downloadLinkFactory} = this.props;\n    if (runnable.getFinishedRuns().length <= 0) {\n      return (\n        <NoResultsMessage/>\n      );\n    }\n    const selectedFormat = this.state.downloadFormat;\n    const latestFinishedRun = runnable.getFinishedRuns()[0];\n    return (\n      <div>\n        Download results as\n\n        <ButtonToolbar className=\"mt-2 mb-1 format-toggle-group\">\n          <ToggleButtonGroup type=\"radio\"\n                             name=\"downloadFormat\"\n                             defaultValue={DownloadFormats[0]}\n                             onChange={this.onChangeDownloadFormat}>\n            {\n              DownloadFormats.map(format => (\n                <ToggleButton key={format} value={format}>{format.toUpperCase()}</ToggleButton>\n              ))\n            }\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n\n        <Dropdown as={ButtonGroup} className=\"btn-block\">\n          <LatestDownloadButton link={downloadLinkFactory(latestFinishedRun, selectedFormat)}\n                                isLatest={!runnable.isRunning()}\n                                id={latestFinishedRun.getRunId()}/>\n\n          <Dropdown.Toggle split variant=\"success\"/>\n\n          <Dropdown.Menu>\n            {\n              runnable.getFinishedRuns().map((run, index) => (\n                <DropdownDownload key={run.getRunId()}\n                                  link={downloadLinkFactory(run, selectedFormat)}\n                                  isLatest={!runnable.isRunning() && index === 0}\n                                  id={run.getRunId()}/>\n              ))\n            }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport const NoResultsMessage = () => (<span>No results available yet</span>);\n\nexport const LatestDownloadButton = ({link, isLatest, id}) => (\n  <a className=\"btn btn-success\" style={{color: 'white'}} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n    {isLatest ? 'Download latest results' : `Download #${id}`}\n  </a>\n);\n\nexport const DropdownDownload = ({link, isLatest, id}) => (\n  <Dropdown.Item href={link} target=\"_blank\">\n    #{id} {isLatest ? '- Latest ' : ''}\n  </Dropdown.Item>\n);\n","import React from \"react\";\nimport {Card, ProgressBar} from \"react-bootstrap\";\n\nimport ResultDownloader from \"./ResultDownloader\";\nimport LoadingButton from \"../../../../../common/LoadingButton\";\nimport \"./RunsControls.css\";\n\nexport default (props) => (\n  <div>\n    {\n      !props.readOnly &&\n      <ExecutionCard {...props}/>\n    }\n\n    <ResultsCard {...props}/>\n  </div>\n);\n\nconst ExecutionCard = ({runnable, downloadLinkFactory, onStart, isStarting, startText}) => (\n  <Card>\n    <Card.Header>Execution</Card.Header>\n\n    <Card.Body>\n      {\n        runnable.isRunning() &&\n        <div>\n          Workflow is currently running (run #{runnable.getLatestRun().getRunId()}).<br/>\n          Progress:<br/>\n          <RunsProgressBar runnable={runnable}/>\n        </div>\n      }\n\n      <LoadingButton block onClick={onStart}\n                     disabled={!runnable.canStart()}\n                     isLoading={isStarting}>{startText}</LoadingButton>\n\n    </Card.Body>\n  </Card>\n);\n\nconst ResultsCard = ({runnable, downloadLinkFactory}) => (\n  <Card className=\"mt-2\">\n    <Card.Header>Results</Card.Header>\n    <Card.Body>\n      <ResultDownloader downloadLinkFactory={downloadLinkFactory}\n                        runnable={runnable}/>\n    </Card.Body>\n  </Card>\n);\n\nconst RunsProgressBar = ({runnable}) => {\n  const finishedPercentage = Math.ceil(runnable.getFinishedBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  const runningPercentage = Math.ceil(runnable.getRunningBlocksCount() / runnable.getRunnableBlocksCount() * 100);\n  return (\n    <div>\n      <ProgressBar className=\"progress-bars-container\">\n        <ProgressBar animated variant=\"primary\" now={Math.max(1, finishedPercentage)} key={1}/>\n        <ProgressBar animated variant=\"success\" now={runningPercentage} key={2}/>\n      </ProgressBar>\n\n      {/* Legend */}\n      <div className=\"progress-bar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-primary progress-bar-striped\"/>\n          Finished blocks\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"progress-bar-sample progress-bar bg-success progress-bar-striped\"/>\n          Running blocks\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\n\nimport RunsService from \"../../../../../../Services/rest/RunsService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\nimport WorkflowsService from \"../../../../../../Services/rest/WorkflowsService\";\nimport {Alert} from \"react-bootstrap\";\n\nexport default class WorkflowRunsControls extends Component {\n\n  state = {\n    isStarting: false,\n    startError: false\n  };\n\n  startWorkflow = async () => {\n    this.setState({isStarting: true, startError: false});\n    try {\n      const startedRunId = await WorkflowsService.saveAndStartWorkflow(this.getWorkflow());\n      await this.waitForRunStateReceived(startedRunId);\n    } catch (e) {\n      this.setState({startError: true});\n    }\n    this.setState({isStarting: false});\n  };\n\n  waitForRunStateReceived = (startedRunId) => new Promise((resolve, reject) => {\n    const listener = (runnableWorkflow) => {\n      if (runnableWorkflow.getRuns().containsRun(startedRunId)) {\n        runnableWorkflow.removeRunsListener(listener);\n        resolve();\n      }\n    };\n    this.props.runnableWorkflow.addRunsListener(listener);\n  });\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {isStarting} = this.state;\n    const {runnableWorkflow, readOnly} = this.props;\n    return (\n      <div>\n        {\n          this.state.startError &&\n          <Alert variant=\"danger\">\n            Can't start workflow!\n          </Alert>\n        }\n\n        <RunsControls runnable={runnableWorkflow}\n                      downloadLinkFactory={(run, format) => RunsService.getDownloadLink(run, format)}\n                      startText=\"Start workflow\"\n                      onStart={this.startWorkflow}\n                      isStarting={isStarting}\n                      readOnly={readOnly}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nimport \"./SidebarWithTitle.css\";\n\nexport default ({title, center}) => (\n  <div className=\"sidebar-column\">\n    <div className=\"title-and-center-container\">\n      <Row>\n        <Col>\n          <h5>{title}</h5>\n        </Col>\n      </Row>\n\n      {center}\n    </div>\n  </div>\n);\n","import React, {Component} from \"react\";\nimport {Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport {getRandomColor, getTextColorVisibleOnBackground, isHexValid} from \"../../../../../../utils/colors\";\n\n\nexport default class RandomColorPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    let color = props.color;\n    if (!color) {\n      color = getRandomColor();\n      this.props.onChange(color);\n    }\n    this.state = {\n      color,\n      userText: color\n    };\n  }\n\n  pickRandomColor = () => {\n    const color = getRandomColor();\n    this.setState({\n        color,\n        userText: color\n      }, () => this.props.onChange(this.state.color)\n    );\n  };\n\n\n  onInputChange = (e) => {\n    const color = e.target.value;\n    this.setState({userText: color});\n    if (isHexValid(color)) {\n      this.setState({color});\n      this.props.onChange(color);\n    }\n  };\n\n  render() {\n    const {color, userText} = this.state;\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <Button variant=\"outline-secondary\"\n                  onClick={this.pickRandomColor}\n                  style={{\n                    backgroundColor: color,\n                    borderColor: color,\n                    color: getTextColorVisibleOnBackground(color)\n                  }}>\n            <i className=\"fas fa-sync-alt\"/>\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl aria-describedby=\"basic-addon1\" value={userText}\n                     onChange={this.onInputChange}/>\n      </InputGroup>\n    );\n  }\n\n\n}\n","import {DoBlockNodeModel} from \"./DoBlockNodeModel\";\n\nexport const DEFAULT_WORKER_BLOCKED_MESSAGE = \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\";\n\nexport default class BlockingContextsModel {\n\n  graphModel;\n  contexts = [];\n\n  constructor(graphModel) {\n    this.graphModel = graphModel;\n  }\n\n  deSerialize(contexts) {\n    this.setContexts(contexts);\n  }\n\n  setContexts(contexts) {\n    this.contexts = contexts;\n  }\n\n  serialize() {\n    return this.getContexts();\n  }\n\n  getContexts() {\n    return this.contexts;\n  }\n\n  getBlockingContextById(id) {\n    return this.getContexts().find(context => context.id === id)\n  }\n\n  removeContext(toRemove) {\n    const index = this.contexts.indexOf(toRemove);\n    if (index >= 0) {\n      this._disableContextForAllDoBlocks(toRemove);\n      this.contexts.splice(index, 1);\n    }\n  }\n\n  addContext(context) {\n    this.contexts.push(context);\n  }\n\n  mutateToSingleBlockingContextForAllDoBlocks() {\n    this.removeAllBlockingContexts();\n    const context = BlockingContextsModel.getDefaultContext();\n    this.addContext(context);\n    this._enableContextForAllDoBlocks(context);\n  }\n\n  static getDefaultContext = () => ({\n    id: 'default-blocking-context',\n    name: 'Default',\n    color: '#ffaff3',\n    workerBlockedMessage: \"<p><h1>Thank you</h1>You've already worked on another job related to this project</p>\"\n  });\n\n  _enableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(context.id));\n\n  getBlockingContextModelsOfDoBlocks = () => this.getDoBlockModels()\n    .map(block => block.getBlockingContextModelParameter());\n\n  getDoBlockModels() {\n    return this.graphModel.getBlocksArray().filter(block => block instanceof DoBlockNodeModel);\n  }\n\n  removeAllBlockingContexts() {\n    this.contexts.forEach(context => {\n      this._disableContextForAllDoBlocks(context);\n      this.removeContext(context)\n    });\n  }\n\n  _disableContextForAllDoBlocks = (context) =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => blockingContextModel.getBlockingContextId() === context.id)\n      .forEach(blockingContextModel => blockingContextModel.setBlockingContextId(null));\n\n\n  isSingleBlockingContextEnabledForAllDoBlocks = () => {\n    const onlyOneContext = this.getContexts().length === 1;\n    const blocks = this.graphModel.getBlocksArray();\n    const blocksWithEnabledBlockingContext = this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId());\n    return onlyOneContext && blocks.length === blocksWithEnabledBlockingContext.length;\n  };\n\n\n  areSomeBlockingContextsEnabled = () =>\n    this.getBlockingContextModelsOfDoBlocks()\n      .filter(blockingContextModel => !!blockingContextModel.getBlockingContextId())\n      .length > 0;\n\n}\n\n\nexport const isBlockingContextValid = ({name, workerBlockedMessage}) =>\n  name && name.length >= 0 && workerBlockedMessage\n  && workerBlockedMessage.length >= 0;\n","import React, {Component} from \"react\";\nimport uuid from \"uuid\";\nimport {Button, Col, Form, Overlay, Popover} from \"react-bootstrap\";\n\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport \"./CreateBlockingContext.css\";\nimport {\n  DEFAULT_WORKER_BLOCKED_MESSAGE,\n  isBlockingContextValid\n} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport default class CreateBlockingContext extends Component {\n\n  togglePopoverButton = React.createRef();\n  popoverContent = React.createRef();\n\n  state = {\n    show: false\n  };\n\n  showPopover = () => {\n    this.setState({show: true});\n    this.registerListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  registerListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.addEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  clickListenerToClosePopoverWhenUserClicksOutside = (e) => {\n    const popoverContent = this.popoverContent.current;\n    const clickInPopover = e.composedPath().indexOf(popoverContent) >= 0;\n    if (!clickInPopover) {\n      this.hidePopover();\n    }\n  };\n\n  onCreated = (context) => {\n    this.hidePopover();\n    this.props.onAdd(context);\n  };\n\n  hidePopover = () => {\n    this.setState({show: false});\n    this.unregisterListenerToClosePopoverWhenUserClicksOutside();\n  };\n\n  unregisterListenerToClosePopoverWhenUserClicksOutside() {\n    document.body.removeEventListener('click', this.clickListenerToClosePopoverWhenUserClicksOutside);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"btn-block\"\n                onClick={this.showPopover}\n                ref={this.togglePopoverButton}>Add blocking context</Button>\n        <Overlay\n          id=\"create-blocking-context-popover-container\"\n          show={this.state.show}\n          placement=\"left\"\n          target={this.togglePopoverButton.current}\n          container={document.getElementById('workflow-editor')}>\n\n          <Popover title=\"Create blocking context\"\n                   id=\"create-blocking-context-popover\"\n                   placement=\"left\">\n            <div ref={this.popoverContent}>\n              <CreateBlockingContextPopover onCreated={this.onCreated}/>\n            </div>\n          </Popover>\n        </Overlay>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass CreateBlockingContextPopover extends Component {\n\n  state = {\n    name: '',\n    color: null,\n    workerBlockedMessage: DEFAULT_WORKER_BLOCKED_MESSAGE\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onChangeColor = (color) => this.setState({color});\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  onAdd = () => {\n    this.props.onCreated({\n      id: uuid(),\n      ...this.getBlockingContextFromState()\n    });\n    this.setState({name: '', color: null});\n  };\n\n\n  render() {\n    const {name, color} = this.state;\n    return (\n      <Form.Row>\n        <Col xs=\"12\">\n          <Form.Group>\n            <Form.Control name=\"name\"\n                          type=\"text\"\n                          placeholder=\"Blocking context name\"\n                          value={name}\n                          onChange={this.onNameChange}/>\n          </Form.Group>\n        </Col>\n        <Col xs=\"8\">\n          <RandomColorPicker color={color} onChange={this.onChangeColor}/>\n        </Col>\n        <Col xs=\"4\">\n          <Button className=\"btn-block\"\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}\n                  onClick={this.onAdd}>Add</Button>\n        </Col>\n      </Form.Row>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {Editor} from \"@tinymce/tinymce-react\";\n\nimport {ignoreEventAnd} from \"../../../../../../utils/events\";\nimport RandomColorPicker from \"./RandomColorPicker\";\nimport {isBlockingContextValid} from \"../../../WorkflowGraphEditor/models/BlockingContextsModel\";\n\nexport class EditBlockingContextModalAndButton extends Component {\n\n  state = {\n    show: false\n  };\n\n  onShowModal = () => this.setState({show: true});\n\n  onCloseModal = () => this.setState({show: false});\n\n  render() {\n    return (\n      <span>\n        <EditBlockingContextModal show={this.state.show}\n                                  onClose={this.onCloseModal}\n                                  context={this.props.context}\n                                  onModelUpdate={this.props.onModelUpdate}/>\n\n        <a className=\"icon-button\" onClick={ignoreEventAnd(this.onShowModal)}>\n          <i className=\"fas fa-edit\"/>\n        </a>\n      </span>\n    );\n  }\n}\n\n\nclass EditBlockingContextModal extends Component {\n\n  state = {\n    name: null,\n    color: null,\n    workerBlockedMessage: null\n  };\n\n  componentDidMount() {\n    this.resetInputFields();\n  }\n\n  resetInputFields = () => this.setState({...this.props.context});\n\n  onSave = () => {\n    this.updatePropsContext();\n    this.props.onClose();\n  };\n\n  updatePropsContext = () => {\n    const {name, color, workerBlockedMessage} = this.state;\n    const context = this.props.context;\n    context.name = name;\n    context.color = color;\n    context.workerBlockedMessage = workerBlockedMessage;\n    this.props.onModelUpdate();\n  };\n\n  onCancel = () => {\n    this.resetInputFields();\n    this.props.onClose();\n  };\n\n  onNameChange = (e) => this.setState({name: e.target.value});\n\n  onColorChange = (color) => this.setState({color});\n\n  onWorkerBlockedMessageChange = (workerBlockedMessage) => {\n    this.setState({workerBlockedMessage});\n  };\n\n  getBlockingContextFromState = () => ({...this.state});\n\n  render() {\n    const {name, color, workerBlockedMessage} = this.state;\n    // TODO: Handle disabled state\n    return (\n      <Modal show={this.props.show} size=\"xl\">\n        <Modal.Header>\n          Blocking context editor\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Row>\n            <Col xs=\"12\" sm=\"9\">\n              <Form.Group>\n                <Form.Control name=\"name\"\n                              type=\"text\"\n                              placeholder=\"Blocking context name\"\n                              value={name}\n                              onChange={this.onNameChange}/>\n              </Form.Group>\n            </Col>\n            <Col xs=\"12\" sm=\"3\">\n              <RandomColorPicker color={color} onChange={this.onColorChange}/>\n            </Col>\n          </Form.Row>\n          <Row>\n            <Col>\n              <Editor onEditorChange={this.onWorkerBlockedMessageChange}\n                      initialValue={workerBlockedMessage}\n                      init={{menubar: false}}/>\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n          <Button className=\"confirm\"\n                  onClick={this.onSave}\n                  disabled={!isBlockingContextValid(this.getBlockingContextFromState())}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {Form, Table} from \"react-bootstrap\";\n\nimport './BlockingContextsCRUD.css';\nimport CreateBlockingContext from \"./CreateBlockingContext\";\nimport {EditBlockingContextModalAndButton} from \"./EditBlockingContextModalAndButton\";\n\nexport default class BlockingContextsCRUD extends Component {\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  onAddBlockingContext = (context) => {\n    this.getBlockingContextsModel().addContext(context);\n    this.props.onModelUpdate();\n  };\n\n  render() {\n    const model = this.getBlockingContextsModel();\n    const {disabled} = this.props;\n    return (\n      <div>\n        <Form.Text className=\"text-muted\">\n          <strong>Blocking contexts</strong>\n        </Form.Text>\n\n        <BlockingContextsTable model={model}\n                               onModelUpdate={this.props.onModelUpdate}\n                               disabled={disabled}/>\n\n        {\n          !disabled &&\n          <CreateBlockingContext onAdd={this.onAddBlockingContext}/>\n        }\n      </div>\n    );\n  }\n}\n\n\nclass BlockingContextsTable extends Component {\n\n  getBlockingContextsModel = () => this.props.model;\n\n  getContexts = () => this.getBlockingContextsModel().getContexts();\n\n  isDisabled = () => this.props.disabled;\n\n  render() {\n    const contexts = this.getContexts();\n    if (contexts.length <= 0) {\n      return this.renderNoBlockingContextsYet();\n    }\n\n    return this.renderTable();\n  }\n\n  renderNoBlockingContextsYet = () => (\n    <Form.Text className=\"text-muted\">\n      No blocking contexts created yet in this workflow\n    </Form.Text>\n  );\n\n  renderTable = () => (\n    <Table striped bordered hover size=\"sm\" className=\"blocking-contexts-table\">\n      <thead>\n      <tr>\n        <th/>\n        <th className=\"name-column\">Name</th>\n\n        {\n          /* actions column */\n          !this.isDisabled() &&\n          <th/>\n        }\n      </tr>\n      </thead>\n      <tbody>\n\n      {\n        this.getContexts().map(context => (\n          <BlockingContextsTableRow key={context.id}\n                                    context={context}\n                                    disabled={this.isDisabled()}\n                                    blockingContextsModel={this.getBlockingContextsModel()}\n                                    onModelUpdate={this.props.onModelUpdate}/>\n        ))\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nconst BlockingContextsTableRow = ({context, disabled, blockingContextsModel, onModelUpdate}) => (\n  <tr>\n    <td className=\"color-box-container\">\n      <div className=\"color-box\" style={{backgroundColor: context.color}}/>\n    </td>\n    <td>{context.name}</td>\n    {\n      /* actions cell */\n      !disabled &&\n      <td className=\"actions-cell\">\n        <div className=\"actions\">\n\n          {/* edit */}\n          <EditBlockingContextModalAndButton context={context}\n                                             onModelUpdate={onModelUpdate}/>\n\n          {/* delete */}\n          <DeleteBlockingContextCell blockingContextsModel={blockingContextsModel}\n                                     context={context}\n                                     onModelUpdate={onModelUpdate}/>\n        </div>\n\n      </td>\n    }\n  </tr>\n);\n\n\nclass DeleteBlockingContextCell extends Component {\n\n  // TODO: Ask confirmation to the user\n  onRemoveContext = (context) => {\n    const model = this.getBlockingContextsModel();\n    model.removeContext(context);\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.blockingContextsModel;\n\n  render() {\n    const {context} = this.props;\n    return (\n      <a className=\"icon-button delete\" onClick={() => this.onRemoveContext(context)}>\n        <i className=\"fas fa-trash-alt\"/>\n      </a>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nexport default class WorkflowBlockingCheckbox extends Component {\n\n  checkboxRef = React.createRef();\n\n  componentDidMount() {\n    this.renderCheckboxIndeterminateState();\n  }\n\n  onChange = () => {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    if (this.isIndeterminate() || !blockingContextsModel.areSomeBlockingContextsEnabled()) {\n      blockingContextsModel.mutateToSingleBlockingContextForAllDoBlocks()\n    } else {\n      blockingContextsModel.removeAllBlockingContexts();\n    }\n    this.props.onModelUpdate();\n  };\n\n  getBlockingContextsModel = () => this.props.graphModel.getBlockingContexts();\n\n  render() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    this.renderCheckboxIndeterminateState();\n    return (\n      <div>\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            If checked, one worker will be able to work only on one job of this workflow. When indeterminate, workers\n            won't be able to work on job of the same blocking context\n          </Form.Text>\n          <Form.Check ref={this.checkboxRef}\n                      type=\"checkbox\"\n                      label=\"Block workers\"\n                      checked={blockingContextsModel.areSomeBlockingContextsEnabled()}\n                      onChange={this.onChange}\n                      disabled={this.props.disabled}/>\n        </Form.Group>\n      </div>\n    );\n  }\n\n  renderCheckboxIndeterminateState() {\n    const checkbox = this.checkboxRef.current;\n    if (checkbox) {\n      checkbox.indeterminate = this.isIndeterminate();\n    }\n  }\n\n  isIndeterminate() {\n    const blockingContextsModel = this.getBlockingContextsModel();\n    return blockingContextsModel.areSomeBlockingContextsEnabled() &&\n      !blockingContextsModel.isSingleBlockingContextEnabledForAllDoBlocks();\n  }\n}\n","import React from 'react';\n\nimport BlockingContextsCRUD from \"./BlockingContextsCRUD\";\nimport {ParameterContainerCard} from \"../../../ParametersEngine/ParametersEngine\";\nimport WorkflowBlockingCheckbox from \"./WorkflowBlockingCheckbox\";\n\nconst WorkflowBlockingSettings = ({graphModel, onModelUpdate, disabled}) => (\n  <ParameterContainerCard title=\"Blocking workers\">\n    <WorkflowBlockingCheckbox graphModel={graphModel}\n                              onModelUpdate={onModelUpdate}\n                              disabled={disabled}/>\n\n    <BlockingContextsCRUD graphModel={graphModel}\n                          onModelUpdate={onModelUpdate}\n                          disabled={disabled}/>\n  </ParameterContainerCard>\n);\n\nexport default WorkflowBlockingSettings;\n","import React from 'react';\n\nimport NameAndDescriptionFields from \"./NameAndDescriptionFields\";\nimport WorkflowRunsControls from \"./WorkflowRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\nimport WorkflowBlockingSettings from \"./WorkflowBlockingSettings/WorkflowBlockingSettings\";\n\n/**\n * Sidebar to edit the workflow name and description\n *\n */\nexport default ({runnableWorkflow, onEdit, onModelUpdate, graphModel, readOnly}) => {\n  const workflow = runnableWorkflow.getWorkflow();\n  const disabled = readOnly;\n  return (\n    <SidebarWithTitle\n      title=\"Workflow properties\"\n      center={\n        <div>\n          <hr/>\n          <NameAndDescriptionFields onEdit={onEdit}\n                                    workflow={workflow}\n                                    disabled={disabled}/>\n\n          <WorkflowBlockingSettings graphModel={graphModel}\n                                    onModelUpdate={onModelUpdate}\n                                    disabled={disabled}/>\n\n          <WorkflowRunsControls runnableWorkflow={runnableWorkflow}\n                                readOnly={readOnly}/>\n        </div>\n      }/>\n  );\n};\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {ParameterContainerCard} from \"../../ParametersEngine/ParametersEngine\";\n\nexport class BlockLabel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: this.getLabel()\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.blockModel !== this.getBlockModel()) {\n      this.setState({\n        label: this.getLabel()\n      })\n    }\n  };\n\n  getBlockModel = () => this.props.blockModel;\n\n  getLabel = () => this.getBlockModel().getLabel();\n\n  getGraphModel = () => this.props.graphModel;\n\n  onChange = (event) => this.setState({\n    label: event.target.value\n  }, () => {\n    if (this.isNewLabelValid()) {\n      this.replaceLabel();\n    }\n  });\n\n  isNewLabelValid = () => this.getGraphModel().isNewLabelValid(this.getBlockModel(), this.state.label);\n\n  replaceLabel = () => {\n    const block = this.getBlockModel();\n    block.setLabel(this.state.label);\n  };\n\n  render() {\n    return (\n      <ParameterContainerCard title=\"Label\">\n        <Form.Group>\n          <Form.Text className=\"text-muted\">\n            Label of the block\n          </Form.Text>\n          <Form.Control type=\"text\"\n                        value={this.state.label}\n                        onChange={this.onChange}\n                        isInvalid={!this.isNewLabelValid()}\n                        disabled={this.props.disabled}/>\n          <Form.Control.Feedback type=\"invalid\">\n            The label must be unique to all the blocks and must be at least one character long.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </ParameterContainerCard>\n    );\n  }\n}\n","import {API_URL} from \"../../config\";\n\n\nconst CACHE_URL = `${API_URL}/cache`;\n\nexport default {\n\n  getDownloadLink(cacheId, format) {\n    return `${CACHE_URL}/${cacheId}?format=${format}`;\n  }\n\n}\n","import React, {Component} from \"react\";\n\nimport CacheService from \"../../../../../../Services/rest/CacheService\";\nimport RunsControls from \"../RunsControls/RunsControls\";\n\nexport default class BlockRunsControls extends Component {\n  render() {\n    const {blockModel} = this.props;\n\n    /**\n     * NOTE: When you'll implement the start block feature, take a look at how the start workflow is implemented\n     */\n    return <RunsControls runnable={blockModel}\n                         downloadLinkFactory={(run, format) => CacheService.getDownloadLink(run.getCacheId(), format)}\n                         startText=\"Start block\"\n                         onStart={() => console.error('not implemented yet')}\n                         isStarting={false}\n                         readOnly={this.props.readOnly}/>;\n  }\n}\n","import React from 'react';\n\nimport ParametersEngine from \"../../ParametersEngine/ParametersEngine\";\nimport \"./BlockSidebar.css\";\nimport {BlockLabel} from \"./BlockLabel\";\nimport BlockRunsControls from \"./BlockRunsControls\";\nimport SidebarWithTitle from \"../common/SidebarWithTitle\";\n\nexport default ({block, graphModel, onModelUpdate, runnableWorkflow, disabled, readOnly}) => (\n\n  <SidebarWithTitle\n    title=\"Block parameters\"\n    center={\n      <div className=\"parameters-engine-container\"\n           onKeyUp={e => {\n             // prevent block cancellation when backspace is pressed\n             e.stopPropagation()\n           }}>\n        <hr/>\n        <BlockLabel blockModel={block}\n                    graphModel={graphModel}\n                    disabled={disabled}/>\n\n        <ParametersEngine parametrizedBlock={block}\n                          onParameterModelUpdate={onModelUpdate}\n                          disabled={disabled}\n                          parametersInCard/>\n\n        <BlockRunsControls blockModel={block}\n                           runnableWorkflow={runnableWorkflow}\n                           disabled={disabled}\n                           readOnly={readOnly}/>\n      </div>\n    }\n  />\n);\n\n","import {DiagramModel} from \"storm-react-diagrams\";\nimport BlockingContextsModel from \"./BlockingContextsModel\";\n\nexport default class WorkflowGraphModel extends DiagramModel {\n\n  blockingContexts = new BlockingContextsModel(this);\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.blockingContexts.deSerialize(data.blockingContexts || []);\n  }\n\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      blockingContexts: this.blockingContexts.serialize()\n    }\n  }\n\n  isValid = () => this.getBlocksArray()\n    .find(block => !block.isValid()) == null;\n\n  getBlocks = () => this.getNodes();\n\n  getBlocksArray = () => Object.values(this.getBlocks());\n\n  isNewLabelValid = (blockModel, label) => {\n    if (label.length <= 0) {\n      return false;\n    }\n    const blockWithSameLabel = this.getBlockByLabelOrNull(label);\n    return blockWithSameLabel === blockModel || blockWithSameLabel == null;\n  };\n\n  getBlockByLabelOrNull = (label) => this.getBlocksArray().find(block => block.getLabel() === label);\n\n  getNextBlockLabel = () => `block_${this.getBlocksArray().length}`;\n\n  setRuns = (runs) => this.getBlocksArray().forEach(block => block.setRuns(runs));\n\n  getBlockingContexts() {\n    return this.blockingContexts;\n  }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Spinner} from \"react-bootstrap\";\n\nimport {LinkBreadcrumb, SimpleBreadcrumb} from \"../../../common/Breadcrumbs\";\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport ProjectsService from \"../../../../Services/rest/ProjectsService\";\n\nexport default class WorkflowBreadcrumb extends Component {\n\n  state = {\n    projectName: null\n  };\n\n  componentDidMount = () => this.fetchProjectName();\n\n  fetchProjectName = async () => {\n    const {projectId} = this.props.workflow;\n    try {\n      const {data} = await ProjectsService.getProject(projectId);\n      this.setState({\n        projectName: data.name\n      });\n    } catch (e) {\n\n    }\n  };\n\n  render() {\n    const {name, projectId} = this.props.workflow;\n    return (\n      <div className=\"workflow-breadcrumb\">\n        <Breadcrumb>\n          <LinkBreadcrumb to={PROJECTS_PATH}>Projects</LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>\n            {\n              this.state.projectName ||\n              <Spinner animation=\"grow\" size=\"sm\"/>\n            }\n          </LinkBreadcrumb>\n          <LinkBreadcrumb to={`${PROJECTS_PATH}/${projectId}`}>Workflows</LinkBreadcrumb>\n          <SimpleBreadcrumb>{name}</SimpleBreadcrumb>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport {PROJECTS_PATH} from \"../../../Projects/Projects\";\nimport LoadingButton from \"../../../common/LoadingButton\";\nimport BackButton from \"../../../common/BackButton\";\nimport \"./WorkflowSaveBar.css\";\n\nexport const WorkflowSaveBar = ({runnableWorkflow, graphModel, isSaving, onSavePressed, saveError, disabled}) => {\n  const isValid = graphModel.isValid();\n  const workflow = runnableWorkflow.getWorkflow();\n  return (\n    <Navbar className=\"light-background justify-content-between workflow-bottom-navbar\">\n      <BackButton text=\"Return to project\" to={`${PROJECTS_PATH}/${workflow.projectId}`}/>\n\n      <div>\n        {\n          !isValid &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Workflow contains some errors\n          </span>\n        }\n\n        {\n          disabled &&\n          <span>\n            Edit is disabled while the workflow is running\n          </span>\n        }\n\n        {\n          !disabled && saveError &&\n          <span className=\"warning\">\n            <i className=\"fas fa-exclamation-triangle\"/> Error while saving the workflow\n          </span>\n        }\n      </div>\n\n      <LoadingButton disabled={!isValid || isSaving || disabled}\n                     isLoading={isSaving} onClick={onSavePressed}>Save</LoadingButton>\n    </Navbar>\n  )\n};\n","import React from \"react\";\nimport {Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nimport \"./WorkflowInstructions.css\";\n\nexport default () => (\n  <OverlayTrigger\n    placement=\"bottom\"\n    overlay={\n      <Tooltip >\n        To remove a link hold <strong>shift</strong> and click the link with the right mouse button.\n      </Tooltip>\n    }\n  >\n    <Button className=\"instructions-trigger\"  variant=\"secondary\"><i className=\"far fa-question-circle\"/></Button>\n  </OverlayTrigger>\n);\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport './WorkflowEditor.css';\nimport WorkflowGraphEditor from \"./WorkflowGraphEditor/WorkflowGraphEditor\";\nimport DraggableBlockTypeListSidebar from \"./sidebars/DraggableBlockTypeListSidebar\";\nimport WorkflowSidebar from \"./sidebars/WorkflowSidebar/WorkflowSidebar\";\nimport BlockConfiguratorSidebar from \"./sidebars/BlockSidebar/BlockSidebar\";\nimport WorkflowGraphModel from \"./WorkflowGraphEditor/models/WorkflowGraphModel\";\nimport WorkflowBreadcrumb from \"./WorkflowBreadcrumb\";\nimport {WorkflowSaveBar} from \"./WorkflowSaveBar\";\nimport WorkflowInstructions from \"./WorkflowInstructions\";\n\n\nexport default class WorkflowEditor extends Component {\n\n  graphModel = new WorkflowGraphModel();\n\n  state = {\n    selectedBlock: null\n  };\n\n  constructor(props) {\n    super(props);\n    const {runnableWorkflow} = this.props;\n    this.graphModel.workflowId = runnableWorkflow.getWorkflow().id;\n  }\n\n  componentDidMount() {\n    const {runnableWorkflow} = this.props;\n    this.onRunsUpdate(runnableWorkflow);\n    runnableWorkflow.addRunsListener(this.onRunsUpdate);\n  }\n\n  onRunsUpdate = (runnableWorkflow) => {\n    this.graphModel.setLocked(this.isEditDisabled());\n    this.graphModel.setRuns(runnableWorkflow.getRuns());\n    this.onModelUpdated();\n  };\n\n  onModelUpdated = () => {\n    console.log(\"[WorkflowEditor] onModelUpdated()\");\n    this.onWorkflowEdited();\n    this.forceUpdate();\n  };\n\n  componentWillUnmount() {\n    this.props.runnableWorkflow.removeRunsListener(this.onRunsUpdate);\n  }\n\n  onBlockSelected = (selectedBlock) => this.setState({selectedBlock});\n\n  onSavePressed = () => {\n    this.onModelUpdated();\n    this.props.onSave();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    if (!workflow) {\n      workflow = this.getWorkflow();\n    }\n    workflow.graph = this.graphModel.serializeDiagram();\n    this.props.onWorkflowEdited(workflow);\n  };\n\n  getWorkflow = () => this.props.runnableWorkflow.getWorkflow();\n\n  isReadOnly = () => this.props.readOnly;\n\n  isEditDisabled = () => this.isReadOnly() || !this.props.runnableWorkflow.canBeEdited();\n\n  render() {\n    const {runnableWorkflow, blockTypeDefinitions} = this.props;\n    const workflow = runnableWorkflow.getWorkflow();\n    const initialGraph = workflow.graph;\n\n    return (\n      <Container className=\"full-width workflow-editor-container\" id=\"workflow-editor\">\n        <Row className=\"full-height\">\n\n          {/* Left sidebar */}\n          {\n            !this.isEditDisabled() &&\n            <Col className=\"editor-left-sidebar light-background\">\n              <DraggableBlockTypeListSidebar blockTypeDefinitions={blockTypeDefinitions}/>\n            </Col>\n          }\n\n\n          {/* Center */}\n          <Col className=\"editor-center graph-editor-container\">\n            <WorkflowGraphEditor\n              initialGraph={initialGraph}\n              graphModel={this.graphModel}\n              blockTypeDefinitions={blockTypeDefinitions}\n              onBlockSelected={this.onBlockSelected}\n              onModelUpdate={this.onModelUpdated}/>\n\n            <WorkflowBreadcrumb workflow={workflow}/>\n            <WorkflowInstructions/>\n\n            {\n              !this.isReadOnly() &&\n              <WorkflowSaveBar runnableWorkflow={runnableWorkflow}\n                               graphModel={this.graphModel}\n                               onSavePressed={this.onSavePressed}\n                               isSaving={this.props.isSaving}\n                               saveError={this.props.saveError}\n                               disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n\n          {/* Right sidebar */}\n          <Col className=\"editor-right-sidebar light-background\">\n            {\n              this.state.selectedBlock ?\n                <BlockConfiguratorSidebar block={this.state.selectedBlock}\n                                          graphModel={this.graphModel}\n                                          onModelUpdate={this.onModelUpdated}\n                                          runnableWorkflow={runnableWorkflow}\n                                          readOnly={this.isReadOnly()}\n                                          disabled={this.isEditDisabled()}/>\n                :\n                <WorkflowSidebar runnableWorkflow={runnableWorkflow}\n                                 onEdit={this.onWorkflowEdited}\n                                 graphModel={this.graphModel}\n                                 onModelUpdate={this.onModelUpdated}\n                                 readOnly={this.isReadOnly()}\n                                 disabled={this.isEditDisabled()}/>\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nimport {makeCancellable} from \"../../../../Services/rest/utils\";\nimport BlockTypesDefinitionService from \"../../../../Services/rest/BlockTypeDefinitionsService\";\nimport WorkflowEditor from \"./WorkflowEditor\";\nimport \"./WorkflowEditorContainer.css\";\nimport LoadingContainer from \"../../../common/LoadingContainer\";\n\nexport default class WorkflowEditorContainer extends Component {\n\n  blockTypesRequest;\n\n  state = {\n    blockTypeDefinitions: null,\n    fetchingBlockTypeDefinitions: false,\n    fetchBlockTypesError: false\n  };\n\n  componentDidMount = () => this.fetchBlockTypes();\n\n  componentWillUnmount = () => this.blockTypesRequest.cancel();\n\n  async fetchBlockTypes() {\n    this.setState({fetchingBlockTypeDefinitions: true});\n    try {\n      this.blockTypesRequest = makeCancellable(BlockTypesDefinitionService.getBlockTypeDefinitions());\n      const blockTypeDefinitions = await this.blockTypesRequest.result;\n      this.setState({\n        blockTypeDefinitions,\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: false\n      });\n    } catch (e) {\n      this.setState({\n        fetchingBlockTypeDefinitions: false,\n        fetchBlockTypesError: true\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <LoadingContainer loading={this.state.fetchingBlockTypeDefinitions || !this.props.runnableWorkflow}>\n        <WorkflowEditor  {...this.props} blockTypeDefinitions={this.state.blockTypeDefinitions}/>\n      </LoadingContainer>\n    )\n  }\n}\n\n","export default class RunnableWorkflow {\n\n  workflow;\n  runs;\n  runsListeners = [];\n\n  constructor(workflow, runs) {\n    this.workflow = workflow;\n    this.runs = runs;\n  }\n\n  getWorkflow = () => this.workflow;\n\n  setWorkflow = (workflow) => this.workflow = workflow;\n\n  getRuns = () => this.runs;\n\n  setRuns = (runs) => {\n    this.runs = runs;\n    this.notifyRunsListeners();\n  };\n\n  notifyRunsListeners = () => this.runsListeners.forEach(listener => listener(this));\n\n  addRunsListener = (listener) => this.runsListeners.push(listener);\n\n  removeRunsListener = (listener) => {\n    const index = this.runsListeners.indexOf(listener);\n    if (index < 0) {\n      throw new Error(\"can't remove a listener that hasn't been added\");\n    }\n    this.runsListeners.splice(index, 1);\n  };\n\n  /**\n   * @returns {boolean} true if the block was started at least one time.\n   */\n  wasStarted = () => !!this.getRuns().getLatestRun();\n\n\n  isRunning = () => this.wasStarted() && this.getRuns().getLatestRun().isRunning();\n\n  isFailed = () => this.wasStarted() && this.getRuns().getLatestRun().isFailed();\n\n  isFinished = () => this.wasStarted() && this.getRuns().getLatestRun().isFinished();\n\n  /**\n   * @returns {number} number of blocks that may start in a run\n   */\n  getRunnableBlocksCount = () => this.getWorkflow().graph.nodes.length;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of blocks that are running\n   */\n  getRunningBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getRunningBlockRuns().length : 0;\n\n  /**\n   * Relative to latest run\n   * @returns {number} number of finished blocks\n   */\n  getFinishedBlocksCount = () => this.wasStarted() ? this.getRuns().getLatestRun().getFinishedBlockRuns().length : 0;\n\n  canStart = () => !this.isRunning();\n\n  canBeEdited = () => !this.isRunning();\n\n\n\n\n  getLatestRun = () => this.getRuns().getLatestRun();\n  getFinishedRuns=()=>this.getRuns().getFinishedRuns();\n}\n","import WorkflowsService from \"../rest/WorkflowsService\";\nimport RunnableWorkflow from \"./models/RunnableWorkflow\";\nimport RunsService from \"../rest/RunsService\";\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nexport default {\n\n  pollInterval: null,\n\n  async getRunnableWorkflow(workflowId) {\n    const [workflow, runs] = await Promise.all([\n      WorkflowsService.getWorkflow(workflowId),\n      RunsService.getRunsOfWorkflow(workflowId)\n    ]);\n    return new RunnableWorkflow(workflow, runs);\n  },\n\n\n  startWatchingRunsStatus(runnableWorkflow, pollInterval = DEFAULT_POLL_INTERVAL) {\n    if (this.pollInterval != null) {\n      throw new Error('multiple watching not implemented yet');\n    }\n    const workflowId = runnableWorkflow.getWorkflow().id;\n    this.pollInterval = setInterval(async () => {\n      const runs = await RunsService.getRunsOfWorkflow(workflowId);\n      runnableWorkflow.setRuns(runs);\n    }, pollInterval);\n  },\n\n\n  stopWatchRunsStatus() {\n    clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n}\n","import React, {Component} from 'react';\n\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport RunnableWorkflowService from \"../../../Services/RunnableWorkflowService/RunnableWorkflowService\";\nimport {redirectToProjectsList} from \"../../Projects/utils/route\";\nimport {makeCancellable} from \"../../../Services/rest/utils\";\n\nexport default class ReadOnlyWorkflowDashboard extends Component {\n\n  runnableWorkflowRequest;\n\n  state = {\n    runnableWorkflow: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      const runnableWorkflow = await this.fetchRunnableWorkflow();\n      RunnableWorkflowService.startWatchingRunsStatus(runnableWorkflow);\n    } catch (e) {\n      redirectToProjectsList(this);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.getWorkflowIdFromUrl() !== this.getWorkflowIdFromSpecifiedProps(prevProps)) {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    }\n  }\n\n  async fetchRunnableWorkflow() {\n    const id = this.getWorkflowIdFromUrl();\n    this.setState({runnableWorkflow: null});\n    this.runnableWorkflowRequest = makeCancellable(RunnableWorkflowService.getRunnableWorkflow(id));\n    const runnableWorkflow = await this.runnableWorkflowRequest.result;\n    this.setState({runnableWorkflow});\n    return runnableWorkflow;\n  }\n\n  getWorkflowIdFromUrl = () => this.getWorkflowIdFromSpecifiedProps(this.props);\n\n  getWorkflowIdFromSpecifiedProps = (props) => props.match.params.id;\n\n  componentWillUnmount = () => {\n    this.runnableWorkflowRequest.cancel();\n    RunnableWorkflowService.stopWatchRunsStatus();\n  };\n\n  onWorkflowEdited = (workflow) => {\n    this.setWorkflow(workflow);\n    this.forceUpdate(); // the state itself isn't changed, but the content of the workflowWithRuns yes\n  };\n\n  setWorkflow = (workflow) => this.state.runnableWorkflow.setWorkflow(workflow);\n\n  getWorkflow = () => this.state.runnableWorkflow.getWorkflow();\n\n  render() {\n    const {runnableWorkflow} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      readOnly/>;\n  }\n}\n","import React from 'react';\n\nimport WorkflowsService from \"../../../Services/rest/WorkflowsService\";\nimport WorkflowEditorContainer from \"./WorkflowEditor/WorkflowEditorContainer\";\nimport ReadOnlyWorkflowDashboard from \"./ReadOnlyWorkflowDashboard\";\n\n/**\n * This component shows the WorkflowEditor and loads/save the workflow\n */\nexport default class EditableWorkflowDashboard extends ReadOnlyWorkflowDashboard {\n\n  constructor(props) {\n    super(props);\n    this.state.isSaving = false;\n    this.state.saveError = false;\n  }\n\n  onSave = async () => {\n    this.setState({isSaving: true});\n    try {\n      const workflow = this.getWorkflow();\n      await WorkflowsService.updateWorkflow(workflow);\n    } catch (e) {\n      this.setState({saveError: true});\n    }\n    this.setState({isSaving: false});\n  };\n\n  render() {\n    const {runnableWorkflow, isSaving, saveError} = this.state;\n    return <WorkflowEditorContainer\n      runnableWorkflow={runnableWorkflow}\n      onWorkflowEdited={this.onWorkflowEdited}\n      onSave={this.onSave}\n      isSaving={isSaving}\n      saveError={saveError}/>;\n  }\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport EditableWorkflowDashboard from \"./WorkflowDashboard/EditableWorkflowDashboard\";\nimport ReadOnlyWorkflowDashboard from \"./WorkflowDashboard/ReadOnlyWorkflowDashboard\";\n\n\nexport const WORKFLOWS_PATH = \"/workflows\";\nexport const PUBLIC_WORKFLOWS_PATH = \"/public-workflows\";\n\n\nexport const Workflows = () => (\n  <Switch>\n    <Route path={`${WORKFLOWS_PATH}/:id`} exact component={EditableWorkflowDashboard}/>\n  </Switch>\n);\n\nexport const PublicWorkflows = () => (\n  <Switch>\n    <Route path={`${PUBLIC_WORKFLOWS_PATH}/:id`} exact component={ReadOnlyWorkflowDashboard}/>\n  </Switch>\n);\n\n","import React, {Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Sidebar.css';\nimport RunsService from \"../../Services/rest/RunsService\";\nimport {WORKFLOWS_PATH} from \"../Workflows/Workflows\";\n\nconst MAX_RUNS_IN_LIST = 5;\n\nexport default class Sidebar extends Component {\n\n  state = {\n    runs: null\n  };\n\n  componentDidMount = () => this.fetchRuns();\n\n  async fetchRuns() {\n    try {\n      const runs = await RunsService.getRuns();\n      this.setState({runs});\n    } catch (e) {\n      // TODO: Handle error\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"sidebar\" className={this.props.sidebarOpen ? 'open' : ''}>\n        <h2 className=\"app-title\">Servant</h2>\n\n        <ul className=\"sidebar-list\">\n          <li>\n            <NavLink to=\"/projects\">\n              Projects\n            </NavLink>\n          </li>\n\n          <li>\n            <LatestFinishedRunsList runs={this.state.runs}/>\n          </li>\n\n          <li>\n            <RunningRunsList runs={this.state.runs}/>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\nconst LatestFinishedRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching latest finished runs ...</p>;\n  }\n  return (\n    <div>\n      Latest finished runs\n      <JobsList runs={runs.getFinishedRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst RunningRunsList = ({runs}) => {\n  if (!runs) {\n    return <p>Fetching running runs ...</p>;\n  }\n  return (\n    <div>\n      Running runs\n      <JobsList runs={runs.getRunningRuns().slice(0, MAX_RUNS_IN_LIST)}/>\n    </div>\n  );\n};\n\n\nconst JobsList = ({runs}) => (\n  <ul>\n    {\n      runs.map(run => (\n        <li key={run.id}>\n          <NavLink to={`${WORKFLOWS_PATH}/${run.getWorkflowId()}`}>\n            #{run.id}\n          </NavLink>\n        </li>\n      ))\n    }\n  </ul>\n);\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\n\n\nconst ACCOUNT_BALANCE_URL = `${API_URL}/account-balance`;\n\n\nexport const JSONtoBalances = json => json;\n\nexport default {\n\n  _cachedBalance: null,\n\n  async getBalances() {\n    if (this._isBalancesCached()) {\n      return this._getCachedBalance();\n    }\n    const json = await getJSON(ACCOUNT_BALANCE_URL);\n    const balances = JSONtoBalances(json);\n    this._cacheBalances(balances);\n    return balances;\n  },\n\n  _isBalancesCached() {\n    return !!this._getCachedBalance();\n  },\n\n  _getCachedBalance() {\n    return this._cachedBalance;\n  },\n\n  _cacheBalances(balances) {\n    this._cachedBalance = balances;\n  }\n}\n\n","import React, {Component} from 'react';\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\nimport \"./AccountInformation.css\";\nimport {makeCancellable} from \"../../Services/rest/utils\";\nimport AccountBalanceService from \"../../Services/rest/AccountBalanceService\";\nimport LoadingContainer from \"../common/LoadingContainer\";\nimport AuthService from \"../../Services/AuthService\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport {LOGIN_PATH} from \"../Login/Login\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class AccountInformation extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        overlay={\n          <Popover id=\"account-information-popover\"\n                   title=\"Account information\">\n            <AccountInformationPopoverContent/>\n          </Popover>\n        }>\n\n        <div>\n          <AccountInformationPreview/>\n        </div>\n      </OverlayTrigger>\n    );\n  }\n}\n\nclass AccountInformationPreview extends Component {\n  render() {\n    const userInfo = AuthService.getUserInfo();\n    return (\n      <div>\n        <span>{userInfo.getName()}</span>\n        <img className=\"user-avatar\" src={userInfo.getImageUrl()} alt=\"user avatar\"/>\n      </div>\n    );\n  }\n}\n\n\nexport class AccountInformationPopoverContent extends Component {\n  render() {\n    return (\n      <div>\n        <PlatformBalances/>\n\n        <hr/>\n\n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n\n\nexport class PlatformBalances extends Component {\n\n  pendingBalancesRequest;\n\n  state = {\n    balances: null,\n    fetchError: false\n  };\n\n  componentDidMount = async () => await this.fetchBalances();\n\n  componentWillUnmount = () => this.pendingBalancesRequest.cancel();\n\n  fetchBalances = async () => {\n    this.setState({balances: null, fetchError: false});\n    try {\n      this.pendingBalancesRequest = makeCancellable(AccountBalanceService.getBalances());\n      const balances = await this.pendingBalancesRequest.result;\n      this.setState({balances, fetchError: false});\n    } catch (e) {\n      this.setState({balances: null, fetchError: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"balances-container\">\n        <h6>Balances</h6>\n\n        <LoadingContainer loading={!this.state.balances && !this.state.fetchError}>\n          {\n            !this.state.balances && this.state.fetchError &&\n            <p>Error</p>\n          }\n\n          {\n            this.state.balances && !this.state.fetchError &&\n            this.renderBalances()\n          }\n        </LoadingContainer>\n      </div>\n    );\n  }\n\n  static prepareNumber = (balance) => typeof balance === \"number\" ? balance.toFixed(2) : \"not available\";\n\n  renderBalances = () => {\n    const {tolokaSandbox, tolokaNormal, f8} = this.state.balances;\n    return (\n      <div>\n        <strong>Toloka Sandbox</strong>: {PlatformBalances.prepareNumber(tolokaSandbox)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(tolokaNormal)}$<br/>\n        <strong>Toloka</strong>: {PlatformBalances.prepareNumber(f8)}$<br/>\n      </div>\n    );\n  };\n\n}\n\n\nclass LogoutButton extends Component {\n\n  state = {\n    loggingOut: false,\n    loggedOut: false\n  };\n\n  onLogout = async () => {\n    this.setState({loggingOut: true});\n    try {\n      await AuthService.signOut();\n      this.setState({loggedOut: true});\n    } catch (e) {\n      console.error(e);\n      // TODO: Handle error\n    }\n    this.setState({loggingOut: false});\n  };\n\n  render() {\n    if (this.state.loggedOut) {\n      return this.renderRedirect();\n    }\n    return (\n      <LoadingButton isLoading={this.state.loggingOut} onClick={this.onLogout} block>Logout</LoadingButton>\n    );\n  }\n\n  renderRedirect = () => (\n    <Redirect to={LOGIN_PATH}/>\n  );\n}\n","import React, {Component} from 'react';\nimport menu from \"../../images/menu.svg\";\nimport {Navbar} from \"react-bootstrap\";\nimport AccountInformation from \"./AccountInformation\";\n\n\nexport default class AppBar extends Component {\n  render() {\n    return (\n      <Navbar className=\"light-background\" expand=\"lg\">\n        <div className=\"mr-auto\">\n          <button className=\"navbar-toggle button-link\" onClick={this.props.onToggleSidebar}>\n            <img src={menu} className=\"menu-icon\" alt=\"Toggle sidebar\"/>\n          </button>\n        </div>\n\n        <div>\n          <AccountInformation/>\n        </div>\n      </Navbar>\n    )\n  }\n\n\n}\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport {Projects, PROJECTS_PATH} from \"./Projects/Projects\";\nimport {PUBLIC_WORKFLOWS_PATH, PublicWorkflows, Workflows, WORKFLOWS_PATH} from \"./Workflows/Workflows\";\nimport AuthService from '../Services/AuthService';\nimport Login, {LOGIN_PATH} from \"./Login/Login\";\nimport LoadingContainer from \"./common/LoadingContainer\";\n\n\nexport default class AuthenticatedAppRouter extends Component {\n\n  state = {\n    authServiceInitialized: false\n  };\n\n  componentDidMount = () => this.initAuthService();\n\n  initAuthService = async () => {\n    await AuthService.init();\n    this.setState({authServiceInitialized: true});\n  };\n\n  render() {\n    if (!this.state.authServiceInitialized) {\n      return this.renderInitializingAuthService();\n    }\n    return this.renderRouter();\n  }\n\n  renderInitializingAuthService() {\n    return (\n      <div style={{height: '100vh'}}>\n        <LoadingContainer loading/>\n      </div>\n    );\n  }\n\n  renderRouter() {\n    return (\n      <AppRouter/>\n    );\n  }\n}\n\nconst AppRouter = () => (\n  <Switch>\n    {/* private routes */}\n    <PrivateRoute path={PROJECTS_PATH} component={Projects}/>\n    <PrivateRoute path={WORKFLOWS_PATH} component={Workflows}/>\n\n    {/* only public routes */}\n    <NotLoggedInRoute path={LOGIN_PATH} component={Login}/>\n\n    {/* private or public routes */}\n    <Route path={PUBLIC_WORKFLOWS_PATH} component={PublicWorkflows}/>\n\n    {/* default */}\n    <Route render={() => (<Redirect to={PROJECTS_PATH}/>)}/>\n  </Switch>\n);\n\nconst PrivateRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Component/> :\n           <Redirect to={LOGIN_PATH}/>\n         }/>\n);\n\n\nconst NotLoggedInRoute = ({path, component: Component}) => (\n  <Route path={path}\n         render={() => AuthService.isSignedIn() ?\n           <Redirect to={PROJECTS_PATH}/> :\n           <Component/>\n         }/>\n);\n\n\n","import React, {Component} from 'react';\nimport {HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport Sidebar from './Sidebar/Sidebar';\nimport AppBar from \"./Appbar/AppBar\";\nimport AuthenticatedAppRouter from \"./AppRouter\";\nimport AuthService from \"../Services/AuthService\";\n\nexport default class Layout extends Component {\n\n  state = {\n    sidebarOpen: false\n  };\n\n  componentDidMount() {\n    AuthService.addOnAuthChangeListener(() => this.forceUpdate());\n  }\n\n  render() {\n    const showSidebarAndAppBar = AuthService.isInitialized() && AuthService.isSignedIn();\n    return (\n      <HashRouter>\n        <div className=\"wrapper\">\n          {\n            /* Left collapsable sidebar */\n            showSidebarAndAppBar &&\n            <Sidebar sidebarOpen={this.state.sidebarOpen}/>\n          }\n\n          {/* Main content */}\n          <div className=\"content\" style={{'display': 'flex', 'flexDirection': 'column'}}>\n            {\n              showSidebarAndAppBar &&\n              <AppBar onToggleSidebar={this.onToggleSidebar}/>\n            }\n\n            <AuthenticatedAppRouter/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  onToggleSidebar = () => this.setState(previousState => {\n    return {sidebarOpen: !previousState.sidebarOpen}\n  });\n\n}\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout'\nimport './App.css';\n/* Initialize TinyMCE */\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce';\n// A theme is also required\nimport 'tinymce/themes/silver/theme';\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\n\n// Initialize the app\ntinymce.init({\n  selector: '#tiny',\n  plugins: ['paste', 'link']\n});\n/* End of TinyMCE initialization */\n\nclass App extends Component {\n  render() {\n    return (<Layout />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ignoreEventAnd = (callback) => (e) => {\n  e.stopPropagation();\n  //e.preventDefault();\n  callback();\n};\n","export default class Run {\n\n  id;\n  blockRuns;\n  createdAt;\n  workflowId;\n\n  constructor(id, blockRuns, createdAt, workflowId) {\n    this.id = id;\n    this.blockRuns = blockRuns;\n    this.createdAt = createdAt;\n    this.workflowId = workflowId;\n  }\n\n  getId = () => this.id;\n\n  getRunId = () => this.getId();\n\n  getBlockRuns = () => this.blockRuns;\n\n  getBlockRun = (blockId) => this.getBlockRuns().find(blockRun => blockRun.getBlockId() === blockId);\n\n  getCreatedAt = () => this.createdAt;\n\n  getWorkflowId = () => this.workflowId;\n\n  isRunning = () => this.getRunningBlockRuns().length > 0;\n\n  getRunningBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isRunning());\n\n  isFailed = () => this.getFailedBlockRuns().length > 0;\n\n  getFailedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFailed());\n\n  isFinished = () => this.getFinishedBlockRuns().length === this.getBlockRuns().length;\n\n  getFinishedBlockRuns = () => this.getBlockRuns().filter(blockRun => blockRun.isFinished());\n}\n","import {getJSON} from \"./utils\";\nimport {API_URL} from \"../../config\";\nimport Run from \"../RunnableWorkflowService/models/Run\";\nimport BlockRun from \"../RunnableWorkflowService/models/BlockRun\";\nimport Runs from \"../RunnableWorkflowService/models/Runs\";\n\nconst RUNS_URL = `${API_URL}/runs`;\n\nexport const JSONtoRun = ({id, data, created_at, id_workflow}) => {\n  const blockRuns = [];\n  Object.keys(data).forEach(blockId => {\n    const blockRun = data[blockId];\n\n    blockRuns.push(new BlockRun(\n      blockRun.state,\n      id,\n      blockRun.id_cache,\n      blockId\n    ));\n  });\n\n  return new Run(id, blockRuns, new Date(created_at), id_workflow);\n};\n\nconst runsComparator = (a, b) => b.getCreatedAt() - a.getCreatedAt();\n\nexport default {\n\n  async getRuns () {\n    return await this._getRuns(`${RUNS_URL}`);\n  },\n\n  async getRunsOfWorkflow(workflowId) {\n    return await this._getRuns(`${RUNS_URL}?workflowId=${workflowId}`);\n  },\n\n  async _getRuns(url) {\n    const jsonList = await getJSON(url);\n    const runs = jsonList.map(JSONtoRun);\n    runs.sort(runsComparator);\n    return new Runs(runs);\n  },\n\n  getDownloadLink(run, format) {\n    return `${RUNS_URL}/${run.id}/result?format=${format}`;\n  }\n\n}\n","export const RunStates = Object.freeze({\n  FAILED: 'runtimeError',\n  RUNNING: 'running',\n  FINISHED: 'finished',\n  NOT_STARTED: 'not started'\n});\nconst {FAILED, RUNNING, FINISHED} = RunStates;\n\nexport default class BlockRun {\n\n  blockId;\n  state;\n  runId;\n  cacheId;\n\n  constructor(state, runId, cacheId, blockId) {\n    this.blockId = blockId;\n    this.state = state;\n    this.runId = runId;\n    this.cacheId = cacheId;\n  }\n\n  getBlockId = () => this.blockId;\n\n  getState = () => this.state;\n\n  getRunId = () => this.runId;\n\n  getCacheId = () => this.cacheId;\n\n  isRunning = () => this.getState() === RUNNING;\n\n  isFailed = () => this.getState() === FAILED;\n\n  isFinished = () => this.getState() === FINISHED;\n}\n","import {PROJECTS_PATH} from \"../Projects\";\n\nexport const redirectToProjectsList = component => component.props.history.push(`${PROJECTS_PATH}`);\n","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\n\nimport AuthService from \"../../Services/AuthService\";\nimport {PROJECTS_PATH} from \"../Projects/Projects\";\nimport \"./Login.css\";\n\nexport const LOGIN_PATH = \"/login\";\n\nexport default class Login extends Component {\n\n  signInButtonRendered = false;\n\n  state = {\n    loggedIn: false\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return this.renderRedirect();\n    }\n    return this.renderLogin();\n  }\n\n  renderRedirect = () => (\n    <Redirect to={PROJECTS_PATH}/>\n  );\n\n  renderLogin = () => {\n    this.renderSignInButtonIfNeeded();\n    return (\n      <Container>\n        <Jumbotron style={{marginTop: '3em', textAlign: 'center'}}>\n          <h1>Welcome to Servant</h1>\n          <p>\n            Please login with your Google account to continue\n          </p>\n          <div id=\"google-signin-button\"/>\n        </Jumbotron>\n      </Container>\n    );\n  };\n\n  renderSignInButtonIfNeeded = () => {\n    if (!this.signInButtonRendered) {\n      this.renderSignInButton();\n      this.signInButtonRendered = true;\n    }\n  };\n\n  renderSignInButton = () => setImmediate(() => {\n    AuthService.renderSignInButton('google-signin-button', this.onSignedIn)\n  });\n\n  onSignedIn = () => this.setState({loggedIn: true});\n}\n\n\n"],"sourceRoot":""}